@model PublishedApplicationDetailslViewModel
@using MigrationTool.ViewModels

@{
    ViewBag.Title = "Details";
}

@Html.Partial("_Breadcrumb", new Breadcrumb(ViewBag.Title, new BreadcrumbItem { LinkText = "Published Applications", ControllerName = "PublishedApplication" }))
@if (User.IsInRole(MigrationTool.Roles.Edit) || User.IsInRole(MigrationTool.Roles.Admin))
{
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "btn btn-default btn-lg pull-right" })
}
<h2>@ViewBag.Title</h2>

<dl class="dl-horizontal">
    <dt>@Html.DisplayNameFor(model => model.Name)</dt>
    <dd>@Html.DisplayFor(model => model.Name)</dd>

    <dt>@Html.DisplayNameFor(model => model.XenAppFarm)</dt>
    <dd>@Html.DisplayFor(model => model.XenAppFarm)</dd>

    <dt>@Html.DisplayNameFor(model => model.Description)</dt>
    <dd>@Html.DisplayFor(model => model.Description)</dd>

    <dt>@Html.DisplayNameFor(model => model.BrowserName)</dt>
    <dd>@Html.DisplayFor(model => model.BrowserName)</dd>

    <dt>@Html.DisplayNameFor(model => model.CommandLineExecutable)</dt>
    <dd>@Html.DisplayFor(model => model.CommandLineExecutable)</dd>

    <dt>@Html.DisplayNameFor(model => model.XenAppFarmFolder)</dt>
    <dd>@Html.DisplayFor(model => model.XenAppFarmFolder)</dd>

    <dt>@Html.DisplayNameFor(model => model.CreatedDate)</dt>
    <dd>@Html.DisplayFor(model => model.CreatedDate)</dd>

    <dt>@Html.DisplayNameFor(model => model.LastUpdated)</dt>
    <dd>@Html.DisplayFor(model => model.LastUpdated)</dd>

    <dt>@Html.DisplayNameFor(model => model.Inactive)</dt>
    <dd>@Html.DisplayFor(model => model.Inactive)</dd>

    @if (Model.Inactive && Model.InactiveDate != null)
    {
        <dt>@Html.DisplayNameFor(model => model.InactiveDate)</dt>
        <dd>@Html.DisplayFor(model => model.InactiveDate)</dd>
    }
</dl>

<h2>Servers</h2>
@Html.Partial("../Server/_List", Model.XenAppServers)

<h2>Application Version</h2>

<div class="modal fade" id="removeConfirm">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span>&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Confirm</h4>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to remove this Application Version link?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="removeConfirmYes">Yes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addDialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span>&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Link Application Version</h4>
            </div>
            <div class="modal-body">
                @using (Ajax.BeginForm("SearchApplicationVersionSingleSelect", "ApplicationVersion", null, new AjaxOptions
                {
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "applicationVersionSearchResults",
                    LoadingElementId = "applicationVersionSearchLoader",
                    OnBegin = "$(\"#applicationVersionSearchLoader .spinner\").spin();",
                    OnComplete = "$(\"#applicationVersionSearchLoader .spinner\").spin(false);"
                }, new { id = "applicationVersionSearchForm" }))
                {
                    string search = "";
                    <div class="input-group">
                        @Html.TextBoxFor(model => search, new { @class = "form-control", id="applicationVersionSearchBox" })
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="submit">Search</button>
                        </span>
                    </div>
                    <p></p>
                    @Html.Partial("_Loader", "applicationVersionSearchLoader")
                    <div id="applicationVersionSearchResults"></div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" data-toggle="modal" data-target="#newApplicationVersionDialog">Create New Version</button>
                <button type="button" class="btn btn-default" data-dismiss="modal" data-toggle="modal" data-target="#newApplicationDialog">Create New Application & Version</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="addApplicationVersionLink">Link</button>
                 
            </div>
        </div>
    </div>
</div>

<div id="linkedApplicationVersionContainer" class="row">
    @Html.Partial("_LinkedApplicationVersion", Model)
</div>

<div class="modal fade" id="newApplicationDialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span>&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Create New Application</h4>
            </div>
            <div class="modal-body">
                @using (Ajax.BeginForm("NewApplication", null, new AjaxOptions
                {
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "linkedApplicationVersionContainer",
                    LoadingElementId = "newApplicationLoader",
                    OnBegin = "$(\"#newApplicationLoader .spinner\").spin();",
                    OnComplete = "$(\"#newApplicationLoader .spinner\").spin(false);"
                }, new { id = "newApplicationForm" }))
                {
                    @Html.Partial("../Application/_Create", new MigrationTool.Models.Application())
                    
                    @Html.Hidden("publishedApplicationId", Model.Id)
                    
                    <div class="form-group">
                            @Html.LabelFor(model => model.Version)
                            @Html.EditorFor(model => model.Version)
                            @Html.ValidationMessageFor(model => model.Version)
                        </div>
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.EndOfLifeDate)
                            @Html.EditorFor(model => model.EndOfLifeDate)
                            @Html.ValidationMessageFor(model => model.EndOfLifeDate)
                        </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Create</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="newApplicationVersionDialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span>&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Create New Application Version</h4>
            </div>
            <div class="modal-body">
                @using (Ajax.BeginForm("NewApplicationVersion", null, new AjaxOptions
                {
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "linkedApplicationVersionContainer",
                    LoadingElementId = "newApplicationLoader",
                    OnBegin = "$(\"#newApplicationLoader .spinner\").spin();",
                    OnComplete = "$(\"#newApplicationLoader .spinner\").spin(false);"
                }, new { id = "NewApplicationVersionForm" }))
                {
                    <div>
                        @Html.Partial("../ApplicationVersion/_Create", new MigrationTool.Models.ApplicationVersion())  
                    </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Create</button>
                        </div>
                }
             </div>
        </div>
    </div>
</div>

<!-- Business Solution -->
<h2>Business Solution</h2>

<div class="modal fade" id="removeBusinessSolutionConfirm">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span>&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Confirm</h4>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to remove this Business Solution link?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="removeBusinessSolutionConfirmYes">Yes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addBusinessSolutionDialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span>&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Link Business Solution</h4>
            </div>
            <div class="modal-body">
                @using (Ajax.BeginForm("SearchBusinessSolutionSingleSelect", "BusinessSolution", null, new AjaxOptions
                {
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "businessSolutionSearchResults",
                    LoadingElementId = "businessSolutionSearchLoader",
                    OnBegin = "$(\"#businessSolutionSearchLoader .spinner\").spin();",
                    OnComplete = "$(\"#businessSolutionSearchLoader .spinner\").spin(false);"
                }, new { id = "businessSolutionSearchForm" }))
                {
                    string search = "";
                    <div class="input-group">
                        @Html.TextBoxFor(model => search, new { @class = "form-control", id="businessSolutionSearchBox" })
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="submit">Search</button>
                        </span>
                    </div>
                    <p></p>
                    @Html.Partial("_Loader", "businessSolutionSearchLoader")
                    <div id="businessSolutionSearchResults"></div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="addBusinessSolutionLink">Link</button>
            </div>
        </div>
    </div>
</div>

<div id="linkedBusinessSolutionContainer" class="row">
    @Html.Partial("_LinkedBusinessSolution", Model)
</div>


<h2>Active Directory Groups</h2>
@Html.Partial("../ActiveDirectoryGroup/_List", Model.ActiveDirectoryGroups)

<h2>Static Users</h2>
@Html.Partial("../EntitledUser/_List", Model.EntitledUsers)

<h2>All Entitled Users</h2>
@{
    var users = Model.ActiveDirectoryGroups.SelectMany(x => x.EntitledUsers).Union(Model.EntitledUsers).Distinct().ToList();
    var entitlement = from u in users
                group u by u.Division into g
                select new { Division = g.Key, Count = g.Count()};
            
    DateTime now = DateTime.Now.AddDays(-30);
    var launches = (from l in Model.PublishedApplicationLaunches
                where l.StartTime >= now
                group l by l.EntitledUser.Division into g
                select new { Division = g.Key, Duration = TimeSpan.FromSeconds(g.Sum(x => x.Duration)) }).ToList();
                      
}          
<table class="table table-striped">
    <tr>
        <th>Division</th>
        <th class="text-right">Entitled Users</th>
        <th class="text-right">Usage Time (Past 30 Days)</th>
    </tr>
    @foreach (var item in entitlement.OrderByDescending(e => e.Count))
    {
        <tr>
            <th>@(item.Division == null ? "none" : item.Division.Name)</th>
            <td class="text-right">@Html.DisplayFor(model => item.Count, "IntThousands")</td>
            <td class="text-right">
                @{
                    var launchData = launches.Where(x => x.Division == item.Division).FirstOrDefault();
                    if (launchData != null)
                    {
                        int hours = (int)Math.Floor(launchData.Duration.TotalHours);
                        <text>@Html.DisplayFor(modelItem => hours, "IntThousands")h @(launchData.Duration.Minutes)m</text>
                    }
                    else
                    {
                        <text>0h 0m</text>
                    }
                }
            </td>
        </tr>
    }
    <tr>
        <th>Total</th>
        <th class="text-right">@Html.DisplayFor(modelItem => users.Count, "IntThousands")</th>
        <th class="text-right">
            @{
                TimeSpan totalTime = TimeSpan.FromSeconds(launches.Sum(x => x.Duration.TotalSeconds));
                int totalHours = (int)Math.Floor(totalTime.TotalHours);
            }
            @Html.DisplayFor(modelItem => totalHours, "IntThousands")h @(totalTime.Minutes)m
        </th>
    </tr>
</table>

@using (Ajax.BeginForm("GetUserList", new AjaxOptions
{
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "userListContainer",
    LoadingElementId = "userListLoader",
    OnBegin = "$(\"#userListLoader .spinner\").spin();",
    OnComplete = "$(\"#userListLoader .spinner\").spin(false);"
}))
{
    @Html.Hidden("publishedApplicationId", Model.Id)
    <button type="submit" class="btn btn-default">Full User List</button>
    <p></p>
}
@Html.Partial("_Loader", "userListLoader")
<div id="userListContainer">
</div>
<p></p>

<div class="row">
    @if (User.IsInRole(MigrationTool.Roles.Edit) || User.IsInRole(MigrationTool.Roles.Admin))
    {
        
        <div class="col-md-6">
            @Html.Partial("_NoteDetailsViewModelForm", Model)
        </div>
    }

    <div class="col-md-6">
        @Html.Partial("_TagDetailsViewModelForm", Model)
    </div>
</div>

@Html.Partial("_NoteDetailsViewModelList", Model)

@section Scripts {
    <script type="text/javascript">
        $(function () {
            configurePickers();
        });

        function configurePickers() {
            $(".datetimepicker").each(function () {
                var $this = $(this);
                $this.datetimepicker({
                    useCurrent: true,
                    useSeconds: false,
                    showToday: true,
                    sideBySide: true
                });
            });
        }

        $("#removeConfirmYes").click(function (e) {
            updateApplicationVersionLink("@Guid.Empty");
        });

        $("#addDialog").on("show.bs.modal", function () {
            $("#applicationVersionSearchResults").html("");
            $("#applicationVersionSearchForm").each(function () {
                this.reset();
            });
        });

        $("#addDialog").on("shown.bs.modal", function () {
            $("#applicationVersionSearchBox").focus();
        });

        $("#addApplicationVersionLink").click(function () {
            var selectedApplicationVersion = $("input[name=selectedApplicationVersion]:checked", "#applicationVersionSearchForm").val();
            if (selectedApplicationVersion) {
                updateApplicationVersionLink(selectedApplicationVersion);
            }
        });

        function updateApplicationVersionLink(newGuid) {
            $.ajax({
                url: "/PublishedApplication/SetApplicationVersionLink",
                data: {
                    publishedApplicationId: "@Model.Id",
                    applicationVersionId: newGuid
                },
                type: "POST",

                success: function(data) {
                    $("#linkedApplicationVersionContainer").html(data);
                }
            });
        }

        $("#newApplicationDialog").on("show.bs.modal", function (e) {
            $("#newApplicationForm").each(function () {
                this.reset();
            });
        })

        $("#newApplicationForm").submit(function () {
            $("#newApplicationDialog").modal("hide");
        });

        $("#newApplicationVersionDialog").on("show.bs.modal", function (e) {
            $("#NewApplicationVersionForm").each(function () {
                this.reset();
            });
        })

        $("#NewApplicationVersionForm").submit(function () {
            $("#newApplicationVersionDialog").modal("hide");
        });

        // Business Solution
        $("#removeBusinessSolutionConfirmYes").click(function (e) {
            updateBusinessSolutionLink("@Guid.Empty");
        });

        $("#addBusinessSolutionDialog").on("show.bs.modal", function () {
            $("#businessSolutionSearchResults").html("");
            $("#businessSolutionSearchForm").each(function () {
                this.reset();
            });
        });

        $("#addBusinessSolutionDialog").on("shown.bs.modal", function () {
            $("#businessSolutionSearchBox").focus();
        });

        $("#addBusinessSolutionLink").click(function () {
            var selectedBusinessSolution = $("input[name=selectedBusinessSolution]:checked", "#businessSolutionSearchForm").val();
            if (selectedBusinessSolution) {
                updateBusinessSolutionLink(selectedBusinessSolution);
            }
        });

        function updateBusinessSolutionLink(newGuid) {
            $.ajax({
                url: "/PublishedApplication/SetBusinessSolutionLink",
                data: {
                    publishedApplicationId: "@Model.Id",
                    businessSolutionId: newGuid
                },
                type: "POST",

                success: function (data) {
                    $("#linkedBusinessSolutionContainer").html(data);
                }
            });
        }
    </script>
}