@using MigrationTool.ViewModels;
@model DataStoreDetailsViewModel

@{
    ViewBag.Title = MigrationTool.Strings.DetailsAction;
}

<!-- Header and breadcrumbs -->
@Html.Partial("_Breadcrumb", new Breadcrumb(ViewBag.Title, new BreadcrumbItem { LinkText = MigrationTool.Strings.DataStorePlural, ControllerName = "DataStore" }))
@if (User.IsInRole(MigrationTool.Roles.Edit) || User.IsInRole(MigrationTool.Roles.Admin))
{
    @Html.ActionLink(MigrationTool.Strings.EditAction, "Edit", new { id = Model.Id }, new { @class = "btn btn-default btn-lg pull-right" })
}
<h2>@ViewBag.Title</h2>

<!-- Details -->
@Html.Partial("_Details", Model)

<!-- Tab headers -->
<ul class="nav nav-tabs" role="tablist">
    <li role="presentation" class="active"><a href="#DetailsTab" role="tab" data-toggle="tab">@MigrationTool.Strings.DetailPlural</a></li>
    <li role="presentation"><a href="#VirtualMachineTab" role="tab" data-toggle="tab">@Html.DisplayNameFor(model => model.ActiveVirtualMachineCount) (@Html.DisplayFor(model => model.ActiveVirtualMachineCount))</a></li>
    <li role="presentation"><a href="#VirtualHardDriveTab" role="tab" data-toggle="tab">@Html.DisplayNameFor(model => model.ActiveVirtualHardDriveCount) (@Html.DisplayFor(model => model.ActiveVirtualHardDriveCount))</a></li>
</ul>

<!-- Tab content -->
<div class="tab-content">
    <!-- Details tab -->
    <div role="tabpanel" class="tab-pane active" id="DetailsTab">
        <!-- Capacity -->
        <h2>@MigrationTool.Strings.VmCapacity</h2>

        <dl class="dl-horizontal">
            <dt>@Html.DisplayNameFor(model => model.TotalCapacity)</dt>
            <dd>@Html.DisplayFor(model => model.TotalCapacity)</dd>

            <dt>@Html.DisplayNameFor(model => model.UsedCapacity)</dt>
            <dd>@Html.DisplayFor(model => model.UsedCapacity)</dd>

            <dt>@Html.DisplayNameFor(model => model.UsedCapacityPercent)</dt>
            <dd>@Html.Partial("_ProgressBar_VmCapacity", Model)</dd>
        </dl>

        <h3>@Html.DisplayNameFor(model => model.CapacityRules)</h3>
        @if (Model.CapacityRulesInherited)
        {
           <div class="alert alert-info">
               @Html.DisplayNameFor(model => model.CapacityRulesInherited)
           </div>
        }
        @Html.Partial("../CapacityRule/_ListCalculation", Model.CapacityRules)
        @if (!Model.CapacityRulesInherited)
        {
            <button>@MigrationTool.Strings.EditAction</button>
        }

        <!-- Notes and Tags -->
        <div class="row">
            @if (User.IsInRole(MigrationTool.Roles.Edit) || User.IsInRole(MigrationTool.Roles.Admin))
            {
                <div class="col-md-6">
                    @Html.Partial("_NoteDetailsViewModelForm", Model)
                </div>
            }

            <div class="col-md-6">
                @Html.Partial("_TagDetailsViewModelForm", Model)
            </div>

        </div>

        @Html.Partial("_NoteDetailsViewModelList", Model)
    </div>

    <!-- Virtual Machine Tab-->
    <div role="tabpanel" class="tab-pane" id="VirtualMachineTab">
           @Html.Partial("_Loader", "VirtualMachineListLoader")
            @using (Ajax.BeginForm("GetVirtualMachineList",null, new AjaxOptions
        {
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "VirtualMachineList",
            LoadingElementId = "VirtualMachineListLoader",
            OnBegin = "$('#VirtualMachineListLoader .spinner').spin(true);",
            OnComplete = "$('#VirtualMachineListLoader .spinner').spin(false);"
        }, new { id = "VirtualMachineListForm" }))
        {
                @Html.Hidden("Id", Model.Id)
        }
        <div id="VirtualMachineList"></div>
    </div>

     <!-- Virtual Hard Drive Tab-->
    <div role="tabpanel" class="tab-pane" id="VirtualHardDriveTab">
        @Html.Partial("_Loader", "VirtualHardDriveListLoader")
        @using (Ajax.BeginForm("GetVirtualHardDriveList",null, new AjaxOptions
        {
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "VirtualHardDriveList",
            LoadingElementId = "VirtualHardDriveListLoader",
            OnBegin = "$('#VirtualHardDriveListLoader .spinner').spin(true);",
            OnComplete = "$('#VirtualHardDriveListLoader .spinner').spin(false);"
        }, new { id = "VirtualHardDriveListForm" }))
        {
            @Html.Hidden("Id", Model.Id)
        }
        <div id="VirtualHardDriveList"></div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        // Track what has already been loaded.
        var virtualMachineListLoaded = false;
        var virtualHardDriveListLoaded = false;

        // Event handler for switching tabs.
        $('a[data-toggle="tab"]').on('show.bs.tab', function (e) {
            // Tab about to become active.
            var target = $(e.target).attr('href');

            switch (target) {
                // VirtualMachineList
                case '#VirtualMachineTab':
                    if (!virtualMachineListLoaded) {
                        virtualMachineListLoaded = true;
                        $('form#VirtualMachineListForm').submit();
                    }
                    break;
                    // VirtualHardDriveList
                case '#VirtualHardDriveTab':
                    if (!virtualHardDriveListLoaded) {
                        virtualHardDriveListLoaded = true;
                        $('form#VirtualHardDriveListForm').submit();
                    }
                    break;
            }
        });
    </script>
}