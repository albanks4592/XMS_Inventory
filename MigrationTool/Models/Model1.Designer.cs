//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "ActiveDirectoryGroupsEntitledUsers", "ActiveDirectoryGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.ActiveDirectoryGroup), "EntitledUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.EntitledUser))]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ActiveDirectoryGroups", "ActiveDirectoryGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.ActiveDirectoryGroup), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_EntitledUsers", "EntitledUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.EntitledUser), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenAppFarmFolders", "XenAppFarmFolder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenAppFarmFolder), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenAppFarms", "XenAppFarm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenAppFarm), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_XenAppFarmFolders_XenAppFarmFolders", "XenAppFarmFolder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.XenAppFarmFolder), "XenAppFarmFolder1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenAppFarmFolder), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_XenAppFarmFolders_XenAppFarms", "XenAppFarm", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.XenAppFarm), "XenAppFarmFolder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenAppFarmFolder), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Tags", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.Tag), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenAppFarms", "XenAppFarm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenAppFarm), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenAppFarmFolders", "XenAppFarmFolder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenAppFarmFolder), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ActiveDirectoryGroups", "ActiveDirectoryGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.ActiveDirectoryGroup), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_EntitledUsers_Divisions", "Division", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.Division), "EntitledUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.EntitledUser), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_EntitledUsers", "EntitledUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.EntitledUser), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Divisions", "Division", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.Division), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Divisions", "Division", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.Division), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_ApplicationOwners_Divisions", "Division", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.Division), "ApplicationOwner", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.ApplicationOwner), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_ApplicationsApplicationOwners_ApplicationOwners", "ApplicationOwner", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.ApplicationOwner), "ApplicationsApplicationOwner", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.ApplicationsApplicationOwner), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ApplicationOwners", "ApplicationOwner", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.ApplicationOwner), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ApplicationOwners", "ApplicationOwner", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.ApplicationOwner), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ApplicationGroups", "ApplicationGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.ApplicationGroup), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ApplicationGroups", "ApplicationGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.ApplicationGroup), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.User), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Platforms", "Platform", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.Platform), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Platforms", "Platform", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.Platform), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ApplicationVersions", "ApplicationVersion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.ApplicationVersion), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ApplicationVersions", "ApplicationVersion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.ApplicationVersion), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Applications_ApplicationGroups", "ApplicationGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.ApplicationGroup), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Application), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Applications_ApplicationVersions", "ApplicationVersion", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.ApplicationVersion), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Application), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Applications_ApplicationVersions1", "ApplicationVersion", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.ApplicationVersion), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Application), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Applications_Complexities", "Complexity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.Complexity), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Application), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_ApplicationsApplicationOwners_Applications", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.Application), "ApplicationsApplicationOwner", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.ApplicationsApplicationOwner), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_ApplicationVersions_Applications", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.Application), "ApplicationVersion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.ApplicationVersion), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Applications", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.Application), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Applications", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.Application), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ResponsibleParties", "ResponsibleParty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.ResponsibleParty), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowDefinition", "WorkflowDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowDefinition), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowDurationEstimate", "WorkflowDurationEstimate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowDurationEstimate), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowStepActivity", "WorkflowStepActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowStepActivity), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowStepDefinition", "WorkflowStepDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowStepDefinition), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepActivities_ResponsibleParties", "ResponsibleParty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.ResponsibleParty), "WorkflowStepActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.WorkflowStepActivity), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepDefinitions_ResponsibleParties", "ResponsibleParty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.ResponsibleParty), "WorkflowStepDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.WorkflowStepDefinition), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowDurationEstimates_WorkflowDefinitions", "WorkflowDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowDefinition), "WorkflowDurationEstimate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.WorkflowDurationEstimate), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepDefinitions_WorkflowDefinitions", "WorkflowDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowDefinition), "WorkflowStepDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.WorkflowStepDefinition), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowDurationEstimateDetail", "WorkflowDurationEstimateDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowDurationEstimateDetail), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowStepInstance", "WorkflowStepInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowStepInstance), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowDurationEstimateDetails_WorkflowDurationEstimates", "WorkflowDurationEstimate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowDurationEstimate), "WorkflowDurationEstimateDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.WorkflowDurationEstimateDetail), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowDurationEstimateDetails_WorkflowStepDefinitions", "WorkflowStepDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowStepDefinition), "WorkflowDurationEstimateDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.WorkflowDurationEstimateDetail), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepActivities_WorkflowStepInstances", "WorkflowStepInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowStepInstance), "WorkflowStepActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.WorkflowStepActivity), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepInstances_WorkflowStepDefinitions", "WorkflowStepDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowStepDefinition), "WorkflowStepInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.WorkflowStepInstance), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepActivities_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.User), "WorkflowStepActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.WorkflowStepActivity), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepActivities_Users1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.User), "WorkflowStepActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.WorkflowStepActivity), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepInstances_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.User), "WorkflowStepInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.WorkflowStepInstance), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepInstances_Users1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.User), "WorkflowStepInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.WorkflowStepInstance), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ResponsibleParties", "ResponsibleParty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.ResponsibleParty), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowDefinitions", "WorkflowDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowDefinition), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowDurationEstimateDetails", "WorkflowDurationEstimateDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowDurationEstimateDetail), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowDurationEstimates", "WorkflowDurationEstimate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowDurationEstimate), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowStepActivities", "WorkflowStepActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowStepActivity), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowStepDefinitions", "WorkflowStepDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowStepDefinition), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowStepInstances", "WorkflowStepInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowStepInstance), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplicationLaunches_EntitledUsers", "EntitledUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.EntitledUser), "PublishedApplicationLaunch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.PublishedApplicationLaunch), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Binaries_ClarityEntries", "ClarityEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.ClarityEntry), "Binary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Binary), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Binaries", "Binary", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.Binary), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Binaries", "Binary", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.Binary), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ClarityEntries", "ClarityEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.ClarityEntry), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ClarityEntries", "ClarityEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.ClarityEntry), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_IqDocuments", "IqDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.IqDocument), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_CustomerGroups1", "StrategicVendor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.StrategicVendor), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_CustomerGroups1", "StrategicVendor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.StrategicVendor), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_StrategicVendors", "StrategicVendor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.StrategicVendor), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplications_ApplicationVersions", "ApplicationVersion", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.ApplicationVersion), "PublishedApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.PublishedApplication), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_PublishedApplications", "PublishedApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.PublishedApplication), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplicationLaunches_PublishedApplications", "PublishedApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.PublishedApplication), "PublishedApplicationLaunch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.PublishedApplicationLaunch), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplications_XenAppFarmFolders", "XenAppFarmFolder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenAppFarmFolder), "PublishedApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.PublishedApplication), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplications_XenAppFarms", "XenAppFarm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenAppFarm), "PublishedApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.PublishedApplication), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_PublishedApplications", "PublishedApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.PublishedApplication), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "PublishedApplicationsActiveDirectoryGroups", "ActiveDirectoryGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.ActiveDirectoryGroup), "PublishedApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.PublishedApplication))]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "PublishedApplicationsEntitledUsers", "EntitledUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.EntitledUser), "PublishedApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.PublishedApplication))]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_IqDocuments", "IqDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.IqDocument), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "ApplicationsBinaries", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Application), "Binary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Binary))]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "BinariesPlatforms", "Binary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Binary), "Platform", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Platform))]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowInstance", "WorkflowInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowInstance), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowInstances", "WorkflowInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowInstance), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowInstances_WorkflowDefinitions", "WorkflowDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowDefinition), "WorkflowInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.WorkflowInstance), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowInstances_WorkflowDurationEstimates", "WorkflowDurationEstimate", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.WorkflowDurationEstimate), "WorkflowInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.WorkflowInstance), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepInstances_WorkflowInstances", "WorkflowInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.WorkflowInstance), "WorkflowStepInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.WorkflowStepInstance), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_BusinessSolutions_ClarityEntries", "ClarityEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.ClarityEntry), "BusinessSolution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.BusinessSolution), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_BusinessSolutions_WorkflowInstances", "WorkflowInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.WorkflowInstance), "BusinessSolution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.BusinessSolution), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_BusinessSolutions", "BusinessSolution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.BusinessSolution), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplications_BusinessSolutions", "BusinessSolution", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.BusinessSolution), "PublishedApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.PublishedApplication), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_BusinessSolutions", "BusinessSolution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.BusinessSolution), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowInstances_BusinessSolutions", "BusinessSolution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.BusinessSolution), "WorkflowInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.WorkflowInstance), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "BusinessSolutionsBinaries", "Binary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Binary), "BusinessSolution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.BusinessSolution))]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "BusinessSolutionsDivisions", "BusinessSolution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.BusinessSolution), "Division", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Division))]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "BusinessSolutionsIqDocuments", "BusinessSolution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.BusinessSolution), "IqDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.IqDocument))]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "BusinessSolutionsStrategicVendors", "BusinessSolution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.BusinessSolution), "StrategicVendor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.StrategicVendor))]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_BusinessSolutions_WorkflowDefinitions1", "WorkflowDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.WorkflowDefinition), "BusinessSolution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.BusinessSolution), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_BusinessSolutions_BusinessActions", "BusinessAction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.BusinessAction), "BusinessSolution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.BusinessSolution), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_BusinessActions", "BusinessAction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.BusinessAction), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_BusinessActions", "BusinessAction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.BusinessAction), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Hypervisors_HypervisorGroups", "HypervisorGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.HypervisorGroup), "Hypervisor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Hypervisor), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Hypervisors_HypervisorTypes", "HypervisorType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.HypervisorType), "Hypervisor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Hypervisor), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_HypervisorGroups", "HypervisorGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.HypervisorGroup), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_HypervisorGroups", "HypervisorGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.HypervisorGroup), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Hypervisors", "Hypervisor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.Hypervisor), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Hypervisors", "Hypervisor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.Hypervisor), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_HypervisorTypes", "HypervisorType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.HypervisorType), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_HypervisorTypes", "HypervisorType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.HypervisorType), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_VirtualMachineTypes", "VirtualMachineType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.VirtualMachineType), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_VirtualMachineTypes", "VirtualMachineType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.VirtualMachineType), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Hypervisors_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.HypervisorWorkloadProfile), "Hypervisor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Hypervisor), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_VirtualMachines_Hypervisors", "Hypervisor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.Hypervisor), "VirtualMachine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.VirtualMachine), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_VirtualMachines", "VirtualMachine", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.VirtualMachine), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_VirtualMachines", "VirtualMachine", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.VirtualMachine), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_VirtualMachines_VirtualMachineTypes", "VirtualMachineType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.VirtualMachineType), "VirtualMachine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.VirtualMachine), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopBrokerDesktops_VirtualMachines", "VirtualMachine", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.VirtualMachine), "XenDesktopBrokerDesktop", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenDesktopBrokerDesktop), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "XenDesktopBrokerDesktopsEntitledUsers", "EntitledUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.EntitledUser), "XenDesktopBrokerDesktop", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenDesktopBrokerDesktop))]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.HypervisorWorkloadProfile), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.HypervisorWorkloadProfile), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenDesktopBrokerDesktop), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenDesktopBrokerDesktop), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenDesktopCatalogs", "XenDesktopCatalog", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenDesktopCatalog), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenDesktopServers", "XenDesktopServer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenDesktopServer), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenDesktopSites", "XenDesktopSite", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenDesktopSite), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenDesktopCatalogs", "XenDesktopCatalog", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenDesktopCatalog), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenDesktopServers", "XenDesktopServer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenDesktopServer), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenDesktopSites", "XenDesktopSite", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenDesktopSite), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopServers_VirtualMachines", "VirtualMachine", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.VirtualMachine), "XenDesktopServer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenDesktopServer), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopBrokerDesktops_XenDesktopCatalogs", "XenDesktopCatalog", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenDesktopCatalog), "XenDesktopBrokerDesktop", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenDesktopBrokerDesktop), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopCatalogs_XenDesktopSites", "XenDesktopSite", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenDesktopSite), "XenDesktopCatalog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenDesktopCatalog), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopServers_XenDesktopSites", "XenDesktopSite", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenDesktopSite), "XenDesktopServer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenDesktopServer), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "BusinessSolutionsApplications", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Application), "BusinessSolution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.BusinessSolution))]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_HypervisorGroups_HypervisorGroupTypes", "HypervisorGroupType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.HypervisorGroupType), "HypervisorGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.HypervisorGroup), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopCatalogs_XenDesktopCatalogTypes", "XenDesktopCatalogType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.XenDesktopCatalogType), "XenDesktopCatalog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenDesktopCatalog), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_HypervisorGroupTypes", "HypervisorGroupType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.HypervisorGroupType), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_HypervisorGroupTypes", "HypervisorGroupType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.HypervisorGroupType), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenDesktopCatalogTypes", "XenDesktopCatalogType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenDesktopCatalogType), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenDesktopCatalogTypes", "XenDesktopCatalogType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenDesktopCatalogType), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenAppServerRoles", "XenAppServerRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenAppServerRole), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenAppServerRoles", "XenAppServerRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenAppServerRole), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenAppServers", "XenAppServer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenAppServer), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenAppServers", "XenAppServer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenAppServer), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_XenAppServers_VirtualMachines", "VirtualMachine", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.VirtualMachine), "XenAppServer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenAppServer), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_XenAppServers_VirtualMachineTypes", "VirtualMachineType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.VirtualMachineType), "XenAppServer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenAppServer), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_XenAppServers_XenAppFarmFolders", "XenAppFarmFolder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenAppFarmFolder), "XenAppServer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenAppServer), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_XenAppServers_XenAppFarms", "XenAppFarm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenAppFarm), "XenAppServer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenAppServer), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_XenAppServers_XenAppServerRoles", "XenAppServerRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenAppServerRole), "XenAppServer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenAppServer), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "PublishedApplicationsXenAppServers", "PublishedApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.PublishedApplication), "XenAppServer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenAppServer))]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenAppFarmVersions", "XenAppFarmVersion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenAppFarmVersion), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenAppFarmVersions", "XenAppFarmVersion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenAppFarmVersion), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_XenAppFarms_XenAppFarmVersions", "XenAppFarmVersion", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.XenAppFarmVersion), "XenAppFarm", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenAppFarm), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_MigrationGroups", "MigrationGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.MigrationGroup), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_MigrationGroups", "MigrationGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.MigrationGroup), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_XenAppFarms_MigrationGroups", "MigrationGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.MigrationGroup), "XenAppFarm", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenAppFarm), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_InventoryMachines", "InventoryMachine", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.InventoryMachine), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_InventoryMachines", "InventoryMachine", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.InventoryMachine), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Applications_ClarityEntries", "ClarityEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.ClarityEntry), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Application), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_PublishedApplicationLevels", "PublishedApplicationLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.PublishedApplicationLevel), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_PublishedApplicationLevels", "PublishedApplicationLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.PublishedApplicationLevel), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplicationLaunches_XenAppServers", "XenAppServer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.XenAppServer), "PublishedApplicationLaunch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.PublishedApplicationLaunch), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopBrokerConnections_EntitledUsers", "EntitledUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.EntitledUser), "XenDesktopBrokerConnection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenDesktopBrokerConnection), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopBrokerConnections_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.XenDesktopBrokerDesktop), "XenDesktopBrokerConnection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.XenDesktopBrokerConnection), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_DataStore_DataStoreGroup", "DataStoreGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.DataStoreGroup), "DataStore", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.DataStore), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_VirtualHardDrive_DataStore", "DataStore", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.DataStore), "VirtualHardDrive", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.VirtualHardDrive), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "DataStoresHypervisors", "DataStore", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.DataStore), "Hypervisor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Hypervisor))]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "VirtualMachinesVirtualHardDrives", "VirtualHardDrive", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.VirtualHardDrive), "VirtualMachine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.VirtualMachine))]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_DataStoreGroups", "DataStoreGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.DataStoreGroup), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_DataStoreGroups", "DataStoreGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.DataStoreGroup), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_DataStores", "DataStore", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.DataStore), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_DataStores", "DataStore", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.DataStore), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_VirtualHardDrives", "VirtualHardDrive", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.VirtualHardDrive), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_VirtualHardDrives", "VirtualHardDrive", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.VirtualHardDrive), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_DataStores_DataStoreCategories", "DataStoreCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.DataStoreCategory), "DataStore", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.DataStore), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_DataStoreCategories", "DataStoreCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.DataStoreCategory), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_DataStoreCategories", "DataStoreCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.DataStoreCategory), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "historical_fk", "DataSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.DataSource), "DataSourcesStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.DataSourcesStatu), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_DataStoreGroups_HypervisorControllers", "HypervisorController", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.HypervisorController), "DataStoreGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.DataStoreGroup), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_HypervisorGroups_HypervisorControllers", "HypervisorController", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.HypervisorController), "HypervisorGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.HypervisorGroup), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Hypervisors_HypervisorControllers", "HypervisorController", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.HypervisorController), "Hypervisor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Hypervisor), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_HypervisorControllers", "HypervisorController", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.HypervisorController), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_HypervisorControllers", "HypervisorController", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.HypervisorController), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_CapacityRulesMeta_CapacityRules", "CapacityRule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.CapacityRule), "CapacityRulesMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.CapacityRulesMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_Notes_CapacityRules", "CapacityRule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.CapacityRule), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.Note), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_CapacityRules", "CapacityRule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.CapacityRule), "TagsMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.TagsMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_CapacityRulesMeta_DataStoreGroups", "DataStoreGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.DataStoreGroup), "CapacityRulesMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.CapacityRulesMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_CapacityRulesMeta_DataStores", "DataStore", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.DataStore), "CapacityRulesMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.CapacityRulesMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_CapacityRulesMeta_HypervisorGroups", "HypervisorGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.HypervisorGroup), "CapacityRulesMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.CapacityRulesMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_CapacityRulesMeta_Hypervisors", "Hypervisor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.Hypervisor), "CapacityRulesMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MigrationTool.Models.CapacityRulesMeta), true)]
[assembly: EdmRelationshipAttribute("MigrationTool_DevelopmentModel", "FK_HypervisorGroups_CapacityStatistics", "CapacityStatistic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MigrationTool.Models.CapacityStatistic), "HypervisorGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MigrationTool.Models.HypervisorGroup), true)]

#endregion

namespace MigrationTool.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MigrationToolEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MigrationToolEntities object using the connection string found in the 'MigrationToolEntities' section of the application configuration file.
        /// </summary>
        public MigrationToolEntities() : base("name=MigrationToolEntities", "MigrationToolEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MigrationToolEntities object.
        /// </summary>
        public MigrationToolEntities(string connectionString) : base(connectionString, "MigrationToolEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MigrationToolEntities object.
        /// </summary>
        public MigrationToolEntities(EntityConnection connection) : base(connection, "MigrationToolEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActiveDirectoryGroup> ActiveDirectoryGroups
        {
            get
            {
                if ((_ActiveDirectoryGroups == null))
                {
                    _ActiveDirectoryGroups = base.CreateObjectSet<ActiveDirectoryGroup>("ActiveDirectoryGroups");
                }
                return _ActiveDirectoryGroups;
            }
        }
        private ObjectSet<ActiveDirectoryGroup> _ActiveDirectoryGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntitledUser> EntitledUsers
        {
            get
            {
                if ((_EntitledUsers == null))
                {
                    _EntitledUsers = base.CreateObjectSet<EntitledUser>("EntitledUsers");
                }
                return _EntitledUsers;
            }
        }
        private ObjectSet<EntitledUser> _EntitledUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Note> Notes
        {
            get
            {
                if ((_Notes == null))
                {
                    _Notes = base.CreateObjectSet<Note>("Notes");
                }
                return _Notes;
            }
        }
        private ObjectSet<Note> _Notes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<XenAppFarmFolder> XenAppFarmFolders
        {
            get
            {
                if ((_XenAppFarmFolders == null))
                {
                    _XenAppFarmFolders = base.CreateObjectSet<XenAppFarmFolder>("XenAppFarmFolders");
                }
                return _XenAppFarmFolders;
            }
        }
        private ObjectSet<XenAppFarmFolder> _XenAppFarmFolders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<XenAppFarm> XenAppFarms
        {
            get
            {
                if ((_XenAppFarms == null))
                {
                    _XenAppFarms = base.CreateObjectSet<XenAppFarm>("XenAppFarms");
                }
                return _XenAppFarms;
            }
        }
        private ObjectSet<XenAppFarm> _XenAppFarms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TagsMeta> TagsMetas
        {
            get
            {
                if ((_TagsMetas == null))
                {
                    _TagsMetas = base.CreateObjectSet<TagsMeta>("TagsMetas");
                }
                return _TagsMetas;
            }
        }
        private ObjectSet<TagsMeta> _TagsMetas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Division> Divisions
        {
            get
            {
                if ((_Divisions == null))
                {
                    _Divisions = base.CreateObjectSet<Division>("Divisions");
                }
                return _Divisions;
            }
        }
        private ObjectSet<Division> _Divisions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationOwner> ApplicationOwners
        {
            get
            {
                if ((_ApplicationOwners == null))
                {
                    _ApplicationOwners = base.CreateObjectSet<ApplicationOwner>("ApplicationOwners");
                }
                return _ApplicationOwners;
            }
        }
        private ObjectSet<ApplicationOwner> _ApplicationOwners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationsApplicationOwner> ApplicationsApplicationOwners
        {
            get
            {
                if ((_ApplicationsApplicationOwners == null))
                {
                    _ApplicationsApplicationOwners = base.CreateObjectSet<ApplicationsApplicationOwner>("ApplicationsApplicationOwners");
                }
                return _ApplicationsApplicationOwners;
            }
        }
        private ObjectSet<ApplicationsApplicationOwner> _ApplicationsApplicationOwners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationGroup> ApplicationGroups
        {
            get
            {
                if ((_ApplicationGroups == null))
                {
                    _ApplicationGroups = base.CreateObjectSet<ApplicationGroup>("ApplicationGroups");
                }
                return _ApplicationGroups;
            }
        }
        private ObjectSet<ApplicationGroup> _ApplicationGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Complexity> Complexities
        {
            get
            {
                if ((_Complexities == null))
                {
                    _Complexities = base.CreateObjectSet<Complexity>("Complexities");
                }
                return _Complexities;
            }
        }
        private ObjectSet<Complexity> _Complexities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Platform> Platforms
        {
            get
            {
                if ((_Platforms == null))
                {
                    _Platforms = base.CreateObjectSet<Platform>("Platforms");
                }
                return _Platforms;
            }
        }
        private ObjectSet<Platform> _Platforms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationVersion> ApplicationVersions
        {
            get
            {
                if ((_ApplicationVersions == null))
                {
                    _ApplicationVersions = base.CreateObjectSet<ApplicationVersion>("ApplicationVersions");
                }
                return _ApplicationVersions;
            }
        }
        private ObjectSet<ApplicationVersion> _ApplicationVersions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Application> Applications
        {
            get
            {
                if ((_Applications == null))
                {
                    _Applications = base.CreateObjectSet<Application>("Applications");
                }
                return _Applications;
            }
        }
        private ObjectSet<Application> _Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResponsibleParty> ResponsibleParties
        {
            get
            {
                if ((_ResponsibleParties == null))
                {
                    _ResponsibleParties = base.CreateObjectSet<ResponsibleParty>("ResponsibleParties");
                }
                return _ResponsibleParties;
            }
        }
        private ObjectSet<ResponsibleParty> _ResponsibleParties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkflowDefinition> WorkflowDefinitions
        {
            get
            {
                if ((_WorkflowDefinitions == null))
                {
                    _WorkflowDefinitions = base.CreateObjectSet<WorkflowDefinition>("WorkflowDefinitions");
                }
                return _WorkflowDefinitions;
            }
        }
        private ObjectSet<WorkflowDefinition> _WorkflowDefinitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkflowDurationEstimate> WorkflowDurationEstimates
        {
            get
            {
                if ((_WorkflowDurationEstimates == null))
                {
                    _WorkflowDurationEstimates = base.CreateObjectSet<WorkflowDurationEstimate>("WorkflowDurationEstimates");
                }
                return _WorkflowDurationEstimates;
            }
        }
        private ObjectSet<WorkflowDurationEstimate> _WorkflowDurationEstimates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkflowStepActivity> WorkflowStepActivities
        {
            get
            {
                if ((_WorkflowStepActivities == null))
                {
                    _WorkflowStepActivities = base.CreateObjectSet<WorkflowStepActivity>("WorkflowStepActivities");
                }
                return _WorkflowStepActivities;
            }
        }
        private ObjectSet<WorkflowStepActivity> _WorkflowStepActivities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkflowStepDefinition> WorkflowStepDefinitions
        {
            get
            {
                if ((_WorkflowStepDefinitions == null))
                {
                    _WorkflowStepDefinitions = base.CreateObjectSet<WorkflowStepDefinition>("WorkflowStepDefinitions");
                }
                return _WorkflowStepDefinitions;
            }
        }
        private ObjectSet<WorkflowStepDefinition> _WorkflowStepDefinitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkflowDurationEstimateDetail> WorkflowDurationEstimateDetails
        {
            get
            {
                if ((_WorkflowDurationEstimateDetails == null))
                {
                    _WorkflowDurationEstimateDetails = base.CreateObjectSet<WorkflowDurationEstimateDetail>("WorkflowDurationEstimateDetails");
                }
                return _WorkflowDurationEstimateDetails;
            }
        }
        private ObjectSet<WorkflowDurationEstimateDetail> _WorkflowDurationEstimateDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkflowStepInstance> WorkflowStepInstances
        {
            get
            {
                if ((_WorkflowStepInstances == null))
                {
                    _WorkflowStepInstances = base.CreateObjectSet<WorkflowStepInstance>("WorkflowStepInstances");
                }
                return _WorkflowStepInstances;
            }
        }
        private ObjectSet<WorkflowStepInstance> _WorkflowStepInstances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PublishedApplicationLaunch> PublishedApplicationLaunches
        {
            get
            {
                if ((_PublishedApplicationLaunches == null))
                {
                    _PublishedApplicationLaunches = base.CreateObjectSet<PublishedApplicationLaunch>("PublishedApplicationLaunches");
                }
                return _PublishedApplicationLaunches;
            }
        }
        private ObjectSet<PublishedApplicationLaunch> _PublishedApplicationLaunches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Binary> Binaries
        {
            get
            {
                if ((_Binaries == null))
                {
                    _Binaries = base.CreateObjectSet<Binary>("Binaries");
                }
                return _Binaries;
            }
        }
        private ObjectSet<Binary> _Binaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClarityEntry> ClarityEntries
        {
            get
            {
                if ((_ClarityEntries == null))
                {
                    _ClarityEntries = base.CreateObjectSet<ClarityEntry>("ClarityEntries");
                }
                return _ClarityEntries;
            }
        }
        private ObjectSet<ClarityEntry> _ClarityEntries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IqDocument> IqDocuments
        {
            get
            {
                if ((_IqDocuments == null))
                {
                    _IqDocuments = base.CreateObjectSet<IqDocument>("IqDocuments");
                }
                return _IqDocuments;
            }
        }
        private ObjectSet<IqDocument> _IqDocuments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StrategicVendor> StrategicVendors
        {
            get
            {
                if ((_StrategicVendors == null))
                {
                    _StrategicVendors = base.CreateObjectSet<StrategicVendor>("StrategicVendors");
                }
                return _StrategicVendors;
            }
        }
        private ObjectSet<StrategicVendor> _StrategicVendors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PublishedApplication> PublishedApplications
        {
            get
            {
                if ((_PublishedApplications == null))
                {
                    _PublishedApplications = base.CreateObjectSet<PublishedApplication>("PublishedApplications");
                }
                return _PublishedApplications;
            }
        }
        private ObjectSet<PublishedApplication> _PublishedApplications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkflowInstance> WorkflowInstances
        {
            get
            {
                if ((_WorkflowInstances == null))
                {
                    _WorkflowInstances = base.CreateObjectSet<WorkflowInstance>("WorkflowInstances");
                }
                return _WorkflowInstances;
            }
        }
        private ObjectSet<WorkflowInstance> _WorkflowInstances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BusinessSolution> BusinessSolutions
        {
            get
            {
                if ((_BusinessSolutions == null))
                {
                    _BusinessSolutions = base.CreateObjectSet<BusinessSolution>("BusinessSolutions");
                }
                return _BusinessSolutions;
            }
        }
        private ObjectSet<BusinessSolution> _BusinessSolutions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BusinessAction> BusinessActions
        {
            get
            {
                if ((_BusinessActions == null))
                {
                    _BusinessActions = base.CreateObjectSet<BusinessAction>("BusinessActions");
                }
                return _BusinessActions;
            }
        }
        private ObjectSet<BusinessAction> _BusinessActions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HypervisorGroup> HypervisorGroups
        {
            get
            {
                if ((_HypervisorGroups == null))
                {
                    _HypervisorGroups = base.CreateObjectSet<HypervisorGroup>("HypervisorGroups");
                }
                return _HypervisorGroups;
            }
        }
        private ObjectSet<HypervisorGroup> _HypervisorGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Hypervisor> Hypervisors
        {
            get
            {
                if ((_Hypervisors == null))
                {
                    _Hypervisors = base.CreateObjectSet<Hypervisor>("Hypervisors");
                }
                return _Hypervisors;
            }
        }
        private ObjectSet<Hypervisor> _Hypervisors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HypervisorType> HypervisorTypes
        {
            get
            {
                if ((_HypervisorTypes == null))
                {
                    _HypervisorTypes = base.CreateObjectSet<HypervisorType>("HypervisorTypes");
                }
                return _HypervisorTypes;
            }
        }
        private ObjectSet<HypervisorType> _HypervisorTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VirtualMachineType> VirtualMachineTypes
        {
            get
            {
                if ((_VirtualMachineTypes == null))
                {
                    _VirtualMachineTypes = base.CreateObjectSet<VirtualMachineType>("VirtualMachineTypes");
                }
                return _VirtualMachineTypes;
            }
        }
        private ObjectSet<VirtualMachineType> _VirtualMachineTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HypervisorWorkloadProfile> HypervisorWorkloadProfiles
        {
            get
            {
                if ((_HypervisorWorkloadProfiles == null))
                {
                    _HypervisorWorkloadProfiles = base.CreateObjectSet<HypervisorWorkloadProfile>("HypervisorWorkloadProfiles");
                }
                return _HypervisorWorkloadProfiles;
            }
        }
        private ObjectSet<HypervisorWorkloadProfile> _HypervisorWorkloadProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VirtualMachine> VirtualMachines
        {
            get
            {
                if ((_VirtualMachines == null))
                {
                    _VirtualMachines = base.CreateObjectSet<VirtualMachine>("VirtualMachines");
                }
                return _VirtualMachines;
            }
        }
        private ObjectSet<VirtualMachine> _VirtualMachines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<XenDesktopBrokerDesktop> XenDesktopBrokerDesktops
        {
            get
            {
                if ((_XenDesktopBrokerDesktops == null))
                {
                    _XenDesktopBrokerDesktops = base.CreateObjectSet<XenDesktopBrokerDesktop>("XenDesktopBrokerDesktops");
                }
                return _XenDesktopBrokerDesktops;
            }
        }
        private ObjectSet<XenDesktopBrokerDesktop> _XenDesktopBrokerDesktops;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<XenDesktopCatalog> XenDesktopCatalogs
        {
            get
            {
                if ((_XenDesktopCatalogs == null))
                {
                    _XenDesktopCatalogs = base.CreateObjectSet<XenDesktopCatalog>("XenDesktopCatalogs");
                }
                return _XenDesktopCatalogs;
            }
        }
        private ObjectSet<XenDesktopCatalog> _XenDesktopCatalogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<XenDesktopServer> XenDesktopServers
        {
            get
            {
                if ((_XenDesktopServers == null))
                {
                    _XenDesktopServers = base.CreateObjectSet<XenDesktopServer>("XenDesktopServers");
                }
                return _XenDesktopServers;
            }
        }
        private ObjectSet<XenDesktopServer> _XenDesktopServers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<XenDesktopSite> XenDesktopSites
        {
            get
            {
                if ((_XenDesktopSites == null))
                {
                    _XenDesktopSites = base.CreateObjectSet<XenDesktopSite>("XenDesktopSites");
                }
                return _XenDesktopSites;
            }
        }
        private ObjectSet<XenDesktopSite> _XenDesktopSites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HypervisorGroupType> HypervisorGroupTypes
        {
            get
            {
                if ((_HypervisorGroupTypes == null))
                {
                    _HypervisorGroupTypes = base.CreateObjectSet<HypervisorGroupType>("HypervisorGroupTypes");
                }
                return _HypervisorGroupTypes;
            }
        }
        private ObjectSet<HypervisorGroupType> _HypervisorGroupTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<XenDesktopCatalogType> XenDesktopCatalogTypes
        {
            get
            {
                if ((_XenDesktopCatalogTypes == null))
                {
                    _XenDesktopCatalogTypes = base.CreateObjectSet<XenDesktopCatalogType>("XenDesktopCatalogTypes");
                }
                return _XenDesktopCatalogTypes;
            }
        }
        private ObjectSet<XenDesktopCatalogType> _XenDesktopCatalogTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<XenAppServerRole> XenAppServerRoles
        {
            get
            {
                if ((_XenAppServerRoles == null))
                {
                    _XenAppServerRoles = base.CreateObjectSet<XenAppServerRole>("XenAppServerRoles");
                }
                return _XenAppServerRoles;
            }
        }
        private ObjectSet<XenAppServerRole> _XenAppServerRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<XenAppServer> XenAppServers
        {
            get
            {
                if ((_XenAppServers == null))
                {
                    _XenAppServers = base.CreateObjectSet<XenAppServer>("XenAppServers");
                }
                return _XenAppServers;
            }
        }
        private ObjectSet<XenAppServer> _XenAppServers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<XenAppFarmVersion> XenAppFarmVersions
        {
            get
            {
                if ((_XenAppFarmVersions == null))
                {
                    _XenAppFarmVersions = base.CreateObjectSet<XenAppFarmVersion>("XenAppFarmVersions");
                }
                return _XenAppFarmVersions;
            }
        }
        private ObjectSet<XenAppFarmVersion> _XenAppFarmVersions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MigrationGroup> MigrationGroups
        {
            get
            {
                if ((_MigrationGroups == null))
                {
                    _MigrationGroups = base.CreateObjectSet<MigrationGroup>("MigrationGroups");
                }
                return _MigrationGroups;
            }
        }
        private ObjectSet<MigrationGroup> _MigrationGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryMachine> InventoryMachines
        {
            get
            {
                if ((_InventoryMachines == null))
                {
                    _InventoryMachines = base.CreateObjectSet<InventoryMachine>("InventoryMachines");
                }
                return _InventoryMachines;
            }
        }
        private ObjectSet<InventoryMachine> _InventoryMachines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PublishedApplicationLevel> PublishedApplicationLevels
        {
            get
            {
                if ((_PublishedApplicationLevels == null))
                {
                    _PublishedApplicationLevels = base.CreateObjectSet<PublishedApplicationLevel>("PublishedApplicationLevels");
                }
                return _PublishedApplicationLevels;
            }
        }
        private ObjectSet<PublishedApplicationLevel> _PublishedApplicationLevels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<XenDesktopBrokerConnection> XenDesktopBrokerConnections
        {
            get
            {
                if ((_XenDesktopBrokerConnections == null))
                {
                    _XenDesktopBrokerConnections = base.CreateObjectSet<XenDesktopBrokerConnection>("XenDesktopBrokerConnections");
                }
                return _XenDesktopBrokerConnections;
            }
        }
        private ObjectSet<XenDesktopBrokerConnection> _XenDesktopBrokerConnections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataStoreGroup> DataStoreGroups
        {
            get
            {
                if ((_DataStoreGroups == null))
                {
                    _DataStoreGroups = base.CreateObjectSet<DataStoreGroup>("DataStoreGroups");
                }
                return _DataStoreGroups;
            }
        }
        private ObjectSet<DataStoreGroup> _DataStoreGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataStore> DataStores
        {
            get
            {
                if ((_DataStores == null))
                {
                    _DataStores = base.CreateObjectSet<DataStore>("DataStores");
                }
                return _DataStores;
            }
        }
        private ObjectSet<DataStore> _DataStores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VirtualHardDrive> VirtualHardDrives
        {
            get
            {
                if ((_VirtualHardDrives == null))
                {
                    _VirtualHardDrives = base.CreateObjectSet<VirtualHardDrive>("VirtualHardDrives");
                }
                return _VirtualHardDrives;
            }
        }
        private ObjectSet<VirtualHardDrive> _VirtualHardDrives;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataStoreCategory> DataStoreCategories
        {
            get
            {
                if ((_DataStoreCategories == null))
                {
                    _DataStoreCategories = base.CreateObjectSet<DataStoreCategory>("DataStoreCategories");
                }
                return _DataStoreCategories;
            }
        }
        private ObjectSet<DataStoreCategory> _DataStoreCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataSource> DataSources
        {
            get
            {
                if ((_DataSources == null))
                {
                    _DataSources = base.CreateObjectSet<DataSource>("DataSources");
                }
                return _DataSources;
            }
        }
        private ObjectSet<DataSource> _DataSources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataSourcesStatu> DataSourcesStatus
        {
            get
            {
                if ((_DataSourcesStatus == null))
                {
                    _DataSourcesStatus = base.CreateObjectSet<DataSourcesStatu>("DataSourcesStatus");
                }
                return _DataSourcesStatus;
            }
        }
        private ObjectSet<DataSourcesStatu> _DataSourcesStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HypervisorController> HypervisorControllers
        {
            get
            {
                if ((_HypervisorControllers == null))
                {
                    _HypervisorControllers = base.CreateObjectSet<HypervisorController>("HypervisorControllers");
                }
                return _HypervisorControllers;
            }
        }
        private ObjectSet<HypervisorController> _HypervisorControllers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CapacityRule> CapacityRules
        {
            get
            {
                if ((_CapacityRules == null))
                {
                    _CapacityRules = base.CreateObjectSet<CapacityRule>("CapacityRules");
                }
                return _CapacityRules;
            }
        }
        private ObjectSet<CapacityRule> _CapacityRules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CapacityRulesMeta> CapacityRulesMetas
        {
            get
            {
                if ((_CapacityRulesMetas == null))
                {
                    _CapacityRulesMetas = base.CreateObjectSet<CapacityRulesMeta>("CapacityRulesMetas");
                }
                return _CapacityRulesMetas;
            }
        }
        private ObjectSet<CapacityRulesMeta> _CapacityRulesMetas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CapacityStatistic> CapacityStatistics
        {
            get
            {
                if ((_CapacityStatistics == null))
                {
                    _CapacityStatistics = base.CreateObjectSet<CapacityStatistic>("CapacityStatistics");
                }
                return _CapacityStatistics;
            }
        }
        private ObjectSet<CapacityStatistic> _CapacityStatistics;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActiveDirectoryGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActiveDirectoryGroups(ActiveDirectoryGroup activeDirectoryGroup)
        {
            base.AddObject("ActiveDirectoryGroups", activeDirectoryGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntitledUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntitledUsers(EntitledUser entitledUser)
        {
            base.AddObject("EntitledUsers", entitledUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotes(Note note)
        {
            base.AddObject("Notes", note);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the XenAppFarmFolders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToXenAppFarmFolders(XenAppFarmFolder xenAppFarmFolder)
        {
            base.AddObject("XenAppFarmFolders", xenAppFarmFolder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the XenAppFarms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToXenAppFarms(XenAppFarm xenAppFarm)
        {
            base.AddObject("XenAppFarms", xenAppFarm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TagsMetas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTagsMetas(TagsMeta tagsMeta)
        {
            base.AddObject("TagsMetas", tagsMeta);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Divisions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDivisions(Division division)
        {
            base.AddObject("Divisions", division);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationOwners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationOwners(ApplicationOwner applicationOwner)
        {
            base.AddObject("ApplicationOwners", applicationOwner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationsApplicationOwners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationsApplicationOwners(ApplicationsApplicationOwner applicationsApplicationOwner)
        {
            base.AddObject("ApplicationsApplicationOwners", applicationsApplicationOwner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationGroups(ApplicationGroup applicationGroup)
        {
            base.AddObject("ApplicationGroups", applicationGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Complexities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComplexities(Complexity complexity)
        {
            base.AddObject("Complexities", complexity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Platforms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlatforms(Platform platform)
        {
            base.AddObject("Platforms", platform);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationVersions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationVersions(ApplicationVersion applicationVersion)
        {
            base.AddObject("ApplicationVersions", applicationVersion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplications(Application application)
        {
            base.AddObject("Applications", application);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResponsibleParties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResponsibleParties(ResponsibleParty responsibleParty)
        {
            base.AddObject("ResponsibleParties", responsibleParty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkflowDefinitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkflowDefinitions(WorkflowDefinition workflowDefinition)
        {
            base.AddObject("WorkflowDefinitions", workflowDefinition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkflowDurationEstimates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkflowDurationEstimates(WorkflowDurationEstimate workflowDurationEstimate)
        {
            base.AddObject("WorkflowDurationEstimates", workflowDurationEstimate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkflowStepActivities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkflowStepActivities(WorkflowStepActivity workflowStepActivity)
        {
            base.AddObject("WorkflowStepActivities", workflowStepActivity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkflowStepDefinitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkflowStepDefinitions(WorkflowStepDefinition workflowStepDefinition)
        {
            base.AddObject("WorkflowStepDefinitions", workflowStepDefinition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkflowDurationEstimateDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkflowDurationEstimateDetails(WorkflowDurationEstimateDetail workflowDurationEstimateDetail)
        {
            base.AddObject("WorkflowDurationEstimateDetails", workflowDurationEstimateDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkflowStepInstances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkflowStepInstances(WorkflowStepInstance workflowStepInstance)
        {
            base.AddObject("WorkflowStepInstances", workflowStepInstance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PublishedApplicationLaunches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPublishedApplicationLaunches(PublishedApplicationLaunch publishedApplicationLaunch)
        {
            base.AddObject("PublishedApplicationLaunches", publishedApplicationLaunch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Binaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBinaries(Binary binary)
        {
            base.AddObject("Binaries", binary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClarityEntries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClarityEntries(ClarityEntry clarityEntry)
        {
            base.AddObject("ClarityEntries", clarityEntry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IqDocuments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIqDocuments(IqDocument iqDocument)
        {
            base.AddObject("IqDocuments", iqDocument);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StrategicVendors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStrategicVendors(StrategicVendor strategicVendor)
        {
            base.AddObject("StrategicVendors", strategicVendor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PublishedApplications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPublishedApplications(PublishedApplication publishedApplication)
        {
            base.AddObject("PublishedApplications", publishedApplication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkflowInstances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkflowInstances(WorkflowInstance workflowInstance)
        {
            base.AddObject("WorkflowInstances", workflowInstance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BusinessSolutions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBusinessSolutions(BusinessSolution businessSolution)
        {
            base.AddObject("BusinessSolutions", businessSolution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BusinessActions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBusinessActions(BusinessAction businessAction)
        {
            base.AddObject("BusinessActions", businessAction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HypervisorGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHypervisorGroups(HypervisorGroup hypervisorGroup)
        {
            base.AddObject("HypervisorGroups", hypervisorGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Hypervisors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHypervisors(Hypervisor hypervisor)
        {
            base.AddObject("Hypervisors", hypervisor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HypervisorTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHypervisorTypes(HypervisorType hypervisorType)
        {
            base.AddObject("HypervisorTypes", hypervisorType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VirtualMachineTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVirtualMachineTypes(VirtualMachineType virtualMachineType)
        {
            base.AddObject("VirtualMachineTypes", virtualMachineType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HypervisorWorkloadProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHypervisorWorkloadProfiles(HypervisorWorkloadProfile hypervisorWorkloadProfile)
        {
            base.AddObject("HypervisorWorkloadProfiles", hypervisorWorkloadProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VirtualMachines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVirtualMachines(VirtualMachine virtualMachine)
        {
            base.AddObject("VirtualMachines", virtualMachine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the XenDesktopBrokerDesktops EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToXenDesktopBrokerDesktops(XenDesktopBrokerDesktop xenDesktopBrokerDesktop)
        {
            base.AddObject("XenDesktopBrokerDesktops", xenDesktopBrokerDesktop);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the XenDesktopCatalogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToXenDesktopCatalogs(XenDesktopCatalog xenDesktopCatalog)
        {
            base.AddObject("XenDesktopCatalogs", xenDesktopCatalog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the XenDesktopServers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToXenDesktopServers(XenDesktopServer xenDesktopServer)
        {
            base.AddObject("XenDesktopServers", xenDesktopServer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the XenDesktopSites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToXenDesktopSites(XenDesktopSite xenDesktopSite)
        {
            base.AddObject("XenDesktopSites", xenDesktopSite);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HypervisorGroupTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHypervisorGroupTypes(HypervisorGroupType hypervisorGroupType)
        {
            base.AddObject("HypervisorGroupTypes", hypervisorGroupType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the XenDesktopCatalogTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToXenDesktopCatalogTypes(XenDesktopCatalogType xenDesktopCatalogType)
        {
            base.AddObject("XenDesktopCatalogTypes", xenDesktopCatalogType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the XenAppServerRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToXenAppServerRoles(XenAppServerRole xenAppServerRole)
        {
            base.AddObject("XenAppServerRoles", xenAppServerRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the XenAppServers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToXenAppServers(XenAppServer xenAppServer)
        {
            base.AddObject("XenAppServers", xenAppServer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the XenAppFarmVersions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToXenAppFarmVersions(XenAppFarmVersion xenAppFarmVersion)
        {
            base.AddObject("XenAppFarmVersions", xenAppFarmVersion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MigrationGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMigrationGroups(MigrationGroup migrationGroup)
        {
            base.AddObject("MigrationGroups", migrationGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryMachines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryMachines(InventoryMachine inventoryMachine)
        {
            base.AddObject("InventoryMachines", inventoryMachine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PublishedApplicationLevels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPublishedApplicationLevels(PublishedApplicationLevel publishedApplicationLevel)
        {
            base.AddObject("PublishedApplicationLevels", publishedApplicationLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the XenDesktopBrokerConnections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToXenDesktopBrokerConnections(XenDesktopBrokerConnection xenDesktopBrokerConnection)
        {
            base.AddObject("XenDesktopBrokerConnections", xenDesktopBrokerConnection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataStoreGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataStoreGroups(DataStoreGroup dataStoreGroup)
        {
            base.AddObject("DataStoreGroups", dataStoreGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataStores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataStores(DataStore dataStore)
        {
            base.AddObject("DataStores", dataStore);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VirtualHardDrives EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVirtualHardDrives(VirtualHardDrive virtualHardDrive)
        {
            base.AddObject("VirtualHardDrives", virtualHardDrive);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataStoreCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataStoreCategories(DataStoreCategory dataStoreCategory)
        {
            base.AddObject("DataStoreCategories", dataStoreCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataSources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataSources(DataSource dataSource)
        {
            base.AddObject("DataSources", dataSource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataSourcesStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataSourcesStatus(DataSourcesStatu dataSourcesStatu)
        {
            base.AddObject("DataSourcesStatus", dataSourcesStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HypervisorControllers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHypervisorControllers(HypervisorController hypervisorController)
        {
            base.AddObject("HypervisorControllers", hypervisorController);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CapacityRules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCapacityRules(CapacityRule capacityRule)
        {
            base.AddObject("CapacityRules", capacityRule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CapacityRulesMetas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCapacityRulesMetas(CapacityRulesMeta capacityRulesMeta)
        {
            base.AddObject("CapacityRulesMetas", capacityRulesMeta);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CapacityStatistics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCapacityStatistics(CapacityStatistic capacityStatistic)
        {
            base.AddObject("CapacityStatistics", capacityStatistic);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="ActiveDirectoryGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActiveDirectoryGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActiveDirectoryGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        public static ActiveDirectoryGroup CreateActiveDirectoryGroup(global::System.Guid id, global::System.String name, global::System.DateTime lastUpdated, global::System.Boolean inactive)
        {
            ActiveDirectoryGroup activeDirectoryGroup = new ActiveDirectoryGroup();
            activeDirectoryGroup.Id = id;
            activeDirectoryGroup.Name = name;
            activeDirectoryGroup.LastUpdated = lastUpdated;
            activeDirectoryGroup.Inactive = inactive;
            return activeDirectoryGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "ActiveDirectoryGroupsEntitledUsers", "EntitledUser")]
        public EntityCollection<EntitledUser> EntitledUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntitledUser>("MigrationTool_DevelopmentModel.ActiveDirectoryGroupsEntitledUsers", "EntitledUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntitledUser>("MigrationTool_DevelopmentModel.ActiveDirectoryGroupsEntitledUsers", "EntitledUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ActiveDirectoryGroups", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_ActiveDirectoryGroups", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_ActiveDirectoryGroups", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ActiveDirectoryGroups", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_ActiveDirectoryGroups", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_ActiveDirectoryGroups", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "PublishedApplicationsActiveDirectoryGroups", "PublishedApplication")]
        public EntityCollection<PublishedApplication> PublishedApplications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PublishedApplication>("MigrationTool_DevelopmentModel.PublishedApplicationsActiveDirectoryGroups", "PublishedApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PublishedApplication>("MigrationTool_DevelopmentModel.PublishedApplicationsActiveDirectoryGroups", "PublishedApplication", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="Application")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Application : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Application object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="binariesVerified">Initial value of the BinariesVerified property.</param>
        public static Application CreateApplication(global::System.Guid id, global::System.String name, global::System.DateTime lastUpdated, global::System.Boolean binariesVerified)
        {
            Application application = new Application();
            application.Id = id;
            application.Name = name;
            application.LastUpdated = lastUpdated;
            application.BinariesVerified = binariesVerified;
            return application;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ApplicationGroup_Id
        {
            get
            {
                return _ApplicationGroup_Id;
            }
            set
            {
                OnApplicationGroup_IdChanging(value);
                ReportPropertyChanging("ApplicationGroup_Id");
                _ApplicationGroup_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationGroup_Id");
                OnApplicationGroup_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _ApplicationGroup_Id;
        partial void OnApplicationGroup_IdChanging(Nullable<global::System.Guid> value);
        partial void OnApplicationGroup_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Complexity_Id
        {
            get
            {
                return _Complexity_Id;
            }
            set
            {
                OnComplexity_IdChanging(value);
                ReportPropertyChanging("Complexity_Id");
                _Complexity_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Complexity_Id");
                OnComplexity_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Complexity_Id;
        partial void OnComplexity_IdChanging(Nullable<global::System.Int32> value);
        partial void OnComplexity_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> NewestVendorVersion_Id
        {
            get
            {
                return _NewestVendorVersion_Id;
            }
            set
            {
                OnNewestVendorVersion_IdChanging(value);
                ReportPropertyChanging("NewestVendorVersion_Id");
                _NewestVendorVersion_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewestVendorVersion_Id");
                OnNewestVendorVersion_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _NewestVendorVersion_Id;
        partial void OnNewestVendorVersion_IdChanging(Nullable<global::System.Guid> value);
        partial void OnNewestVendorVersion_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> NewestOrganizationVersion_Id
        {
            get
            {
                return _NewestOrganizationVersion_Id;
            }
            set
            {
                OnNewestOrganizationVersion_IdChanging(value);
                ReportPropertyChanging("NewestOrganizationVersion_Id");
                _NewestOrganizationVersion_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewestOrganizationVersion_Id");
                OnNewestOrganizationVersion_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _NewestOrganizationVersion_Id;
        partial void OnNewestOrganizationVersion_IdChanging(Nullable<global::System.Guid> value);
        partial void OnNewestOrganizationVersion_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean BinariesVerified
        {
            get
            {
                return _BinariesVerified;
            }
            set
            {
                OnBinariesVerifiedChanging(value);
                ReportPropertyChanging("BinariesVerified");
                _BinariesVerified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BinariesVerified");
                OnBinariesVerifiedChanged();
            }
        }
        private global::System.Boolean _BinariesVerified;
        partial void OnBinariesVerifiedChanging(global::System.Boolean value);
        partial void OnBinariesVerifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ClarityEntry_Id
        {
            get
            {
                return _ClarityEntry_Id;
            }
            set
            {
                OnClarityEntry_IdChanging(value);
                ReportPropertyChanging("ClarityEntry_Id");
                _ClarityEntry_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClarityEntry_Id");
                OnClarityEntry_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _ClarityEntry_Id;
        partial void OnClarityEntry_IdChanging(Nullable<global::System.Guid> value);
        partial void OnClarityEntry_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Applications_ApplicationGroups", "ApplicationGroup")]
        public ApplicationGroup ApplicationGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationGroup>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationGroups", "ApplicationGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationGroup>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationGroups", "ApplicationGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApplicationGroup> ApplicationGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationGroup>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationGroups", "ApplicationGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApplicationGroup>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationGroups", "ApplicationGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Applications_ApplicationVersions", "ApplicationVersion")]
        public ApplicationVersion NewestVendorVersion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationVersions", "ApplicationVersion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationVersions", "ApplicationVersion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApplicationVersion> NewestVendorVersionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationVersions", "ApplicationVersion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationVersions", "ApplicationVersion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Applications_ApplicationVersions1", "ApplicationVersion")]
        public ApplicationVersion NewestOrganizationVersion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationVersions1", "ApplicationVersion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationVersions1", "ApplicationVersion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApplicationVersion> NewestOrganizationVersionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationVersions1", "ApplicationVersion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationVersions1", "ApplicationVersion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Applications_Complexities", "Complexity")]
        public Complexity Complexity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Complexity>("MigrationTool_DevelopmentModel.FK_Applications_Complexities", "Complexity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Complexity>("MigrationTool_DevelopmentModel.FK_Applications_Complexities", "Complexity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Complexity> ComplexityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Complexity>("MigrationTool_DevelopmentModel.FK_Applications_Complexities", "Complexity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Complexity>("MigrationTool_DevelopmentModel.FK_Applications_Complexities", "Complexity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_ApplicationsApplicationOwners_Applications", "ApplicationsApplicationOwner")]
        public EntityCollection<ApplicationsApplicationOwner> ApplicationsApplicationOwners
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationsApplicationOwner>("MigrationTool_DevelopmentModel.FK_ApplicationsApplicationOwners_Applications", "ApplicationsApplicationOwner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationsApplicationOwner>("MigrationTool_DevelopmentModel.FK_ApplicationsApplicationOwners_Applications", "ApplicationsApplicationOwner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_ApplicationVersions_Applications", "ApplicationVersion")]
        public EntityCollection<ApplicationVersion> ApplicationVersions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_ApplicationVersions_Applications", "ApplicationVersion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_ApplicationVersions_Applications", "ApplicationVersion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Applications", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_Applications", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_Applications", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Applications", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_Applications", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_Applications", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "ApplicationsBinaries", "Binary")]
        public EntityCollection<Binary> Binaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Binary>("MigrationTool_DevelopmentModel.ApplicationsBinaries", "Binary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Binary>("MigrationTool_DevelopmentModel.ApplicationsBinaries", "Binary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "BusinessSolutionsApplications", "BusinessSolution")]
        public EntityCollection<BusinessSolution> BusinessSolutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.BusinessSolutionsApplications", "BusinessSolution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.BusinessSolutionsApplications", "BusinessSolution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Applications_ClarityEntries", "ClarityEntry")]
        public ClarityEntry ClarityEntry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_Applications_ClarityEntries", "ClarityEntry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_Applications_ClarityEntries", "ClarityEntry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClarityEntry> ClarityEntryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_Applications_ClarityEntries", "ClarityEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_Applications_ClarityEntries", "ClarityEntry", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="ApplicationGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static ApplicationGroup CreateApplicationGroup(global::System.Guid id, global::System.String name, global::System.DateTime lastUpdated)
        {
            ApplicationGroup applicationGroup = new ApplicationGroup();
            applicationGroup.Id = id;
            applicationGroup.Name = name;
            applicationGroup.LastUpdated = lastUpdated;
            return applicationGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ApplicationGroups", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationGroups", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationGroups", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ApplicationGroups", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationGroups", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationGroups", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Applications_ApplicationGroups", "Application")]
        public EntityCollection<Application> Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationGroups", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationGroups", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="ApplicationOwner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationOwner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationOwner object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static ApplicationOwner CreateApplicationOwner(global::System.Guid id, global::System.String firstName, global::System.String lastName, global::System.DateTime lastUpdated)
        {
            ApplicationOwner applicationOwner = new ApplicationOwner();
            applicationOwner.Id = id;
            applicationOwner.FirstName = firstName;
            applicationOwner.LastName = lastName;
            applicationOwner.LastUpdated = lastUpdated;
            return applicationOwner;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Division_Id
        {
            get
            {
                return _Division_Id;
            }
            set
            {
                OnDivision_IdChanging(value);
                ReportPropertyChanging("Division_Id");
                _Division_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Division_Id");
                OnDivision_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _Division_Id;
        partial void OnDivision_IdChanging(Nullable<global::System.Guid> value);
        partial void OnDivision_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_ApplicationOwners_Divisions", "Division")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("MigrationTool_DevelopmentModel.FK_ApplicationOwners_Divisions", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("MigrationTool_DevelopmentModel.FK_ApplicationOwners_Divisions", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("MigrationTool_DevelopmentModel.FK_ApplicationOwners_Divisions", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("MigrationTool_DevelopmentModel.FK_ApplicationOwners_Divisions", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_ApplicationsApplicationOwners_ApplicationOwners", "ApplicationsApplicationOwner")]
        public EntityCollection<ApplicationsApplicationOwner> ApplicationsApplicationOwners
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationsApplicationOwner>("MigrationTool_DevelopmentModel.FK_ApplicationsApplicationOwners_ApplicationOwners", "ApplicationsApplicationOwner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationsApplicationOwner>("MigrationTool_DevelopmentModel.FK_ApplicationsApplicationOwners_ApplicationOwners", "ApplicationsApplicationOwner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ApplicationOwners", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationOwners", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationOwners", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ApplicationOwners", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationOwners", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationOwners", "TagsMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="ApplicationsApplicationOwner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationsApplicationOwner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationsApplicationOwner object.
        /// </summary>
        /// <param name="application_Id">Initial value of the Application_Id property.</param>
        /// <param name="applicationOwner_Id">Initial value of the ApplicationOwner_Id property.</param>
        /// <param name="role">Initial value of the Role property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static ApplicationsApplicationOwner CreateApplicationsApplicationOwner(global::System.Guid application_Id, global::System.Guid applicationOwner_Id, global::System.String role, global::System.Int32 sortOrder)
        {
            ApplicationsApplicationOwner applicationsApplicationOwner = new ApplicationsApplicationOwner();
            applicationsApplicationOwner.Application_Id = application_Id;
            applicationsApplicationOwner.ApplicationOwner_Id = applicationOwner_Id;
            applicationsApplicationOwner.Role = role;
            applicationsApplicationOwner.SortOrder = sortOrder;
            return applicationsApplicationOwner;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Application_Id
        {
            get
            {
                return _Application_Id;
            }
            set
            {
                if (_Application_Id != value)
                {
                    OnApplication_IdChanging(value);
                    ReportPropertyChanging("Application_Id");
                    _Application_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Application_Id");
                    OnApplication_IdChanged();
                }
            }
        }
        private global::System.Guid _Application_Id;
        partial void OnApplication_IdChanging(global::System.Guid value);
        partial void OnApplication_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationOwner_Id
        {
            get
            {
                return _ApplicationOwner_Id;
            }
            set
            {
                if (_ApplicationOwner_Id != value)
                {
                    OnApplicationOwner_IdChanging(value);
                    ReportPropertyChanging("ApplicationOwner_Id");
                    _ApplicationOwner_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationOwner_Id");
                    OnApplicationOwner_IdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationOwner_Id;
        partial void OnApplicationOwner_IdChanging(global::System.Guid value);
        partial void OnApplicationOwner_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                if (_Role != value)
                {
                    OnRoleChanging(value);
                    ReportPropertyChanging("Role");
                    _Role = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Role");
                    OnRoleChanged();
                }
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_ApplicationsApplicationOwners_ApplicationOwners", "ApplicationOwner")]
        public ApplicationOwner ApplicationOwner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationOwner>("MigrationTool_DevelopmentModel.FK_ApplicationsApplicationOwners_ApplicationOwners", "ApplicationOwner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationOwner>("MigrationTool_DevelopmentModel.FK_ApplicationsApplicationOwners_ApplicationOwners", "ApplicationOwner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApplicationOwner> ApplicationOwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationOwner>("MigrationTool_DevelopmentModel.FK_ApplicationsApplicationOwners_ApplicationOwners", "ApplicationOwner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApplicationOwner>("MigrationTool_DevelopmentModel.FK_ApplicationsApplicationOwners_ApplicationOwners", "ApplicationOwner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_ApplicationsApplicationOwners_Applications", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("MigrationTool_DevelopmentModel.FK_ApplicationsApplicationOwners_Applications", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("MigrationTool_DevelopmentModel.FK_ApplicationsApplicationOwners_Applications", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("MigrationTool_DevelopmentModel.FK_ApplicationsApplicationOwners_Applications", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("MigrationTool_DevelopmentModel.FK_ApplicationsApplicationOwners_Applications", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="ApplicationVersion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationVersion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationVersion object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="application_Id">Initial value of the Application_Id property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static ApplicationVersion CreateApplicationVersion(global::System.Guid id, global::System.String name, global::System.Guid application_Id, global::System.DateTime lastUpdated)
        {
            ApplicationVersion applicationVersion = new ApplicationVersion();
            applicationVersion.Id = id;
            applicationVersion.Name = name;
            applicationVersion.Application_Id = application_Id;
            applicationVersion.LastUpdated = lastUpdated;
            return applicationVersion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Application_Id
        {
            get
            {
                return _Application_Id;
            }
            set
            {
                OnApplication_IdChanging(value);
                ReportPropertyChanging("Application_Id");
                _Application_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Application_Id");
                OnApplication_IdChanged();
            }
        }
        private global::System.Guid _Application_Id;
        partial void OnApplication_IdChanging(global::System.Guid value);
        partial void OnApplication_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndOfLifeDate
        {
            get
            {
                return _EndOfLifeDate;
            }
            set
            {
                OnEndOfLifeDateChanging(value);
                ReportPropertyChanging("EndOfLifeDate");
                _EndOfLifeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndOfLifeDate");
                OnEndOfLifeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndOfLifeDate;
        partial void OnEndOfLifeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndOfLifeDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ApplicationVersions", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationVersions", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationVersions", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ApplicationVersions", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationVersions", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationVersions", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Applications_ApplicationVersions", "Application")]
        public EntityCollection<Application> Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationVersions", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationVersions", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Applications_ApplicationVersions1", "Application")]
        public EntityCollection<Application> Applications1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationVersions1", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("MigrationTool_DevelopmentModel.FK_Applications_ApplicationVersions1", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_ApplicationVersions_Applications", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("MigrationTool_DevelopmentModel.FK_ApplicationVersions_Applications", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("MigrationTool_DevelopmentModel.FK_ApplicationVersions_Applications", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("MigrationTool_DevelopmentModel.FK_ApplicationVersions_Applications", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("MigrationTool_DevelopmentModel.FK_ApplicationVersions_Applications", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplications_ApplicationVersions", "PublishedApplication")]
        public EntityCollection<PublishedApplication> PublishedApplications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PublishedApplication>("MigrationTool_DevelopmentModel.FK_PublishedApplications_ApplicationVersions", "PublishedApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PublishedApplication>("MigrationTool_DevelopmentModel.FK_PublishedApplications_ApplicationVersions", "PublishedApplication", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="Binary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Binary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Binary object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sccmPackage">Initial value of the SccmPackage property.</param>
        /// <param name="virtualized">Initial value of the Virtualized property.</param>
        public static Binary CreateBinary(global::System.Guid id, global::System.String name, global::System.Boolean sccmPackage, global::System.Boolean virtualized)
        {
            Binary binary = new Binary();
            binary.Id = id;
            binary.Name = name;
            binary.SccmPackage = sccmPackage;
            binary.Virtualized = virtualized;
            return binary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SccmPackage
        {
            get
            {
                return _SccmPackage;
            }
            set
            {
                OnSccmPackageChanging(value);
                ReportPropertyChanging("SccmPackage");
                _SccmPackage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SccmPackage");
                OnSccmPackageChanged();
            }
        }
        private global::System.Boolean _SccmPackage;
        partial void OnSccmPackageChanging(global::System.Boolean value);
        partial void OnSccmPackageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Virtualized
        {
            get
            {
                return _Virtualized;
            }
            set
            {
                OnVirtualizedChanging(value);
                ReportPropertyChanging("Virtualized");
                _Virtualized = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Virtualized");
                OnVirtualizedChanged();
            }
        }
        private global::System.Boolean _Virtualized;
        partial void OnVirtualizedChanging(global::System.Boolean value);
        partial void OnVirtualizedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ClarityEntry_Id
        {
            get
            {
                return _ClarityEntry_Id;
            }
            set
            {
                OnClarityEntry_IdChanging(value);
                ReportPropertyChanging("ClarityEntry_Id");
                _ClarityEntry_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClarityEntry_Id");
                OnClarityEntry_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _ClarityEntry_Id;
        partial void OnClarityEntry_IdChanging(Nullable<global::System.Guid> value);
        partial void OnClarityEntry_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PackageName
        {
            get
            {
                return _PackageName;
            }
            set
            {
                OnPackageNameChanging(value);
                ReportPropertyChanging("PackageName");
                _PackageName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PackageName");
                OnPackageNameChanged();
            }
        }
        private global::System.String _PackageName;
        partial void OnPackageNameChanging(global::System.String value);
        partial void OnPackageNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Binaries_ClarityEntries", "ClarityEntry")]
        public ClarityEntry ClarityEntry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_Binaries_ClarityEntries", "ClarityEntry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_Binaries_ClarityEntries", "ClarityEntry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClarityEntry> ClarityEntryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_Binaries_ClarityEntries", "ClarityEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_Binaries_ClarityEntries", "ClarityEntry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Binaries", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_Binaries", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_Binaries", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Binaries", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_Binaries", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_Binaries", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "ApplicationsBinaries", "Application")]
        public EntityCollection<Application> Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("MigrationTool_DevelopmentModel.ApplicationsBinaries", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("MigrationTool_DevelopmentModel.ApplicationsBinaries", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "BinariesPlatforms", "Platform")]
        public EntityCollection<Platform> Platforms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Platform>("MigrationTool_DevelopmentModel.BinariesPlatforms", "Platform");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Platform>("MigrationTool_DevelopmentModel.BinariesPlatforms", "Platform", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "BusinessSolutionsBinaries", "BusinessSolution")]
        public EntityCollection<BusinessSolution> BusinessSolutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.BusinessSolutionsBinaries", "BusinessSolution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.BusinessSolutionsBinaries", "BusinessSolution", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="BusinessAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BusinessAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BusinessAction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static BusinessAction CreateBusinessAction(global::System.Guid id, global::System.String name)
        {
            BusinessAction businessAction = new BusinessAction();
            businessAction.Id = id;
            businessAction.Name = name;
            return businessAction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_BusinessSolutions_BusinessActions", "BusinessSolution")]
        public EntityCollection<BusinessSolution> BusinessSolutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_BusinessActions", "BusinessSolution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_BusinessActions", "BusinessSolution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_BusinessActions", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_BusinessActions", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_BusinessActions", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_BusinessActions", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_BusinessActions", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_BusinessActions", "TagsMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="BusinessSolution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BusinessSolution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BusinessSolution object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static BusinessSolution CreateBusinessSolution(global::System.Guid id, global::System.String name)
        {
            BusinessSolution businessSolution = new BusinessSolution();
            businessSolution.Id = id;
            businessSolution.Name = name;
            return businessSolution;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> BusinessAction_Id
        {
            get
            {
                return _BusinessAction_Id;
            }
            set
            {
                OnBusinessAction_IdChanging(value);
                ReportPropertyChanging("BusinessAction_Id");
                _BusinessAction_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessAction_Id");
                OnBusinessAction_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _BusinessAction_Id;
        partial void OnBusinessAction_IdChanging(Nullable<global::System.Guid> value);
        partial void OnBusinessAction_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ClarityEntry_Id
        {
            get
            {
                return _ClarityEntry_Id;
            }
            set
            {
                OnClarityEntry_IdChanging(value);
                ReportPropertyChanging("ClarityEntry_Id");
                _ClarityEntry_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClarityEntry_Id");
                OnClarityEntry_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _ClarityEntry_Id;
        partial void OnClarityEntry_IdChanging(Nullable<global::System.Guid> value);
        partial void OnClarityEntry_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> WorkflowInstance_Id
        {
            get
            {
                return _WorkflowInstance_Id;
            }
            set
            {
                OnWorkflowInstance_IdChanging(value);
                ReportPropertyChanging("WorkflowInstance_Id");
                _WorkflowInstance_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkflowInstance_Id");
                OnWorkflowInstance_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _WorkflowInstance_Id;
        partial void OnWorkflowInstance_IdChanging(Nullable<global::System.Guid> value);
        partial void OnWorkflowInstance_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> WorkflowDefinition_Id
        {
            get
            {
                return _WorkflowDefinition_Id;
            }
            set
            {
                OnWorkflowDefinition_IdChanging(value);
                ReportPropertyChanging("WorkflowDefinition_Id");
                _WorkflowDefinition_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkflowDefinition_Id");
                OnWorkflowDefinition_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _WorkflowDefinition_Id;
        partial void OnWorkflowDefinition_IdChanging(Nullable<global::System.Guid> value);
        partial void OnWorkflowDefinition_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_BusinessSolutions_ClarityEntries", "ClarityEntry")]
        public ClarityEntry ClarityEntry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_ClarityEntries", "ClarityEntry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_ClarityEntries", "ClarityEntry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClarityEntry> ClarityEntryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_ClarityEntries", "ClarityEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_ClarityEntries", "ClarityEntry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_BusinessSolutions_WorkflowInstances", "WorkflowInstance")]
        public WorkflowInstance WorkflowInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_WorkflowInstances", "WorkflowInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_WorkflowInstances", "WorkflowInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowInstance> WorkflowInstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_WorkflowInstances", "WorkflowInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_WorkflowInstances", "WorkflowInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_BusinessSolutions", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_BusinessSolutions", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_BusinessSolutions", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplications_BusinessSolutions", "PublishedApplication")]
        public EntityCollection<PublishedApplication> PublishedApplications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PublishedApplication>("MigrationTool_DevelopmentModel.FK_PublishedApplications_BusinessSolutions", "PublishedApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PublishedApplication>("MigrationTool_DevelopmentModel.FK_PublishedApplications_BusinessSolutions", "PublishedApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_BusinessSolutions", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_BusinessSolutions", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_BusinessSolutions", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowInstances_BusinessSolutions", "WorkflowInstance")]
        public EntityCollection<WorkflowInstance> WorkflowInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_BusinessSolutions", "WorkflowInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_BusinessSolutions", "WorkflowInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "BusinessSolutionsBinaries", "Binary")]
        public EntityCollection<Binary> Binaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Binary>("MigrationTool_DevelopmentModel.BusinessSolutionsBinaries", "Binary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Binary>("MigrationTool_DevelopmentModel.BusinessSolutionsBinaries", "Binary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "BusinessSolutionsDivisions", "Division")]
        public EntityCollection<Division> Divisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Division>("MigrationTool_DevelopmentModel.BusinessSolutionsDivisions", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Division>("MigrationTool_DevelopmentModel.BusinessSolutionsDivisions", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "BusinessSolutionsIqDocuments", "IqDocument")]
        public EntityCollection<IqDocument> IqDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IqDocument>("MigrationTool_DevelopmentModel.BusinessSolutionsIqDocuments", "IqDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IqDocument>("MigrationTool_DevelopmentModel.BusinessSolutionsIqDocuments", "IqDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "BusinessSolutionsStrategicVendors", "StrategicVendor")]
        public EntityCollection<StrategicVendor> StrategicVendors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StrategicVendor>("MigrationTool_DevelopmentModel.BusinessSolutionsStrategicVendors", "StrategicVendor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StrategicVendor>("MigrationTool_DevelopmentModel.BusinessSolutionsStrategicVendors", "StrategicVendor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_BusinessSolutions_WorkflowDefinitions1", "WorkflowDefinition")]
        public WorkflowDefinition WorkflowDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_WorkflowDefinitions1", "WorkflowDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_WorkflowDefinitions1", "WorkflowDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowDefinition> WorkflowDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_WorkflowDefinitions1", "WorkflowDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_WorkflowDefinitions1", "WorkflowDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_BusinessSolutions_BusinessActions", "BusinessAction")]
        public BusinessAction BusinessAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAction>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_BusinessActions", "BusinessAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAction>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_BusinessActions", "BusinessAction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessAction> BusinessActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAction>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_BusinessActions", "BusinessAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessAction>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_BusinessActions", "BusinessAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "BusinessSolutionsApplications", "Application")]
        public EntityCollection<Application> Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("MigrationTool_DevelopmentModel.BusinessSolutionsApplications", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("MigrationTool_DevelopmentModel.BusinessSolutionsApplications", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="CapacityRule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CapacityRule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CapacityRule object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="ruleType">Initial value of the RuleType property.</param>
        public static CapacityRule CreateCapacityRule(global::System.Guid id, global::System.String name, global::System.Byte ruleType)
        {
            CapacityRule capacityRule = new CapacityRule();
            capacityRule.Id = id;
            capacityRule.Name = name;
            capacityRule.RuleType = ruleType;
            return capacityRule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte RuleType
        {
            get
            {
                return _RuleType;
            }
            set
            {
                OnRuleTypeChanging(value);
                ReportPropertyChanging("RuleType");
                _RuleType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RuleType");
                OnRuleTypeChanged();
            }
        }
        private global::System.Byte _RuleType;
        partial void OnRuleTypeChanging(global::System.Byte value);
        partial void OnRuleTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaximumVms
        {
            get
            {
                return _MaximumVms;
            }
            set
            {
                OnMaximumVmsChanging(value);
                ReportPropertyChanging("MaximumVms");
                _MaximumVms = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaximumVms");
                OnMaximumVmsChanged();
            }
        }
        private Nullable<global::System.Int32> _MaximumVms;
        partial void OnMaximumVmsChanging(Nullable<global::System.Int32> value);
        partial void OnMaximumVmsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> ComputeVcpuCountType
        {
            get
            {
                return _ComputeVcpuCountType;
            }
            set
            {
                OnComputeVcpuCountTypeChanging(value);
                ReportPropertyChanging("ComputeVcpuCountType");
                _ComputeVcpuCountType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputeVcpuCountType");
                OnComputeVcpuCountTypeChanged();
            }
        }
        private Nullable<global::System.Byte> _ComputeVcpuCountType;
        partial void OnComputeVcpuCountTypeChanging(Nullable<global::System.Byte> value);
        partial void OnComputeVcpuCountTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ComputeVcpusPerVm
        {
            get
            {
                return _ComputeVcpusPerVm;
            }
            set
            {
                OnComputeVcpusPerVmChanging(value);
                ReportPropertyChanging("ComputeVcpusPerVm");
                _ComputeVcpusPerVm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputeVcpusPerVm");
                OnComputeVcpusPerVmChanged();
            }
        }
        private Nullable<global::System.Int32> _ComputeVcpusPerVm;
        partial void OnComputeVcpusPerVmChanging(Nullable<global::System.Int32> value);
        partial void OnComputeVcpusPerVmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ComputeOvercommitAntecedent
        {
            get
            {
                return _ComputeOvercommitAntecedent;
            }
            set
            {
                OnComputeOvercommitAntecedentChanging(value);
                ReportPropertyChanging("ComputeOvercommitAntecedent");
                _ComputeOvercommitAntecedent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputeOvercommitAntecedent");
                OnComputeOvercommitAntecedentChanged();
            }
        }
        private Nullable<global::System.Int32> _ComputeOvercommitAntecedent;
        partial void OnComputeOvercommitAntecedentChanging(Nullable<global::System.Int32> value);
        partial void OnComputeOvercommitAntecedentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ComputeOvercommitConsequent
        {
            get
            {
                return _ComputeOvercommitConsequent;
            }
            set
            {
                OnComputeOvercommitConsequentChanging(value);
                ReportPropertyChanging("ComputeOvercommitConsequent");
                _ComputeOvercommitConsequent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputeOvercommitConsequent");
                OnComputeOvercommitConsequentChanged();
            }
        }
        private Nullable<global::System.Int32> _ComputeOvercommitConsequent;
        partial void OnComputeOvercommitConsequentChanging(Nullable<global::System.Int32> value);
        partial void OnComputeOvercommitConsequentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> MemoryPerVmType
        {
            get
            {
                return _MemoryPerVmType;
            }
            set
            {
                OnMemoryPerVmTypeChanging(value);
                ReportPropertyChanging("MemoryPerVmType");
                _MemoryPerVmType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemoryPerVmType");
                OnMemoryPerVmTypeChanged();
            }
        }
        private Nullable<global::System.Byte> _MemoryPerVmType;
        partial void OnMemoryPerVmTypeChanging(Nullable<global::System.Byte> value);
        partial void OnMemoryPerVmTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MemoryPerVmBytes
        {
            get
            {
                return _MemoryPerVmBytes;
            }
            set
            {
                OnMemoryPerVmBytesChanging(value);
                ReportPropertyChanging("MemoryPerVmBytes");
                _MemoryPerVmBytes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemoryPerVmBytes");
                OnMemoryPerVmBytesChanged();
            }
        }
        private Nullable<global::System.Int64> _MemoryPerVmBytes;
        partial void OnMemoryPerVmBytesChanging(Nullable<global::System.Int64> value);
        partial void OnMemoryPerVmBytesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> MemoryVmOverheadType
        {
            get
            {
                return _MemoryVmOverheadType;
            }
            set
            {
                OnMemoryVmOverheadTypeChanging(value);
                ReportPropertyChanging("MemoryVmOverheadType");
                _MemoryVmOverheadType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemoryVmOverheadType");
                OnMemoryVmOverheadTypeChanged();
            }
        }
        private Nullable<global::System.Byte> _MemoryVmOverheadType;
        partial void OnMemoryVmOverheadTypeChanging(Nullable<global::System.Byte> value);
        partial void OnMemoryVmOverheadTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MemoryVmOverheadBytes
        {
            get
            {
                return _MemoryVmOverheadBytes;
            }
            set
            {
                OnMemoryVmOverheadBytesChanging(value);
                ReportPropertyChanging("MemoryVmOverheadBytes");
                _MemoryVmOverheadBytes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemoryVmOverheadBytes");
                OnMemoryVmOverheadBytesChanged();
            }
        }
        private Nullable<global::System.Int64> _MemoryVmOverheadBytes;
        partial void OnMemoryVmOverheadBytesChanging(Nullable<global::System.Int64> value);
        partial void OnMemoryVmOverheadBytesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MemoryVmOverheadPercent
        {
            get
            {
                return _MemoryVmOverheadPercent;
            }
            set
            {
                OnMemoryVmOverheadPercentChanging(value);
                ReportPropertyChanging("MemoryVmOverheadPercent");
                _MemoryVmOverheadPercent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemoryVmOverheadPercent");
                OnMemoryVmOverheadPercentChanged();
            }
        }
        private Nullable<global::System.Int32> _MemoryVmOverheadPercent;
        partial void OnMemoryVmOverheadPercentChanging(Nullable<global::System.Int32> value);
        partial void OnMemoryVmOverheadPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> MemoryHostOverheadType
        {
            get
            {
                return _MemoryHostOverheadType;
            }
            set
            {
                OnMemoryHostOverheadTypeChanging(value);
                ReportPropertyChanging("MemoryHostOverheadType");
                _MemoryHostOverheadType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemoryHostOverheadType");
                OnMemoryHostOverheadTypeChanged();
            }
        }
        private Nullable<global::System.Byte> _MemoryHostOverheadType;
        partial void OnMemoryHostOverheadTypeChanging(Nullable<global::System.Byte> value);
        partial void OnMemoryHostOverheadTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MemoryHostOverheadBytes
        {
            get
            {
                return _MemoryHostOverheadBytes;
            }
            set
            {
                OnMemoryHostOverheadBytesChanging(value);
                ReportPropertyChanging("MemoryHostOverheadBytes");
                _MemoryHostOverheadBytes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemoryHostOverheadBytes");
                OnMemoryHostOverheadBytesChanged();
            }
        }
        private Nullable<global::System.Int64> _MemoryHostOverheadBytes;
        partial void OnMemoryHostOverheadBytesChanging(Nullable<global::System.Int64> value);
        partial void OnMemoryHostOverheadBytesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MemoryHostOverheadPercent
        {
            get
            {
                return _MemoryHostOverheadPercent;
            }
            set
            {
                OnMemoryHostOverheadPercentChanging(value);
                ReportPropertyChanging("MemoryHostOverheadPercent");
                _MemoryHostOverheadPercent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemoryHostOverheadPercent");
                OnMemoryHostOverheadPercentChanged();
            }
        }
        private Nullable<global::System.Int32> _MemoryHostOverheadPercent;
        partial void OnMemoryHostOverheadPercentChanging(Nullable<global::System.Int32> value);
        partial void OnMemoryHostOverheadPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> StorageVmSizeType
        {
            get
            {
                return _StorageVmSizeType;
            }
            set
            {
                OnStorageVmSizeTypeChanging(value);
                ReportPropertyChanging("StorageVmSizeType");
                _StorageVmSizeType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StorageVmSizeType");
                OnStorageVmSizeTypeChanged();
            }
        }
        private Nullable<global::System.Byte> _StorageVmSizeType;
        partial void OnStorageVmSizeTypeChanging(Nullable<global::System.Byte> value);
        partial void OnStorageVmSizeTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> StorageVmSizeBytes
        {
            get
            {
                return _StorageVmSizeBytes;
            }
            set
            {
                OnStorageVmSizeBytesChanging(value);
                ReportPropertyChanging("StorageVmSizeBytes");
                _StorageVmSizeBytes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StorageVmSizeBytes");
                OnStorageVmSizeBytesChanged();
            }
        }
        private Nullable<global::System.Int64> _StorageVmSizeBytes;
        partial void OnStorageVmSizeBytesChanging(Nullable<global::System.Int64> value);
        partial void OnStorageVmSizeBytesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> StorageVmOverheadType
        {
            get
            {
                return _StorageVmOverheadType;
            }
            set
            {
                OnStorageVmOverheadTypeChanging(value);
                ReportPropertyChanging("StorageVmOverheadType");
                _StorageVmOverheadType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StorageVmOverheadType");
                OnStorageVmOverheadTypeChanged();
            }
        }
        private Nullable<global::System.Byte> _StorageVmOverheadType;
        partial void OnStorageVmOverheadTypeChanging(Nullable<global::System.Byte> value);
        partial void OnStorageVmOverheadTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> StorageVmOverheadBytes
        {
            get
            {
                return _StorageVmOverheadBytes;
            }
            set
            {
                OnStorageVmOverheadBytesChanging(value);
                ReportPropertyChanging("StorageVmOverheadBytes");
                _StorageVmOverheadBytes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StorageVmOverheadBytes");
                OnStorageVmOverheadBytesChanged();
            }
        }
        private Nullable<global::System.Int64> _StorageVmOverheadBytes;
        partial void OnStorageVmOverheadBytesChanging(Nullable<global::System.Int64> value);
        partial void OnStorageVmOverheadBytesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StorageVmOverheadPercent
        {
            get
            {
                return _StorageVmOverheadPercent;
            }
            set
            {
                OnStorageVmOverheadPercentChanging(value);
                ReportPropertyChanging("StorageVmOverheadPercent");
                _StorageVmOverheadPercent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StorageVmOverheadPercent");
                OnStorageVmOverheadPercentChanged();
            }
        }
        private Nullable<global::System.Int32> _StorageVmOverheadPercent;
        partial void OnStorageVmOverheadPercentChanging(Nullable<global::System.Int32> value);
        partial void OnStorageVmOverheadPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> StorageDataStoreOverheadType
        {
            get
            {
                return _StorageDataStoreOverheadType;
            }
            set
            {
                OnStorageDataStoreOverheadTypeChanging(value);
                ReportPropertyChanging("StorageDataStoreOverheadType");
                _StorageDataStoreOverheadType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StorageDataStoreOverheadType");
                OnStorageDataStoreOverheadTypeChanged();
            }
        }
        private Nullable<global::System.Byte> _StorageDataStoreOverheadType;
        partial void OnStorageDataStoreOverheadTypeChanging(Nullable<global::System.Byte> value);
        partial void OnStorageDataStoreOverheadTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> StorageDataStoreOverheadBytes
        {
            get
            {
                return _StorageDataStoreOverheadBytes;
            }
            set
            {
                OnStorageDataStoreOverheadBytesChanging(value);
                ReportPropertyChanging("StorageDataStoreOverheadBytes");
                _StorageDataStoreOverheadBytes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StorageDataStoreOverheadBytes");
                OnStorageDataStoreOverheadBytesChanged();
            }
        }
        private Nullable<global::System.Int64> _StorageDataStoreOverheadBytes;
        partial void OnStorageDataStoreOverheadBytesChanging(Nullable<global::System.Int64> value);
        partial void OnStorageDataStoreOverheadBytesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StorageDataStoreOverheadPercent
        {
            get
            {
                return _StorageDataStoreOverheadPercent;
            }
            set
            {
                OnStorageDataStoreOverheadPercentChanging(value);
                ReportPropertyChanging("StorageDataStoreOverheadPercent");
                _StorageDataStoreOverheadPercent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StorageDataStoreOverheadPercent");
                OnStorageDataStoreOverheadPercentChanged();
            }
        }
        private Nullable<global::System.Int32> _StorageDataStoreOverheadPercent;
        partial void OnStorageDataStoreOverheadPercentChanging(Nullable<global::System.Int32> value);
        partial void OnStorageDataStoreOverheadPercentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_CapacityRulesMeta_CapacityRules", "CapacityRulesMeta")]
        public EntityCollection<CapacityRulesMeta> CapacityRulesMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapacityRulesMeta>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_CapacityRules", "CapacityRulesMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapacityRulesMeta>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_CapacityRules", "CapacityRulesMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_CapacityRules", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_CapacityRules", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_CapacityRules", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_CapacityRules", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_CapacityRules", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_CapacityRules", "TagsMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="CapacityRulesMeta")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CapacityRulesMeta : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CapacityRulesMeta object.
        /// </summary>
        /// <param name="parent_Id">Initial value of the Parent_Id property.</param>
        /// <param name="capacityRule_Id">Initial value of the CapacityRule_Id property.</param>
        public static CapacityRulesMeta CreateCapacityRulesMeta(global::System.Guid parent_Id, global::System.Guid capacityRule_Id)
        {
            CapacityRulesMeta capacityRulesMeta = new CapacityRulesMeta();
            capacityRulesMeta.Parent_Id = parent_Id;
            capacityRulesMeta.CapacityRule_Id = capacityRule_Id;
            return capacityRulesMeta;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Parent_Id
        {
            get
            {
                return _Parent_Id;
            }
            set
            {
                if (_Parent_Id != value)
                {
                    OnParent_IdChanging(value);
                    ReportPropertyChanging("Parent_Id");
                    _Parent_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Parent_Id");
                    OnParent_IdChanged();
                }
            }
        }
        private global::System.Guid _Parent_Id;
        partial void OnParent_IdChanging(global::System.Guid value);
        partial void OnParent_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CapacityRule_Id
        {
            get
            {
                return _CapacityRule_Id;
            }
            set
            {
                if (_CapacityRule_Id != value)
                {
                    OnCapacityRule_IdChanging(value);
                    ReportPropertyChanging("CapacityRule_Id");
                    _CapacityRule_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CapacityRule_Id");
                    OnCapacityRule_IdChanged();
                }
            }
        }
        private global::System.Guid _CapacityRule_Id;
        partial void OnCapacityRule_IdChanging(global::System.Guid value);
        partial void OnCapacityRule_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_CapacityRulesMeta_CapacityRules", "CapacityRule")]
        public CapacityRule CapacityRule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapacityRule>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_CapacityRules", "CapacityRule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapacityRule>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_CapacityRules", "CapacityRule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CapacityRule> CapacityRuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapacityRule>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_CapacityRules", "CapacityRule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CapacityRule>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_CapacityRules", "CapacityRule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_CapacityRulesMeta_DataStoreGroups", "DataStoreGroup")]
        public DataStoreGroup DataStoreGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_DataStoreGroups", "DataStoreGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_DataStoreGroups", "DataStoreGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataStoreGroup> DataStoreGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_DataStoreGroups", "DataStoreGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_DataStoreGroups", "DataStoreGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_CapacityRulesMeta_DataStores", "DataStore")]
        public DataStore DataStore
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStore>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_DataStores", "DataStore").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStore>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_DataStores", "DataStore").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataStore> DataStoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStore>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_DataStores", "DataStore");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataStore>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_DataStores", "DataStore", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_CapacityRulesMeta_HypervisorGroups", "HypervisorGroup")]
        public HypervisorGroup HypervisorGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_HypervisorGroups", "HypervisorGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_HypervisorGroups", "HypervisorGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorGroup> HypervisorGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_HypervisorGroups", "HypervisorGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_HypervisorGroups", "HypervisorGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_CapacityRulesMeta_Hypervisors", "Hypervisor")]
        public Hypervisor Hypervisor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hypervisor>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_Hypervisors", "Hypervisor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hypervisor>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_Hypervisors", "Hypervisor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hypervisor> HypervisorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hypervisor>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_Hypervisors", "Hypervisor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hypervisor>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_Hypervisors", "Hypervisor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="CapacityStatistic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CapacityStatistic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CapacityStatistic object.
        /// </summary>
        /// <param name="parent_Id">Initial value of the Parent_Id property.</param>
        /// <param name="computeCapacityPercent">Initial value of the ComputeCapacityPercent property.</param>
        /// <param name="memoryCapacityPercent">Initial value of the MemoryCapacityPercent property.</param>
        /// <param name="storageCapacityPercent">Initial value of the StorageCapacityPercent property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static CapacityStatistic CreateCapacityStatistic(global::System.Guid parent_Id, global::System.Int32 computeCapacityPercent, global::System.Int32 memoryCapacityPercent, global::System.Int32 storageCapacityPercent, global::System.DateTime lastUpdated)
        {
            CapacityStatistic capacityStatistic = new CapacityStatistic();
            capacityStatistic.Parent_Id = parent_Id;
            capacityStatistic.ComputeCapacityPercent = computeCapacityPercent;
            capacityStatistic.MemoryCapacityPercent = memoryCapacityPercent;
            capacityStatistic.StorageCapacityPercent = storageCapacityPercent;
            capacityStatistic.LastUpdated = lastUpdated;
            return capacityStatistic;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Parent_Id
        {
            get
            {
                return _Parent_Id;
            }
            set
            {
                if (_Parent_Id != value)
                {
                    OnParent_IdChanging(value);
                    ReportPropertyChanging("Parent_Id");
                    _Parent_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Parent_Id");
                    OnParent_IdChanged();
                }
            }
        }
        private global::System.Guid _Parent_Id;
        partial void OnParent_IdChanging(global::System.Guid value);
        partial void OnParent_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ComputeCapacityPercent
        {
            get
            {
                return _ComputeCapacityPercent;
            }
            set
            {
                OnComputeCapacityPercentChanging(value);
                ReportPropertyChanging("ComputeCapacityPercent");
                _ComputeCapacityPercent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputeCapacityPercent");
                OnComputeCapacityPercentChanged();
            }
        }
        private global::System.Int32 _ComputeCapacityPercent;
        partial void OnComputeCapacityPercentChanging(global::System.Int32 value);
        partial void OnComputeCapacityPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MemoryCapacityPercent
        {
            get
            {
                return _MemoryCapacityPercent;
            }
            set
            {
                OnMemoryCapacityPercentChanging(value);
                ReportPropertyChanging("MemoryCapacityPercent");
                _MemoryCapacityPercent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemoryCapacityPercent");
                OnMemoryCapacityPercentChanged();
            }
        }
        private global::System.Int32 _MemoryCapacityPercent;
        partial void OnMemoryCapacityPercentChanging(global::System.Int32 value);
        partial void OnMemoryCapacityPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StorageCapacityPercent
        {
            get
            {
                return _StorageCapacityPercent;
            }
            set
            {
                OnStorageCapacityPercentChanging(value);
                ReportPropertyChanging("StorageCapacityPercent");
                _StorageCapacityPercent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StorageCapacityPercent");
                OnStorageCapacityPercentChanged();
            }
        }
        private global::System.Int32 _StorageCapacityPercent;
        partial void OnStorageCapacityPercentChanging(global::System.Int32 value);
        partial void OnStorageCapacityPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalLogicalCores
        {
            get
            {
                return _TotalLogicalCores;
            }
            set
            {
                OnTotalLogicalCoresChanging(value);
                ReportPropertyChanging("TotalLogicalCores");
                _TotalLogicalCores = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalLogicalCores");
                OnTotalLogicalCoresChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalLogicalCores;
        partial void OnTotalLogicalCoresChanging(Nullable<global::System.Int32> value);
        partial void OnTotalLogicalCoresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TotalMemoryBytes
        {
            get
            {
                return _TotalMemoryBytes;
            }
            set
            {
                OnTotalMemoryBytesChanging(value);
                ReportPropertyChanging("TotalMemoryBytes");
                _TotalMemoryBytes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalMemoryBytes");
                OnTotalMemoryBytesChanged();
            }
        }
        private Nullable<global::System.Int64> _TotalMemoryBytes;
        partial void OnTotalMemoryBytesChanging(Nullable<global::System.Int64> value);
        partial void OnTotalMemoryBytesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TotalStorageBytes
        {
            get
            {
                return _TotalStorageBytes;
            }
            set
            {
                OnTotalStorageBytesChanging(value);
                ReportPropertyChanging("TotalStorageBytes");
                _TotalStorageBytes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalStorageBytes");
                OnTotalStorageBytesChanged();
            }
        }
        private Nullable<global::System.Int64> _TotalStorageBytes;
        partial void OnTotalStorageBytesChanging(Nullable<global::System.Int64> value);
        partial void OnTotalStorageBytesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_HypervisorGroups_CapacityStatistics", "HypervisorGroup")]
        public HypervisorGroup HypervisorGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_CapacityStatistics", "HypervisorGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_CapacityStatistics", "HypervisorGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorGroup> HypervisorGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_CapacityStatistics", "HypervisorGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_CapacityStatistics", "HypervisorGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="ClarityEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClarityEntry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClarityEntry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="clarityId">Initial value of the ClarityId property.</param>
        public static ClarityEntry CreateClarityEntry(global::System.Guid id, global::System.String name, global::System.String clarityId)
        {
            ClarityEntry clarityEntry = new ClarityEntry();
            clarityEntry.Id = id;
            clarityEntry.Name = name;
            clarityEntry.ClarityId = clarityId;
            return clarityEntry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClarityId
        {
            get
            {
                return _ClarityId;
            }
            set
            {
                OnClarityIdChanging(value);
                ReportPropertyChanging("ClarityId");
                _ClarityId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClarityId");
                OnClarityIdChanged();
            }
        }
        private global::System.String _ClarityId;
        partial void OnClarityIdChanging(global::System.String value);
        partial void OnClarityIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Binaries_ClarityEntries", "Binary")]
        public EntityCollection<Binary> Binaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Binary>("MigrationTool_DevelopmentModel.FK_Binaries_ClarityEntries", "Binary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Binary>("MigrationTool_DevelopmentModel.FK_Binaries_ClarityEntries", "Binary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ClarityEntries", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_ClarityEntries", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_ClarityEntries", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ClarityEntries", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_ClarityEntries", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_ClarityEntries", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_BusinessSolutions_ClarityEntries", "BusinessSolution")]
        public EntityCollection<BusinessSolution> BusinessSolutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_ClarityEntries", "BusinessSolution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_ClarityEntries", "BusinessSolution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Applications_ClarityEntries", "Application")]
        public EntityCollection<Application> Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("MigrationTool_DevelopmentModel.FK_Applications_ClarityEntries", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("MigrationTool_DevelopmentModel.FK_Applications_ClarityEntries", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="Complexity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Complexity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Complexity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Complexity CreateComplexity(global::System.Int32 id, global::System.String name)
        {
            Complexity complexity = new Complexity();
            complexity.Id = id;
            complexity.Name = name;
            return complexity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Applications_Complexities", "Application")]
        public EntityCollection<Application> Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("MigrationTool_DevelopmentModel.FK_Applications_Complexities", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("MigrationTool_DevelopmentModel.FK_Applications_Complexities", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="DataSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataSource object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        public static DataSource CreateDataSource(global::System.Guid id, global::System.String name, global::System.Boolean inactive)
        {
            DataSource dataSource = new DataSource();
            dataSource.Id = id;
            dataSource.Name = name;
            dataSource.Inactive = inactive;
            return dataSource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "historical_fk", "DataSourcesStatu")]
        public EntityCollection<DataSourcesStatu> DataSourcesStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DataSourcesStatu>("MigrationTool_DevelopmentModel.historical_fk", "DataSourcesStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DataSourcesStatu>("MigrationTool_DevelopmentModel.historical_fk", "DataSourcesStatu", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="DataSourcesStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataSourcesStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataSourcesStatu object.
        /// </summary>
        /// <param name="dataSources_Id">Initial value of the DataSources_Id property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="success">Initial value of the Success property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        public static DataSourcesStatu CreateDataSourcesStatu(global::System.Guid dataSources_Id, global::System.DateTime createDate, global::System.Boolean success, global::System.Int32 duration)
        {
            DataSourcesStatu dataSourcesStatu = new DataSourcesStatu();
            dataSourcesStatu.DataSources_Id = dataSources_Id;
            dataSourcesStatu.CreateDate = createDate;
            dataSourcesStatu.Success = success;
            dataSourcesStatu.Duration = duration;
            return dataSourcesStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DataSources_Id
        {
            get
            {
                return _DataSources_Id;
            }
            set
            {
                if (_DataSources_Id != value)
                {
                    OnDataSources_IdChanging(value);
                    ReportPropertyChanging("DataSources_Id");
                    _DataSources_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DataSources_Id");
                    OnDataSources_IdChanged();
                }
            }
        }
        private global::System.Guid _DataSources_Id;
        partial void OnDataSources_IdChanging(global::System.Guid value);
        partial void OnDataSources_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                if (_CreateDate != value)
                {
                    OnCreateDateChanging(value);
                    ReportPropertyChanging("CreateDate");
                    _CreateDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreateDate");
                    OnCreateDateChanged();
                }
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Success
        {
            get
            {
                return _Success;
            }
            set
            {
                OnSuccessChanging(value);
                ReportPropertyChanging("Success");
                _Success = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Success");
                OnSuccessChanged();
            }
        }
        private global::System.Boolean _Success;
        partial void OnSuccessChanging(global::System.Boolean value);
        partial void OnSuccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.Int32 _Duration;
        partial void OnDurationChanging(global::System.Int32 value);
        partial void OnDurationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "historical_fk", "DataSource")]
        public DataSource DataSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("MigrationTool_DevelopmentModel.historical_fk", "DataSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("MigrationTool_DevelopmentModel.historical_fk", "DataSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataSource> DataSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("MigrationTool_DevelopmentModel.historical_fk", "DataSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataSource>("MigrationTool_DevelopmentModel.historical_fk", "DataSource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="DataStore")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataStore : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataStore object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="capacity">Initial value of the Capacity property.</param>
        /// <param name="freeSpace">Initial value of the FreeSpace property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        /// <param name="localStorage">Initial value of the LocalStorage property.</param>
        /// <param name="uniqueId">Initial value of the UniqueId property.</param>
        public static DataStore CreateDataStore(global::System.Guid id, global::System.String name, global::System.Int64 capacity, global::System.Int64 freeSpace, global::System.DateTime createdDate, global::System.DateTime lastUpdated, global::System.Boolean inactive, global::System.Boolean localStorage, global::System.String uniqueId)
        {
            DataStore dataStore = new DataStore();
            dataStore.Id = id;
            dataStore.Name = name;
            dataStore.Capacity = capacity;
            dataStore.FreeSpace = freeSpace;
            dataStore.CreatedDate = createdDate;
            dataStore.LastUpdated = lastUpdated;
            dataStore.Inactive = inactive;
            dataStore.LocalStorage = localStorage;
            dataStore.UniqueId = uniqueId;
            return dataStore;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private global::System.Int64 _Capacity;
        partial void OnCapacityChanging(global::System.Int64 value);
        partial void OnCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FreeSpace
        {
            get
            {
                return _FreeSpace;
            }
            set
            {
                OnFreeSpaceChanging(value);
                ReportPropertyChanging("FreeSpace");
                _FreeSpace = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FreeSpace");
                OnFreeSpaceChanged();
            }
        }
        private global::System.Int64 _FreeSpace;
        partial void OnFreeSpaceChanging(global::System.Int64 value);
        partial void OnFreeSpaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DataStoreGroup_Id
        {
            get
            {
                return _DataStoreGroup_Id;
            }
            set
            {
                OnDataStoreGroup_IdChanging(value);
                ReportPropertyChanging("DataStoreGroup_Id");
                _DataStoreGroup_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataStoreGroup_Id");
                OnDataStoreGroup_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _DataStoreGroup_Id;
        partial void OnDataStoreGroup_IdChanging(Nullable<global::System.Guid> value);
        partial void OnDataStoreGroup_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DataStoreCategory_Id
        {
            get
            {
                return _DataStoreCategory_Id;
            }
            set
            {
                OnDataStoreCategory_IdChanging(value);
                ReportPropertyChanging("DataStoreCategory_Id");
                _DataStoreCategory_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataStoreCategory_Id");
                OnDataStoreCategory_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _DataStoreCategory_Id;
        partial void OnDataStoreCategory_IdChanging(Nullable<global::System.Guid> value);
        partial void OnDataStoreCategory_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LocalStorage
        {
            get
            {
                return _LocalStorage;
            }
            set
            {
                OnLocalStorageChanging(value);
                ReportPropertyChanging("LocalStorage");
                _LocalStorage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocalStorage");
                OnLocalStorageChanged();
            }
        }
        private global::System.Boolean _LocalStorage;
        partial void OnLocalStorageChanging(global::System.Boolean value);
        partial void OnLocalStorageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UniqueId
        {
            get
            {
                return _UniqueId;
            }
            set
            {
                OnUniqueIdChanging(value);
                ReportPropertyChanging("UniqueId");
                _UniqueId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UniqueId");
                OnUniqueIdChanged();
            }
        }
        private global::System.String _UniqueId;
        partial void OnUniqueIdChanging(global::System.String value);
        partial void OnUniqueIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_DataStore_DataStoreGroup", "DataStoreGroup")]
        public DataStoreGroup DataStoreGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_DataStore_DataStoreGroup", "DataStoreGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_DataStore_DataStoreGroup", "DataStoreGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataStoreGroup> DataStoreGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_DataStore_DataStoreGroup", "DataStoreGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_DataStore_DataStoreGroup", "DataStoreGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_VirtualHardDrive_DataStore", "VirtualHardDrive")]
        public EntityCollection<VirtualHardDrive> VirtualHardDrives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VirtualHardDrive>("MigrationTool_DevelopmentModel.FK_VirtualHardDrive_DataStore", "VirtualHardDrive");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VirtualHardDrive>("MigrationTool_DevelopmentModel.FK_VirtualHardDrive_DataStore", "VirtualHardDrive", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "DataStoresHypervisors", "Hypervisor")]
        public EntityCollection<Hypervisor> Hypervisors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hypervisor>("MigrationTool_DevelopmentModel.DataStoresHypervisors", "Hypervisor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hypervisor>("MigrationTool_DevelopmentModel.DataStoresHypervisors", "Hypervisor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_DataStores", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_DataStores", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_DataStores", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_DataStores", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStores", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStores", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_DataStores_DataStoreCategories", "DataStoreCategory")]
        public DataStoreCategory DataStoreCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreCategory>("MigrationTool_DevelopmentModel.FK_DataStores_DataStoreCategories", "DataStoreCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreCategory>("MigrationTool_DevelopmentModel.FK_DataStores_DataStoreCategories", "DataStoreCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataStoreCategory> DataStoreCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreCategory>("MigrationTool_DevelopmentModel.FK_DataStores_DataStoreCategories", "DataStoreCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataStoreCategory>("MigrationTool_DevelopmentModel.FK_DataStores_DataStoreCategories", "DataStoreCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_CapacityRulesMeta_DataStores", "CapacityRulesMeta")]
        public EntityCollection<CapacityRulesMeta> CapacityRulesMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapacityRulesMeta>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_DataStores", "CapacityRulesMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapacityRulesMeta>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_DataStores", "CapacityRulesMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="DataStoreCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataStoreCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataStoreCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static DataStoreCategory CreateDataStoreCategory(global::System.Guid id, global::System.String name)
        {
            DataStoreCategory dataStoreCategory = new DataStoreCategory();
            dataStoreCategory.Id = id;
            dataStoreCategory.Name = name;
            return dataStoreCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_DataStores_DataStoreCategories", "DataStore")]
        public EntityCollection<DataStore> DataStores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DataStore>("MigrationTool_DevelopmentModel.FK_DataStores_DataStoreCategories", "DataStore");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DataStore>("MigrationTool_DevelopmentModel.FK_DataStores_DataStoreCategories", "DataStore", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_DataStoreCategories", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_DataStoreCategories", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_DataStoreCategories", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_DataStoreCategories", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStoreCategories", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStoreCategories", "TagsMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="DataStoreGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataStoreGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataStoreGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        public static DataStoreGroup CreateDataStoreGroup(global::System.Guid id, global::System.String name, global::System.DateTime createdDate, global::System.DateTime lastUpdated, global::System.Boolean inactive)
        {
            DataStoreGroup dataStoreGroup = new DataStoreGroup();
            dataStoreGroup.Id = id;
            dataStoreGroup.Name = name;
            dataStoreGroup.CreatedDate = createdDate;
            dataStoreGroup.LastUpdated = lastUpdated;
            dataStoreGroup.Inactive = inactive;
            return dataStoreGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> HypervisorController_Id
        {
            get
            {
                return _HypervisorController_Id;
            }
            set
            {
                OnHypervisorController_IdChanging(value);
                ReportPropertyChanging("HypervisorController_Id");
                _HypervisorController_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HypervisorController_Id");
                OnHypervisorController_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _HypervisorController_Id;
        partial void OnHypervisorController_IdChanging(Nullable<global::System.Guid> value);
        partial void OnHypervisorController_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_DataStore_DataStoreGroup", "DataStore")]
        public EntityCollection<DataStore> DataStores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DataStore>("MigrationTool_DevelopmentModel.FK_DataStore_DataStoreGroup", "DataStore");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DataStore>("MigrationTool_DevelopmentModel.FK_DataStore_DataStoreGroup", "DataStore", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_DataStoreGroups", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_DataStoreGroups", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_DataStoreGroups", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_DataStoreGroups", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStoreGroups", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStoreGroups", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_DataStoreGroups_HypervisorControllers", "HypervisorController")]
        public HypervisorController HypervisorController
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_DataStoreGroups_HypervisorControllers", "HypervisorController").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_DataStoreGroups_HypervisorControllers", "HypervisorController").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorController> HypervisorControllerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_DataStoreGroups_HypervisorControllers", "HypervisorController");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_DataStoreGroups_HypervisorControllers", "HypervisorController", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_CapacityRulesMeta_DataStoreGroups", "CapacityRulesMeta")]
        public EntityCollection<CapacityRulesMeta> CapacityRulesMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapacityRulesMeta>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_DataStoreGroups", "CapacityRulesMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapacityRulesMeta>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_DataStoreGroups", "CapacityRulesMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="Division")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Division : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Division object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static Division CreateDivision(global::System.Guid id, global::System.String name, global::System.DateTime lastUpdated)
        {
            Division division = new Division();
            division.Id = id;
            division.Name = name;
            division.LastUpdated = lastUpdated;
            return division;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_EntitledUsers_Divisions", "EntitledUser")]
        public EntityCollection<EntitledUser> EntitledUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntitledUser>("MigrationTool_DevelopmentModel.FK_EntitledUsers_Divisions", "EntitledUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntitledUser>("MigrationTool_DevelopmentModel.FK_EntitledUsers_Divisions", "EntitledUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Divisions", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_Divisions", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_Divisions", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Divisions", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_Divisions", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_Divisions", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_ApplicationOwners_Divisions", "ApplicationOwner")]
        public EntityCollection<ApplicationOwner> ApplicationOwners
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationOwner>("MigrationTool_DevelopmentModel.FK_ApplicationOwners_Divisions", "ApplicationOwner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationOwner>("MigrationTool_DevelopmentModel.FK_ApplicationOwners_Divisions", "ApplicationOwner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "BusinessSolutionsDivisions", "BusinessSolution")]
        public EntityCollection<BusinessSolution> BusinessSolutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.BusinessSolutionsDivisions", "BusinessSolution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.BusinessSolutionsDivisions", "BusinessSolution", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="EntitledUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntitledUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntitledUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        /// <param name="toBeMigrated">Initial value of the ToBeMigrated property.</param>
        public static EntitledUser CreateEntitledUser(global::System.Guid id, global::System.String username, global::System.DateTime lastUpdated, global::System.Boolean inactive, global::System.Boolean toBeMigrated)
        {
            EntitledUser entitledUser = new EntitledUser();
            entitledUser.Id = id;
            entitledUser.Username = username;
            entitledUser.LastUpdated = lastUpdated;
            entitledUser.Inactive = inactive;
            entitledUser.ToBeMigrated = toBeMigrated;
            return entitledUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Division_Id
        {
            get
            {
                return _Division_Id;
            }
            set
            {
                OnDivision_IdChanging(value);
                ReportPropertyChanging("Division_Id");
                _Division_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Division_Id");
                OnDivision_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _Division_Id;
        partial void OnDivision_IdChanging(Nullable<global::System.Guid> value);
        partial void OnDivision_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ToBeMigrated
        {
            get
            {
                return _ToBeMigrated;
            }
            set
            {
                OnToBeMigratedChanging(value);
                ReportPropertyChanging("ToBeMigrated");
                _ToBeMigrated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToBeMigrated");
                OnToBeMigratedChanged();
            }
        }
        private global::System.Boolean _ToBeMigrated;
        partial void OnToBeMigratedChanging(global::System.Boolean value);
        partial void OnToBeMigratedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessUnitCode
        {
            get
            {
                return _BusinessUnitCode;
            }
            set
            {
                OnBusinessUnitCodeChanging(value);
                ReportPropertyChanging("BusinessUnitCode");
                _BusinessUnitCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BusinessUnitCode");
                OnBusinessUnitCodeChanged();
            }
        }
        private global::System.String _BusinessUnitCode;
        partial void OnBusinessUnitCodeChanging(global::System.String value);
        partial void OnBusinessUnitCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SiteCode
        {
            get
            {
                return _SiteCode;
            }
            set
            {
                OnSiteCodeChanging(value);
                ReportPropertyChanging("SiteCode");
                _SiteCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SiteCode");
                OnSiteCodeChanged();
            }
        }
        private global::System.String _SiteCode;
        partial void OnSiteCodeChanging(global::System.String value);
        partial void OnSiteCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CostCenter
        {
            get
            {
                return _CostCenter;
            }
            set
            {
                OnCostCenterChanging(value);
                ReportPropertyChanging("CostCenter");
                _CostCenter = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CostCenter");
                OnCostCenterChanged();
            }
        }
        private global::System.String _CostCenter;
        partial void OnCostCenterChanging(global::System.String value);
        partial void OnCostCenterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActiveDirectoryDomain
        {
            get
            {
                return _ActiveDirectoryDomain;
            }
            set
            {
                OnActiveDirectoryDomainChanging(value);
                ReportPropertyChanging("ActiveDirectoryDomain");
                _ActiveDirectoryDomain = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActiveDirectoryDomain");
                OnActiveDirectoryDomainChanged();
            }
        }
        private global::System.String _ActiveDirectoryDomain;
        partial void OnActiveDirectoryDomainChanging(global::System.String value);
        partial void OnActiveDirectoryDomainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PersonnelCategory
        {
            get
            {
                return _PersonnelCategory;
            }
            set
            {
                OnPersonnelCategoryChanging(value);
                ReportPropertyChanging("PersonnelCategory");
                _PersonnelCategory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PersonnelCategory");
                OnPersonnelCategoryChanged();
            }
        }
        private global::System.String _PersonnelCategory;
        partial void OnPersonnelCategoryChanging(global::System.String value);
        partial void OnPersonnelCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reference
        {
            get
            {
                return _Reference;
            }
            set
            {
                OnReferenceChanging(value);
                ReportPropertyChanging("Reference");
                _Reference = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reference");
                OnReferenceChanged();
            }
        }
        private global::System.String _Reference;
        partial void OnReferenceChanging(global::System.String value);
        partial void OnReferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LegalEntity
        {
            get
            {
                return _LegalEntity;
            }
            set
            {
                OnLegalEntityChanging(value);
                ReportPropertyChanging("LegalEntity");
                _LegalEntity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LegalEntity");
                OnLegalEntityChanged();
            }
        }
        private global::System.String _LegalEntity;
        partial void OnLegalEntityChanging(global::System.String value);
        partial void OnLegalEntityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryCode
        {
            get
            {
                return _CountryCode;
            }
            set
            {
                OnCountryCodeChanging(value);
                ReportPropertyChanging("CountryCode");
                _CountryCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryCode");
                OnCountryCodeChanged();
            }
        }
        private global::System.String _CountryCode;
        partial void OnCountryCodeChanging(global::System.String value);
        partial void OnCountryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessUnitDescription
        {
            get
            {
                return _BusinessUnitDescription;
            }
            set
            {
                OnBusinessUnitDescriptionChanging(value);
                ReportPropertyChanging("BusinessUnitDescription");
                _BusinessUnitDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BusinessUnitDescription");
                OnBusinessUnitDescriptionChanged();
            }
        }
        private global::System.String _BusinessUnitDescription;
        partial void OnBusinessUnitDescriptionChanging(global::System.String value);
        partial void OnBusinessUnitDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DepartmentDescription
        {
            get
            {
                return _DepartmentDescription;
            }
            set
            {
                OnDepartmentDescriptionChanging(value);
                ReportPropertyChanging("DepartmentDescription");
                _DepartmentDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DepartmentDescription");
                OnDepartmentDescriptionChanged();
            }
        }
        private global::System.String _DepartmentDescription;
        partial void OnDepartmentDescriptionChanging(global::System.String value);
        partial void OnDepartmentDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExtendedSiteCode
        {
            get
            {
                return _ExtendedSiteCode;
            }
            set
            {
                OnExtendedSiteCodeChanging(value);
                ReportPropertyChanging("ExtendedSiteCode");
                _ExtendedSiteCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExtendedSiteCode");
                OnExtendedSiteCodeChanged();
            }
        }
        private global::System.String _ExtendedSiteCode;
        partial void OnExtendedSiteCodeChanging(global::System.String value);
        partial void OnExtendedSiteCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SiteName
        {
            get
            {
                return _SiteName;
            }
            set
            {
                OnSiteNameChanging(value);
                ReportPropertyChanging("SiteName");
                _SiteName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SiteName");
                OnSiteNameChanged();
            }
        }
        private global::System.String _SiteName;
        partial void OnSiteNameChanging(global::System.String value);
        partial void OnSiteNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorldRegion
        {
            get
            {
                return _WorldRegion;
            }
            set
            {
                OnWorldRegionChanging(value);
                ReportPropertyChanging("WorldRegion");
                _WorldRegion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WorldRegion");
                OnWorldRegionChanged();
            }
        }
        private global::System.String _WorldRegion;
        partial void OnWorldRegionChanging(global::System.String value);
        partial void OnWorldRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalAddress
        {
            get
            {
                return _PostalAddress;
            }
            set
            {
                OnPostalAddressChanging(value);
                ReportPropertyChanging("PostalAddress");
                _PostalAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalAddress");
                OnPostalAddressChanged();
            }
        }
        private global::System.String _PostalAddress;
        partial void OnPostalAddressChanging(global::System.String value);
        partial void OnPostalAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SectorCode
        {
            get
            {
                return _SectorCode;
            }
            set
            {
                OnSectorCodeChanging(value);
                ReportPropertyChanging("SectorCode");
                _SectorCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SectorCode");
                OnSectorCodeChanged();
            }
        }
        private global::System.String _SectorCode;
        partial void OnSectorCodeChanging(global::System.String value);
        partial void OnSectorCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailSystem
        {
            get
            {
                return _EmailSystem;
            }
            set
            {
                OnEmailSystemChanging(value);
                ReportPropertyChanging("EmailSystem");
                _EmailSystem = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailSystem");
                OnEmailSystemChanged();
            }
        }
        private global::System.String _EmailSystem;
        partial void OnEmailSystemChanging(global::System.String value);
        partial void OnEmailSystemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Supervisor
        {
            get
            {
                return _Supervisor;
            }
            set
            {
                OnSupervisorChanging(value);
                ReportPropertyChanging("Supervisor");
                _Supervisor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Supervisor");
                OnSupervisorChanged();
            }
        }
        private global::System.String _Supervisor;
        partial void OnSupervisorChanging(global::System.String value);
        partial void OnSupervisorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "ActiveDirectoryGroupsEntitledUsers", "ActiveDirectoryGroup")]
        public EntityCollection<ActiveDirectoryGroup> ActiveDirectoryGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActiveDirectoryGroup>("MigrationTool_DevelopmentModel.ActiveDirectoryGroupsEntitledUsers", "ActiveDirectoryGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActiveDirectoryGroup>("MigrationTool_DevelopmentModel.ActiveDirectoryGroupsEntitledUsers", "ActiveDirectoryGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_EntitledUsers", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_EntitledUsers", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_EntitledUsers", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_EntitledUsers_Divisions", "Division")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("MigrationTool_DevelopmentModel.FK_EntitledUsers_Divisions", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("MigrationTool_DevelopmentModel.FK_EntitledUsers_Divisions", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("MigrationTool_DevelopmentModel.FK_EntitledUsers_Divisions", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("MigrationTool_DevelopmentModel.FK_EntitledUsers_Divisions", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_EntitledUsers", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_EntitledUsers", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_EntitledUsers", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplicationLaunches_EntitledUsers", "PublishedApplicationLaunch")]
        public EntityCollection<PublishedApplicationLaunch> PublishedApplicationLaunches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PublishedApplicationLaunch>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_EntitledUsers", "PublishedApplicationLaunch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PublishedApplicationLaunch>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_EntitledUsers", "PublishedApplicationLaunch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "PublishedApplicationsEntitledUsers", "PublishedApplication")]
        public EntityCollection<PublishedApplication> PublishedApplications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PublishedApplication>("MigrationTool_DevelopmentModel.PublishedApplicationsEntitledUsers", "PublishedApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PublishedApplication>("MigrationTool_DevelopmentModel.PublishedApplicationsEntitledUsers", "PublishedApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "XenDesktopBrokerDesktopsEntitledUsers", "XenDesktopBrokerDesktop")]
        public EntityCollection<XenDesktopBrokerDesktop> XenDesktopBrokerDesktops
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.XenDesktopBrokerDesktopsEntitledUsers", "XenDesktopBrokerDesktop");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.XenDesktopBrokerDesktopsEntitledUsers", "XenDesktopBrokerDesktop", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopBrokerConnections_EntitledUsers", "XenDesktopBrokerConnection")]
        public EntityCollection<XenDesktopBrokerConnection> XenDesktopBrokerConnections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenDesktopBrokerConnection>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerConnections_EntitledUsers", "XenDesktopBrokerConnection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenDesktopBrokerConnection>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerConnections_EntitledUsers", "XenDesktopBrokerConnection", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="Hypervisor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Hypervisor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Hypervisor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="hypervisorType_Id">Initial value of the HypervisorType_Id property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        /// <param name="simultaneousMultithreading">Initial value of the SimultaneousMultithreading property.</param>
        public static Hypervisor CreateHypervisor(global::System.Guid id, global::System.String name, global::System.Guid hypervisorType_Id, global::System.DateTime createdDate, global::System.DateTime lastUpdated, global::System.Boolean inactive, global::System.Boolean simultaneousMultithreading)
        {
            Hypervisor hypervisor = new Hypervisor();
            hypervisor.Id = id;
            hypervisor.Name = name;
            hypervisor.HypervisorType_Id = hypervisorType_Id;
            hypervisor.CreatedDate = createdDate;
            hypervisor.LastUpdated = lastUpdated;
            hypervisor.Inactive = inactive;
            hypervisor.SimultaneousMultithreading = simultaneousMultithreading;
            return hypervisor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid HypervisorType_Id
        {
            get
            {
                return _HypervisorType_Id;
            }
            set
            {
                OnHypervisorType_IdChanging(value);
                ReportPropertyChanging("HypervisorType_Id");
                _HypervisorType_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HypervisorType_Id");
                OnHypervisorType_IdChanged();
            }
        }
        private global::System.Guid _HypervisorType_Id;
        partial void OnHypervisorType_IdChanging(global::System.Guid value);
        partial void OnHypervisorType_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> HypervisorGroup_Id
        {
            get
            {
                return _HypervisorGroup_Id;
            }
            set
            {
                OnHypervisorGroup_IdChanging(value);
                ReportPropertyChanging("HypervisorGroup_Id");
                _HypervisorGroup_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HypervisorGroup_Id");
                OnHypervisorGroup_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _HypervisorGroup_Id;
        partial void OnHypervisorGroup_IdChanging(Nullable<global::System.Guid> value);
        partial void OnHypervisorGroup_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> HypervisorWorkloadProfile_Id
        {
            get
            {
                return _HypervisorWorkloadProfile_Id;
            }
            set
            {
                OnHypervisorWorkloadProfile_IdChanging(value);
                ReportPropertyChanging("HypervisorWorkloadProfile_Id");
                _HypervisorWorkloadProfile_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HypervisorWorkloadProfile_Id");
                OnHypervisorWorkloadProfile_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _HypervisorWorkloadProfile_Id;
        partial void OnHypervisorWorkloadProfile_IdChanging(Nullable<global::System.Guid> value);
        partial void OnHypervisorWorkloadProfile_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Memory
        {
            get
            {
                return _Memory;
            }
            set
            {
                OnMemoryChanging(value);
                ReportPropertyChanging("Memory");
                _Memory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Memory");
                OnMemoryChanged();
            }
        }
        private Nullable<global::System.Int64> _Memory;
        partial void OnMemoryChanging(Nullable<global::System.Int64> value);
        partial void OnMemoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProcessorCores
        {
            get
            {
                return _ProcessorCores;
            }
            set
            {
                OnProcessorCoresChanging(value);
                ReportPropertyChanging("ProcessorCores");
                _ProcessorCores = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProcessorCores");
                OnProcessorCoresChanged();
            }
        }
        private Nullable<global::System.Int32> _ProcessorCores;
        partial void OnProcessorCoresChanging(Nullable<global::System.Int32> value);
        partial void OnProcessorCoresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SimultaneousMultithreading
        {
            get
            {
                return _SimultaneousMultithreading;
            }
            set
            {
                OnSimultaneousMultithreadingChanging(value);
                ReportPropertyChanging("SimultaneousMultithreading");
                _SimultaneousMultithreading = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SimultaneousMultithreading");
                OnSimultaneousMultithreadingChanged();
            }
        }
        private global::System.Boolean _SimultaneousMultithreading;
        partial void OnSimultaneousMultithreadingChanging(global::System.Boolean value);
        partial void OnSimultaneousMultithreadingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> HypervisorController_Id
        {
            get
            {
                return _HypervisorController_Id;
            }
            set
            {
                OnHypervisorController_IdChanging(value);
                ReportPropertyChanging("HypervisorController_Id");
                _HypervisorController_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HypervisorController_Id");
                OnHypervisorController_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _HypervisorController_Id;
        partial void OnHypervisorController_IdChanging(Nullable<global::System.Guid> value);
        partial void OnHypervisorController_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IPAddress
        {
            get
            {
                return _IPAddress;
            }
            set
            {
                OnIPAddressChanging(value);
                ReportPropertyChanging("IPAddress");
                _IPAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IPAddress");
                OnIPAddressChanged();
            }
        }
        private global::System.String _IPAddress;
        partial void OnIPAddressChanging(global::System.String value);
        partial void OnIPAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SiteLocation
        {
            get
            {
                return _SiteLocation;
            }
            set
            {
                OnSiteLocationChanging(value);
                ReportPropertyChanging("SiteLocation");
                _SiteLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SiteLocation");
                OnSiteLocationChanged();
            }
        }
        private global::System.String _SiteLocation;
        partial void OnSiteLocationChanging(global::System.String value);
        partial void OnSiteLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HyperVisorVersion
        {
            get
            {
                return _HyperVisorVersion;
            }
            set
            {
                OnHyperVisorVersionChanging(value);
                ReportPropertyChanging("HyperVisorVersion");
                _HyperVisorVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HyperVisorVersion");
                OnHyperVisorVersionChanged();
            }
        }
        private global::System.String _HyperVisorVersion;
        partial void OnHyperVisorVersionChanging(global::System.String value);
        partial void OnHyperVisorVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Hypervisors_HypervisorGroups", "HypervisorGroup")]
        public HypervisorGroup HypervisorGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorGroups", "HypervisorGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorGroups", "HypervisorGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorGroup> HypervisorGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorGroups", "HypervisorGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorGroups", "HypervisorGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Hypervisors_HypervisorTypes", "HypervisorType")]
        public HypervisorType HypervisorType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorType>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorTypes", "HypervisorType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorType>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorTypes", "HypervisorType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorType> HypervisorTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorType>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorTypes", "HypervisorType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorType>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorTypes", "HypervisorType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Hypervisors", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_Hypervisors", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_Hypervisors", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Hypervisors", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_Hypervisors", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_Hypervisors", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Hypervisors_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile")]
        public HypervisorWorkloadProfile HypervisorWorkloadProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorWorkloadProfile>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorWorkloadProfile>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorWorkloadProfile> HypervisorWorkloadProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorWorkloadProfile>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorWorkloadProfile>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_VirtualMachines_Hypervisors", "VirtualMachine")]
        public EntityCollection<VirtualMachine> VirtualMachines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VirtualMachine>("MigrationTool_DevelopmentModel.FK_VirtualMachines_Hypervisors", "VirtualMachine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VirtualMachine>("MigrationTool_DevelopmentModel.FK_VirtualMachines_Hypervisors", "VirtualMachine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "DataStoresHypervisors", "DataStore")]
        public EntityCollection<DataStore> DataStores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DataStore>("MigrationTool_DevelopmentModel.DataStoresHypervisors", "DataStore");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DataStore>("MigrationTool_DevelopmentModel.DataStoresHypervisors", "DataStore", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Hypervisors_HypervisorControllers", "HypervisorController")]
        public HypervisorController HypervisorController
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorControllers", "HypervisorController").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorControllers", "HypervisorController").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorController> HypervisorControllerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorControllers", "HypervisorController");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorControllers", "HypervisorController", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_CapacityRulesMeta_Hypervisors", "CapacityRulesMeta")]
        public EntityCollection<CapacityRulesMeta> CapacityRulesMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapacityRulesMeta>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_Hypervisors", "CapacityRulesMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapacityRulesMeta>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_Hypervisors", "CapacityRulesMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="HypervisorController")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HypervisorController : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HypervisorController object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        public static HypervisorController CreateHypervisorController(global::System.Guid id, global::System.String name, global::System.DateTime createdDate, global::System.DateTime lastUpdated, global::System.Boolean inactive)
        {
            HypervisorController hypervisorController = new HypervisorController();
            hypervisorController.Id = id;
            hypervisorController.Name = name;
            hypervisorController.CreatedDate = createdDate;
            hypervisorController.LastUpdated = lastUpdated;
            hypervisorController.Inactive = inactive;
            return hypervisorController;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_DataStoreGroups_HypervisorControllers", "DataStoreGroup")]
        public EntityCollection<DataStoreGroup> DataStoreGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_DataStoreGroups_HypervisorControllers", "DataStoreGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_DataStoreGroups_HypervisorControllers", "DataStoreGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_HypervisorGroups_HypervisorControllers", "HypervisorGroup")]
        public EntityCollection<HypervisorGroup> HypervisorGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_HypervisorControllers", "HypervisorGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_HypervisorControllers", "HypervisorGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Hypervisors_HypervisorControllers", "Hypervisor")]
        public EntityCollection<Hypervisor> Hypervisors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hypervisor>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorControllers", "Hypervisor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hypervisor>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorControllers", "Hypervisor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_HypervisorControllers", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorControllers", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorControllers", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_HypervisorControllers", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorControllers", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorControllers", "TagsMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="HypervisorGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HypervisorGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HypervisorGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        /// <param name="highAvailabilityCalculationType">Initial value of the HighAvailabilityCalculationType property.</param>
        /// <param name="highAvailabilityReservedPercentage">Initial value of the HighAvailabilityReservedPercentage property.</param>
        /// <param name="highAvailabilityReservedHypervisors">Initial value of the HighAvailabilityReservedHypervisors property.</param>
        /// <param name="hyperconverged">Initial value of the Hyperconverged property.</param>
        public static HypervisorGroup CreateHypervisorGroup(global::System.Guid id, global::System.String name, global::System.DateTime createdDate, global::System.DateTime lastUpdated, global::System.Boolean inactive, global::System.Byte highAvailabilityCalculationType, global::System.Int32 highAvailabilityReservedPercentage, global::System.Int32 highAvailabilityReservedHypervisors, global::System.Boolean hyperconverged)
        {
            HypervisorGroup hypervisorGroup = new HypervisorGroup();
            hypervisorGroup.Id = id;
            hypervisorGroup.Name = name;
            hypervisorGroup.CreatedDate = createdDate;
            hypervisorGroup.LastUpdated = lastUpdated;
            hypervisorGroup.Inactive = inactive;
            hypervisorGroup.HighAvailabilityCalculationType = highAvailabilityCalculationType;
            hypervisorGroup.HighAvailabilityReservedPercentage = highAvailabilityReservedPercentage;
            hypervisorGroup.HighAvailabilityReservedHypervisors = highAvailabilityReservedHypervisors;
            hypervisorGroup.Hyperconverged = hyperconverged;
            return hypervisorGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> HypervisorGroupType_Id
        {
            get
            {
                return _HypervisorGroupType_Id;
            }
            set
            {
                OnHypervisorGroupType_IdChanging(value);
                ReportPropertyChanging("HypervisorGroupType_Id");
                _HypervisorGroupType_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HypervisorGroupType_Id");
                OnHypervisorGroupType_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _HypervisorGroupType_Id;
        partial void OnHypervisorGroupType_IdChanging(Nullable<global::System.Guid> value);
        partial void OnHypervisorGroupType_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte HighAvailabilityCalculationType
        {
            get
            {
                return _HighAvailabilityCalculationType;
            }
            set
            {
                OnHighAvailabilityCalculationTypeChanging(value);
                ReportPropertyChanging("HighAvailabilityCalculationType");
                _HighAvailabilityCalculationType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighAvailabilityCalculationType");
                OnHighAvailabilityCalculationTypeChanged();
            }
        }
        private global::System.Byte _HighAvailabilityCalculationType;
        partial void OnHighAvailabilityCalculationTypeChanging(global::System.Byte value);
        partial void OnHighAvailabilityCalculationTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HighAvailabilityReservedPercentage
        {
            get
            {
                return _HighAvailabilityReservedPercentage;
            }
            set
            {
                OnHighAvailabilityReservedPercentageChanging(value);
                ReportPropertyChanging("HighAvailabilityReservedPercentage");
                _HighAvailabilityReservedPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighAvailabilityReservedPercentage");
                OnHighAvailabilityReservedPercentageChanged();
            }
        }
        private global::System.Int32 _HighAvailabilityReservedPercentage;
        partial void OnHighAvailabilityReservedPercentageChanging(global::System.Int32 value);
        partial void OnHighAvailabilityReservedPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HighAvailabilityReservedHypervisors
        {
            get
            {
                return _HighAvailabilityReservedHypervisors;
            }
            set
            {
                OnHighAvailabilityReservedHypervisorsChanging(value);
                ReportPropertyChanging("HighAvailabilityReservedHypervisors");
                _HighAvailabilityReservedHypervisors = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighAvailabilityReservedHypervisors");
                OnHighAvailabilityReservedHypervisorsChanged();
            }
        }
        private global::System.Int32 _HighAvailabilityReservedHypervisors;
        partial void OnHighAvailabilityReservedHypervisorsChanging(global::System.Int32 value);
        partial void OnHighAvailabilityReservedHypervisorsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> HypervisorController_Id
        {
            get
            {
                return _HypervisorController_Id;
            }
            set
            {
                OnHypervisorController_IdChanging(value);
                ReportPropertyChanging("HypervisorController_Id");
                _HypervisorController_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HypervisorController_Id");
                OnHypervisorController_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _HypervisorController_Id;
        partial void OnHypervisorController_IdChanging(Nullable<global::System.Guid> value);
        partial void OnHypervisorController_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Hyperconverged
        {
            get
            {
                return _Hyperconverged;
            }
            set
            {
                OnHyperconvergedChanging(value);
                ReportPropertyChanging("Hyperconverged");
                _Hyperconverged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hyperconverged");
                OnHyperconvergedChanged();
            }
        }
        private global::System.Boolean _Hyperconverged;
        partial void OnHyperconvergedChanging(global::System.Boolean value);
        partial void OnHyperconvergedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Hypervisors_HypervisorGroups", "Hypervisor")]
        public EntityCollection<Hypervisor> Hypervisors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hypervisor>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorGroups", "Hypervisor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hypervisor>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorGroups", "Hypervisor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_HypervisorGroups", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorGroups", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorGroups", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_HypervisorGroups", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorGroups", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorGroups", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_HypervisorGroups_HypervisorGroupTypes", "HypervisorGroupType")]
        public HypervisorGroupType HypervisorGroupType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroupType>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_HypervisorGroupTypes", "HypervisorGroupType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroupType>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_HypervisorGroupTypes", "HypervisorGroupType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorGroupType> HypervisorGroupTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroupType>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_HypervisorGroupTypes", "HypervisorGroupType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorGroupType>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_HypervisorGroupTypes", "HypervisorGroupType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_HypervisorGroups_HypervisorControllers", "HypervisorController")]
        public HypervisorController HypervisorController
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_HypervisorControllers", "HypervisorController").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_HypervisorControllers", "HypervisorController").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorController> HypervisorControllerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_HypervisorControllers", "HypervisorController");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_HypervisorControllers", "HypervisorController", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_CapacityRulesMeta_HypervisorGroups", "CapacityRulesMeta")]
        public EntityCollection<CapacityRulesMeta> CapacityRulesMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapacityRulesMeta>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_HypervisorGroups", "CapacityRulesMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapacityRulesMeta>("MigrationTool_DevelopmentModel.FK_CapacityRulesMeta_HypervisorGroups", "CapacityRulesMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_HypervisorGroups_CapacityStatistics", "CapacityStatistic")]
        public CapacityStatistic CapacityStatistic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapacityStatistic>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_CapacityStatistics", "CapacityStatistic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapacityStatistic>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_CapacityStatistics", "CapacityStatistic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CapacityStatistic> CapacityStatisticReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapacityStatistic>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_CapacityStatistics", "CapacityStatistic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CapacityStatistic>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_CapacityStatistics", "CapacityStatistic", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="HypervisorGroupType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HypervisorGroupType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HypervisorGroupType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static HypervisorGroupType CreateHypervisorGroupType(global::System.Guid id, global::System.String name)
        {
            HypervisorGroupType hypervisorGroupType = new HypervisorGroupType();
            hypervisorGroupType.Id = id;
            hypervisorGroupType.Name = name;
            return hypervisorGroupType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_HypervisorGroups_HypervisorGroupTypes", "HypervisorGroup")]
        public EntityCollection<HypervisorGroup> HypervisorGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_HypervisorGroupTypes", "HypervisorGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_HypervisorGroups_HypervisorGroupTypes", "HypervisorGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_HypervisorGroupTypes", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorGroupTypes", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorGroupTypes", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_HypervisorGroupTypes", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorGroupTypes", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorGroupTypes", "TagsMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="HypervisorType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HypervisorType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HypervisorType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static HypervisorType CreateHypervisorType(global::System.Guid id, global::System.String name)
        {
            HypervisorType hypervisorType = new HypervisorType();
            hypervisorType.Id = id;
            hypervisorType.Name = name;
            return hypervisorType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Hypervisors_HypervisorTypes", "Hypervisor")]
        public EntityCollection<Hypervisor> Hypervisors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hypervisor>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorTypes", "Hypervisor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hypervisor>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorTypes", "Hypervisor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_HypervisorTypes", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorTypes", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorTypes", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_HypervisorTypes", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorTypes", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorTypes", "TagsMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="HypervisorWorkloadProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HypervisorWorkloadProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HypervisorWorkloadProfile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static HypervisorWorkloadProfile CreateHypervisorWorkloadProfile(global::System.Guid id, global::System.String name, global::System.Int32 type)
        {
            HypervisorWorkloadProfile hypervisorWorkloadProfile = new HypervisorWorkloadProfile();
            hypervisorWorkloadProfile.Id = id;
            hypervisorWorkloadProfile.Name = name;
            hypervisorWorkloadProfile.Type = type;
            return hypervisorWorkloadProfile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> VirtualProcessorsPerCore
        {
            get
            {
                return _VirtualProcessorsPerCore;
            }
            set
            {
                OnVirtualProcessorsPerCoreChanging(value);
                ReportPropertyChanging("VirtualProcessorsPerCore");
                _VirtualProcessorsPerCore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VirtualProcessorsPerCore");
                OnVirtualProcessorsPerCoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _VirtualProcessorsPerCore;
        partial void OnVirtualProcessorsPerCoreChanging(Nullable<global::System.Decimal> value);
        partial void OnVirtualProcessorsPerCoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxVirtualMachines
        {
            get
            {
                return _MaxVirtualMachines;
            }
            set
            {
                OnMaxVirtualMachinesChanging(value);
                ReportPropertyChanging("MaxVirtualMachines");
                _MaxVirtualMachines = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxVirtualMachines");
                OnMaxVirtualMachinesChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxVirtualMachines;
        partial void OnMaxVirtualMachinesChanging(Nullable<global::System.Int32> value);
        partial void OnMaxVirtualMachinesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Hypervisors_HypervisorWorkloadProfiles", "Hypervisor")]
        public EntityCollection<Hypervisor> Hypervisors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hypervisor>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorWorkloadProfiles", "Hypervisor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hypervisor>("MigrationTool_DevelopmentModel.FK_Hypervisors_HypervisorWorkloadProfiles", "Hypervisor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_HypervisorWorkloadProfiles", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorWorkloadProfiles", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorWorkloadProfiles", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_HypervisorWorkloadProfiles", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorWorkloadProfiles", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorWorkloadProfiles", "TagsMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="InventoryMachine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryMachine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryMachine object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        public static InventoryMachine CreateInventoryMachine(global::System.Guid id, global::System.String name, global::System.DateTime createdDate, global::System.DateTime lastUpdated, global::System.Boolean inactive)
        {
            InventoryMachine inventoryMachine = new InventoryMachine();
            inventoryMachine.Id = id;
            inventoryMachine.Name = name;
            inventoryMachine.CreatedDate = createdDate;
            inventoryMachine.LastUpdated = lastUpdated;
            inventoryMachine.Inactive = inactive;
            return inventoryMachine;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_InventoryMachines", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_InventoryMachines", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_InventoryMachines", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_InventoryMachines", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_InventoryMachines", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_InventoryMachines", "TagsMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="IqDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IqDocument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IqDocument object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static IqDocument CreateIqDocument(global::System.Guid id, global::System.String name)
        {
            IqDocument iqDocument = new IqDocument();
            iqDocument.Id = id;
            iqDocument.Name = name;
            return iqDocument;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_IqDocuments", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_IqDocuments", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_IqDocuments", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_IqDocuments", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_IqDocuments", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_IqDocuments", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "BusinessSolutionsIqDocuments", "BusinessSolution")]
        public EntityCollection<BusinessSolution> BusinessSolutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.BusinessSolutionsIqDocuments", "BusinessSolution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.BusinessSolutionsIqDocuments", "BusinessSolution", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="MigrationGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MigrationGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MigrationGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static MigrationGroup CreateMigrationGroup(global::System.Guid id, global::System.String name)
        {
            MigrationGroup migrationGroup = new MigrationGroup();
            migrationGroup.Id = id;
            migrationGroup.Name = name;
            return migrationGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_MigrationGroups", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_MigrationGroups", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_MigrationGroups", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_MigrationGroups", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_MigrationGroups", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_MigrationGroups", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppFarms_MigrationGroups", "XenAppFarm")]
        public EntityCollection<XenAppFarm> XenAppFarms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenAppFarm>("MigrationTool_DevelopmentModel.FK_XenAppFarms_MigrationGroups", "XenAppFarm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenAppFarm>("MigrationTool_DevelopmentModel.FK_XenAppFarms_MigrationGroups", "XenAppFarm", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="Note")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Note : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Note object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="parent_Id">Initial value of the Parent_Id property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        /// <param name="noteType">Initial value of the NoteType property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        /// <param name="editedAt">Initial value of the EditedAt property.</param>
        public static Note CreateNote(global::System.Int32 id, global::System.Guid parent_Id, global::System.String body, global::System.Byte noteType, global::System.DateTime createdAt, global::System.DateTime editedAt)
        {
            Note note = new Note();
            note.Id = id;
            note.Parent_Id = parent_Id;
            note.Body = body;
            note.NoteType = noteType;
            note.CreatedAt = createdAt;
            note.EditedAt = editedAt;
            return note;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Parent_Id
        {
            get
            {
                return _Parent_Id;
            }
            set
            {
                OnParent_IdChanging(value);
                ReportPropertyChanging("Parent_Id");
                _Parent_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parent_Id");
                OnParent_IdChanged();
            }
        }
        private global::System.Guid _Parent_Id;
        partial void OnParent_IdChanging(global::System.Guid value);
        partial void OnParent_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte NoteType
        {
            get
            {
                return _NoteType;
            }
            set
            {
                OnNoteTypeChanging(value);
                ReportPropertyChanging("NoteType");
                _NoteType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoteType");
                OnNoteTypeChanged();
            }
        }
        private global::System.Byte _NoteType;
        partial void OnNoteTypeChanging(global::System.Byte value);
        partial void OnNoteTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                OnCreatedAtChanging(value);
                ReportPropertyChanging("CreatedAt");
                _CreatedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedAt");
                OnCreatedAtChanged();
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EditedAt
        {
            get
            {
                return _EditedAt;
            }
            set
            {
                OnEditedAtChanging(value);
                ReportPropertyChanging("EditedAt");
                _EditedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EditedAt");
                OnEditedAtChanged();
            }
        }
        private global::System.DateTime _EditedAt;
        partial void OnEditedAtChanging(global::System.DateTime value);
        partial void OnEditedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> User_Id
        {
            get
            {
                return _User_Id;
            }
            set
            {
                OnUser_IdChanging(value);
                ReportPropertyChanging("User_Id");
                _User_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User_Id");
                OnUser_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _User_Id;
        partial void OnUser_IdChanging(Nullable<global::System.Int32> value);
        partial void OnUser_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ActiveDirectoryGroups", "ActiveDirectoryGroup")]
        public ActiveDirectoryGroup ActiveDirectoryGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveDirectoryGroup>("MigrationTool_DevelopmentModel.FK_Notes_ActiveDirectoryGroups", "ActiveDirectoryGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveDirectoryGroup>("MigrationTool_DevelopmentModel.FK_Notes_ActiveDirectoryGroups", "ActiveDirectoryGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActiveDirectoryGroup> ActiveDirectoryGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveDirectoryGroup>("MigrationTool_DevelopmentModel.FK_Notes_ActiveDirectoryGroups", "ActiveDirectoryGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActiveDirectoryGroup>("MigrationTool_DevelopmentModel.FK_Notes_ActiveDirectoryGroups", "ActiveDirectoryGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_EntitledUsers", "EntitledUser")]
        public EntitledUser EntitledUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntitledUser>("MigrationTool_DevelopmentModel.FK_Notes_EntitledUsers", "EntitledUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntitledUser>("MigrationTool_DevelopmentModel.FK_Notes_EntitledUsers", "EntitledUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntitledUser> EntitledUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntitledUser>("MigrationTool_DevelopmentModel.FK_Notes_EntitledUsers", "EntitledUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntitledUser>("MigrationTool_DevelopmentModel.FK_Notes_EntitledUsers", "EntitledUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenAppFarmFolders", "XenAppFarmFolder")]
        public XenAppFarmFolder XenAppFarmFolder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarmFolders", "XenAppFarmFolder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarmFolders", "XenAppFarmFolder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppFarmFolder> XenAppFarmFolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarmFolders", "XenAppFarmFolder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarmFolders", "XenAppFarmFolder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenAppFarms", "XenAppFarm")]
        public XenAppFarm XenAppFarm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarms", "XenAppFarm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarms", "XenAppFarm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppFarm> XenAppFarmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarms", "XenAppFarm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarms", "XenAppFarm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Divisions", "Division")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("MigrationTool_DevelopmentModel.FK_Notes_Divisions", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("MigrationTool_DevelopmentModel.FK_Notes_Divisions", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("MigrationTool_DevelopmentModel.FK_Notes_Divisions", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("MigrationTool_DevelopmentModel.FK_Notes_Divisions", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ApplicationOwners", "ApplicationOwner")]
        public ApplicationOwner ApplicationOwner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationOwner>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationOwners", "ApplicationOwner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationOwner>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationOwners", "ApplicationOwner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApplicationOwner> ApplicationOwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationOwner>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationOwners", "ApplicationOwner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApplicationOwner>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationOwners", "ApplicationOwner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ApplicationGroups", "ApplicationGroup")]
        public ApplicationGroup ApplicationGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationGroup>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationGroups", "ApplicationGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationGroup>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationGroups", "ApplicationGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApplicationGroup> ApplicationGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationGroup>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationGroups", "ApplicationGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApplicationGroup>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationGroups", "ApplicationGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MigrationTool_DevelopmentModel.FK_Notes_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MigrationTool_DevelopmentModel.FK_Notes_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MigrationTool_DevelopmentModel.FK_Notes_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MigrationTool_DevelopmentModel.FK_Notes_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Platforms", "Platform")]
        public Platform Platform
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Platform>("MigrationTool_DevelopmentModel.FK_Notes_Platforms", "Platform").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Platform>("MigrationTool_DevelopmentModel.FK_Notes_Platforms", "Platform").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Platform> PlatformReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Platform>("MigrationTool_DevelopmentModel.FK_Notes_Platforms", "Platform");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Platform>("MigrationTool_DevelopmentModel.FK_Notes_Platforms", "Platform", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ApplicationVersions", "ApplicationVersion")]
        public ApplicationVersion ApplicationVersion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationVersions", "ApplicationVersion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationVersions", "ApplicationVersion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApplicationVersion> ApplicationVersionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationVersions", "ApplicationVersion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_Notes_ApplicationVersions", "ApplicationVersion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Applications", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("MigrationTool_DevelopmentModel.FK_Notes_Applications", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("MigrationTool_DevelopmentModel.FK_Notes_Applications", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("MigrationTool_DevelopmentModel.FK_Notes_Applications", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("MigrationTool_DevelopmentModel.FK_Notes_Applications", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ResponsibleParties", "ResponsibleParty")]
        public ResponsibleParty ResponsibleParty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResponsibleParty>("MigrationTool_DevelopmentModel.FK_Notes_ResponsibleParties", "ResponsibleParty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResponsibleParty>("MigrationTool_DevelopmentModel.FK_Notes_ResponsibleParties", "ResponsibleParty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResponsibleParty> ResponsiblePartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResponsibleParty>("MigrationTool_DevelopmentModel.FK_Notes_ResponsibleParties", "ResponsibleParty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResponsibleParty>("MigrationTool_DevelopmentModel.FK_Notes_ResponsibleParties", "ResponsibleParty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowDefinition", "WorkflowDefinition")]
        public WorkflowDefinition WorkflowDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDefinition", "WorkflowDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDefinition", "WorkflowDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowDefinition> WorkflowDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDefinition", "WorkflowDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDefinition", "WorkflowDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowDurationEstimate", "WorkflowDurationEstimate")]
        public WorkflowDurationEstimate WorkflowDurationEstimate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDurationEstimate", "WorkflowDurationEstimate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDurationEstimate", "WorkflowDurationEstimate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowDurationEstimate> WorkflowDurationEstimateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDurationEstimate", "WorkflowDurationEstimate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDurationEstimate", "WorkflowDurationEstimate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowStepActivity", "WorkflowStepActivity")]
        public WorkflowStepActivity WorkflowStepActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepActivity>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepActivity", "WorkflowStepActivity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepActivity>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepActivity", "WorkflowStepActivity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowStepActivity> WorkflowStepActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepActivity>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepActivity", "WorkflowStepActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowStepActivity>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepActivity", "WorkflowStepActivity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowStepDefinition", "WorkflowStepDefinition")]
        public WorkflowStepDefinition WorkflowStepDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepDefinition", "WorkflowStepDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepDefinition", "WorkflowStepDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowStepDefinition> WorkflowStepDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepDefinition", "WorkflowStepDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepDefinition", "WorkflowStepDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowDurationEstimateDetail", "WorkflowDurationEstimateDetail")]
        public WorkflowDurationEstimateDetail WorkflowDurationEstimateDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimateDetail>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDurationEstimateDetail", "WorkflowDurationEstimateDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimateDetail>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDurationEstimateDetail", "WorkflowDurationEstimateDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowDurationEstimateDetail> WorkflowDurationEstimateDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimateDetail>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDurationEstimateDetail", "WorkflowDurationEstimateDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowDurationEstimateDetail>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDurationEstimateDetail", "WorkflowDurationEstimateDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowStepInstance", "WorkflowStepInstance")]
        public WorkflowStepInstance WorkflowStepInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepInstance", "WorkflowStepInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepInstance", "WorkflowStepInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowStepInstance> WorkflowStepInstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepInstance", "WorkflowStepInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepInstance", "WorkflowStepInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Binaries", "Binary")]
        public Binary Binary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Binary>("MigrationTool_DevelopmentModel.FK_Notes_Binaries", "Binary").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Binary>("MigrationTool_DevelopmentModel.FK_Notes_Binaries", "Binary").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Binary> BinaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Binary>("MigrationTool_DevelopmentModel.FK_Notes_Binaries", "Binary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Binary>("MigrationTool_DevelopmentModel.FK_Notes_Binaries", "Binary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ClarityEntries", "ClarityEntry")]
        public ClarityEntry ClarityEntry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_Notes_ClarityEntries", "ClarityEntry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_Notes_ClarityEntries", "ClarityEntry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClarityEntry> ClarityEntryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_Notes_ClarityEntries", "ClarityEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_Notes_ClarityEntries", "ClarityEntry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_CustomerGroups1", "StrategicVendor")]
        public StrategicVendor StrategicVendor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StrategicVendor>("MigrationTool_DevelopmentModel.FK_Notes_CustomerGroups1", "StrategicVendor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StrategicVendor>("MigrationTool_DevelopmentModel.FK_Notes_CustomerGroups1", "StrategicVendor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StrategicVendor> StrategicVendorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StrategicVendor>("MigrationTool_DevelopmentModel.FK_Notes_CustomerGroups1", "StrategicVendor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StrategicVendor>("MigrationTool_DevelopmentModel.FK_Notes_CustomerGroups1", "StrategicVendor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_PublishedApplications", "PublishedApplication")]
        public PublishedApplication PublishedApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublishedApplication>("MigrationTool_DevelopmentModel.FK_Notes_PublishedApplications", "PublishedApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublishedApplication>("MigrationTool_DevelopmentModel.FK_Notes_PublishedApplications", "PublishedApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PublishedApplication> PublishedApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublishedApplication>("MigrationTool_DevelopmentModel.FK_Notes_PublishedApplications", "PublishedApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PublishedApplication>("MigrationTool_DevelopmentModel.FK_Notes_PublishedApplications", "PublishedApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_IqDocuments", "IqDocument")]
        public IqDocument IqDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IqDocument>("MigrationTool_DevelopmentModel.FK_Notes_IqDocuments", "IqDocument").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IqDocument>("MigrationTool_DevelopmentModel.FK_Notes_IqDocuments", "IqDocument").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IqDocument> IqDocumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IqDocument>("MigrationTool_DevelopmentModel.FK_Notes_IqDocuments", "IqDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IqDocument>("MigrationTool_DevelopmentModel.FK_Notes_IqDocuments", "IqDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowInstance", "WorkflowInstance")]
        public WorkflowInstance WorkflowInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowInstance", "WorkflowInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowInstance", "WorkflowInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowInstance> WorkflowInstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowInstance", "WorkflowInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowInstance", "WorkflowInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_BusinessSolutions", "BusinessSolution")]
        public BusinessSolution BusinessSolution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessSolution>("MigrationTool_DevelopmentModel.FK_Notes_BusinessSolutions", "BusinessSolution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessSolution>("MigrationTool_DevelopmentModel.FK_Notes_BusinessSolutions", "BusinessSolution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessSolution> BusinessSolutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessSolution>("MigrationTool_DevelopmentModel.FK_Notes_BusinessSolutions", "BusinessSolution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessSolution>("MigrationTool_DevelopmentModel.FK_Notes_BusinessSolutions", "BusinessSolution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_BusinessActions", "BusinessAction")]
        public BusinessAction BusinessAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAction>("MigrationTool_DevelopmentModel.FK_Notes_BusinessActions", "BusinessAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAction>("MigrationTool_DevelopmentModel.FK_Notes_BusinessActions", "BusinessAction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessAction> BusinessActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAction>("MigrationTool_DevelopmentModel.FK_Notes_BusinessActions", "BusinessAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessAction>("MigrationTool_DevelopmentModel.FK_Notes_BusinessActions", "BusinessAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_HypervisorGroups", "HypervisorGroup")]
        public HypervisorGroup HypervisorGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorGroups", "HypervisorGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorGroups", "HypervisorGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorGroup> HypervisorGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorGroups", "HypervisorGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorGroups", "HypervisorGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Hypervisors", "Hypervisor")]
        public Hypervisor Hypervisor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hypervisor>("MigrationTool_DevelopmentModel.FK_Notes_Hypervisors", "Hypervisor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hypervisor>("MigrationTool_DevelopmentModel.FK_Notes_Hypervisors", "Hypervisor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hypervisor> HypervisorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hypervisor>("MigrationTool_DevelopmentModel.FK_Notes_Hypervisors", "Hypervisor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hypervisor>("MigrationTool_DevelopmentModel.FK_Notes_Hypervisors", "Hypervisor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_HypervisorTypes", "HypervisorType")]
        public HypervisorType HypervisorType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorType>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorTypes", "HypervisorType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorType>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorTypes", "HypervisorType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorType> HypervisorTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorType>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorTypes", "HypervisorType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorType>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorTypes", "HypervisorType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_VirtualMachineTypes", "VirtualMachineType")]
        public VirtualMachineType VirtualMachineType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachineType>("MigrationTool_DevelopmentModel.FK_Notes_VirtualMachineTypes", "VirtualMachineType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachineType>("MigrationTool_DevelopmentModel.FK_Notes_VirtualMachineTypes", "VirtualMachineType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VirtualMachineType> VirtualMachineTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachineType>("MigrationTool_DevelopmentModel.FK_Notes_VirtualMachineTypes", "VirtualMachineType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VirtualMachineType>("MigrationTool_DevelopmentModel.FK_Notes_VirtualMachineTypes", "VirtualMachineType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_VirtualMachines", "VirtualMachine")]
        public VirtualMachine VirtualMachine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_Notes_VirtualMachines", "VirtualMachine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_Notes_VirtualMachines", "VirtualMachine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VirtualMachine> VirtualMachineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_Notes_VirtualMachines", "VirtualMachine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_Notes_VirtualMachines", "VirtualMachine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile")]
        public HypervisorWorkloadProfile HypervisorWorkloadProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorWorkloadProfile>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorWorkloadProfile>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorWorkloadProfile> HypervisorWorkloadProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorWorkloadProfile>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorWorkloadProfile>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop")]
        public XenDesktopBrokerDesktop XenDesktopBrokerDesktop
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenDesktopBrokerDesktop> XenDesktopBrokerDesktopReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenDesktopCatalogs", "XenDesktopCatalog")]
        public XenDesktopCatalog XenDesktopCatalog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalog>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopCatalogs", "XenDesktopCatalog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalog>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopCatalogs", "XenDesktopCatalog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenDesktopCatalog> XenDesktopCatalogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalog>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopCatalogs", "XenDesktopCatalog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenDesktopCatalog>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopCatalogs", "XenDesktopCatalog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenDesktopServers", "XenDesktopServer")]
        public XenDesktopServer XenDesktopServer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopServer>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopServers", "XenDesktopServer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopServer>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopServers", "XenDesktopServer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenDesktopServer> XenDesktopServerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopServer>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopServers", "XenDesktopServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenDesktopServer>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopServers", "XenDesktopServer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenDesktopSites", "XenDesktopSite")]
        public XenDesktopSite XenDesktopSite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopSite>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopSites", "XenDesktopSite").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopSite>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopSites", "XenDesktopSite").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenDesktopSite> XenDesktopSiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopSite>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopSites", "XenDesktopSite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenDesktopSite>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopSites", "XenDesktopSite", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_HypervisorGroupTypes", "HypervisorGroupType")]
        public HypervisorGroupType HypervisorGroupType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroupType>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorGroupTypes", "HypervisorGroupType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroupType>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorGroupTypes", "HypervisorGroupType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorGroupType> HypervisorGroupTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroupType>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorGroupTypes", "HypervisorGroupType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorGroupType>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorGroupTypes", "HypervisorGroupType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenDesktopCatalogTypes", "XenDesktopCatalogType")]
        public XenDesktopCatalogType XenDesktopCatalogType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalogType>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopCatalogTypes", "XenDesktopCatalogType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalogType>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopCatalogTypes", "XenDesktopCatalogType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenDesktopCatalogType> XenDesktopCatalogTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalogType>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopCatalogTypes", "XenDesktopCatalogType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenDesktopCatalogType>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopCatalogTypes", "XenDesktopCatalogType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenAppServerRoles", "XenAppServerRole")]
        public XenAppServerRole XenAppServerRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServerRole>("MigrationTool_DevelopmentModel.FK_Notes_XenAppServerRoles", "XenAppServerRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServerRole>("MigrationTool_DevelopmentModel.FK_Notes_XenAppServerRoles", "XenAppServerRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppServerRole> XenAppServerRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServerRole>("MigrationTool_DevelopmentModel.FK_Notes_XenAppServerRoles", "XenAppServerRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppServerRole>("MigrationTool_DevelopmentModel.FK_Notes_XenAppServerRoles", "XenAppServerRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenAppServers", "XenAppServer")]
        public XenAppServer XenAppServer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServer>("MigrationTool_DevelopmentModel.FK_Notes_XenAppServers", "XenAppServer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServer>("MigrationTool_DevelopmentModel.FK_Notes_XenAppServers", "XenAppServer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppServer> XenAppServerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServer>("MigrationTool_DevelopmentModel.FK_Notes_XenAppServers", "XenAppServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppServer>("MigrationTool_DevelopmentModel.FK_Notes_XenAppServers", "XenAppServer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenAppFarmVersions", "XenAppFarmVersion")]
        public XenAppFarmVersion XenAppFarmVersion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmVersion>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarmVersions", "XenAppFarmVersion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmVersion>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarmVersions", "XenAppFarmVersion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppFarmVersion> XenAppFarmVersionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmVersion>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarmVersions", "XenAppFarmVersion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppFarmVersion>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarmVersions", "XenAppFarmVersion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_MigrationGroups", "MigrationGroup")]
        public MigrationGroup MigrationGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationGroup>("MigrationTool_DevelopmentModel.FK_Notes_MigrationGroups", "MigrationGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationGroup>("MigrationTool_DevelopmentModel.FK_Notes_MigrationGroups", "MigrationGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MigrationGroup> MigrationGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationGroup>("MigrationTool_DevelopmentModel.FK_Notes_MigrationGroups", "MigrationGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MigrationGroup>("MigrationTool_DevelopmentModel.FK_Notes_MigrationGroups", "MigrationGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_InventoryMachines", "InventoryMachine")]
        public InventoryMachine InventoryMachine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryMachine>("MigrationTool_DevelopmentModel.FK_Notes_InventoryMachines", "InventoryMachine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryMachine>("MigrationTool_DevelopmentModel.FK_Notes_InventoryMachines", "InventoryMachine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InventoryMachine> InventoryMachineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryMachine>("MigrationTool_DevelopmentModel.FK_Notes_InventoryMachines", "InventoryMachine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InventoryMachine>("MigrationTool_DevelopmentModel.FK_Notes_InventoryMachines", "InventoryMachine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_PublishedApplicationLevels", "PublishedApplicationLevel")]
        public PublishedApplicationLevel PublishedApplicationLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublishedApplicationLevel>("MigrationTool_DevelopmentModel.FK_Notes_PublishedApplicationLevels", "PublishedApplicationLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublishedApplicationLevel>("MigrationTool_DevelopmentModel.FK_Notes_PublishedApplicationLevels", "PublishedApplicationLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PublishedApplicationLevel> PublishedApplicationLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublishedApplicationLevel>("MigrationTool_DevelopmentModel.FK_Notes_PublishedApplicationLevels", "PublishedApplicationLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PublishedApplicationLevel>("MigrationTool_DevelopmentModel.FK_Notes_PublishedApplicationLevels", "PublishedApplicationLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_DataStoreGroups", "DataStoreGroup")]
        public DataStoreGroup DataStoreGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_Notes_DataStoreGroups", "DataStoreGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_Notes_DataStoreGroups", "DataStoreGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataStoreGroup> DataStoreGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_Notes_DataStoreGroups", "DataStoreGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_Notes_DataStoreGroups", "DataStoreGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_DataStores", "DataStore")]
        public DataStore DataStore
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStore>("MigrationTool_DevelopmentModel.FK_Notes_DataStores", "DataStore").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStore>("MigrationTool_DevelopmentModel.FK_Notes_DataStores", "DataStore").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataStore> DataStoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStore>("MigrationTool_DevelopmentModel.FK_Notes_DataStores", "DataStore");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataStore>("MigrationTool_DevelopmentModel.FK_Notes_DataStores", "DataStore", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_VirtualHardDrives", "VirtualHardDrive")]
        public VirtualHardDrive VirtualHardDrive
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualHardDrive>("MigrationTool_DevelopmentModel.FK_Notes_VirtualHardDrives", "VirtualHardDrive").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualHardDrive>("MigrationTool_DevelopmentModel.FK_Notes_VirtualHardDrives", "VirtualHardDrive").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VirtualHardDrive> VirtualHardDriveReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualHardDrive>("MigrationTool_DevelopmentModel.FK_Notes_VirtualHardDrives", "VirtualHardDrive");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VirtualHardDrive>("MigrationTool_DevelopmentModel.FK_Notes_VirtualHardDrives", "VirtualHardDrive", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_DataStoreCategories", "DataStoreCategory")]
        public DataStoreCategory DataStoreCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreCategory>("MigrationTool_DevelopmentModel.FK_Notes_DataStoreCategories", "DataStoreCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreCategory>("MigrationTool_DevelopmentModel.FK_Notes_DataStoreCategories", "DataStoreCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataStoreCategory> DataStoreCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreCategory>("MigrationTool_DevelopmentModel.FK_Notes_DataStoreCategories", "DataStoreCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataStoreCategory>("MigrationTool_DevelopmentModel.FK_Notes_DataStoreCategories", "DataStoreCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_HypervisorControllers", "HypervisorController")]
        public HypervisorController HypervisorController
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorControllers", "HypervisorController").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorControllers", "HypervisorController").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorController> HypervisorControllerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorControllers", "HypervisorController");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_Notes_HypervisorControllers", "HypervisorController", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_CapacityRules", "CapacityRule")]
        public CapacityRule CapacityRule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapacityRule>("MigrationTool_DevelopmentModel.FK_Notes_CapacityRules", "CapacityRule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapacityRule>("MigrationTool_DevelopmentModel.FK_Notes_CapacityRules", "CapacityRule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CapacityRule> CapacityRuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapacityRule>("MigrationTool_DevelopmentModel.FK_Notes_CapacityRules", "CapacityRule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CapacityRule>("MigrationTool_DevelopmentModel.FK_Notes_CapacityRules", "CapacityRule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="Platform")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Platform : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Platform object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static Platform CreatePlatform(global::System.Guid id, global::System.String name, global::System.DateTime lastUpdated)
        {
            Platform platform = new Platform();
            platform.Id = id;
            platform.Name = name;
            platform.LastUpdated = lastUpdated;
            return platform;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Platforms", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_Platforms", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_Platforms", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Platforms", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_Platforms", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_Platforms", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "BinariesPlatforms", "Binary")]
        public EntityCollection<Binary> Binaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Binary>("MigrationTool_DevelopmentModel.BinariesPlatforms", "Binary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Binary>("MigrationTool_DevelopmentModel.BinariesPlatforms", "Binary", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="PublishedApplication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PublishedApplication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PublishedApplication object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="xenAppFarm_Id">Initial value of the XenAppFarm_Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="browserName">Initial value of the BrowserName property.</param>
        /// <param name="commandLineExecutable">Initial value of the CommandLineExecutable property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="xenAppFarmFolder_Id">Initial value of the XenAppFarmFolder_Id property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        public static PublishedApplication CreatePublishedApplication(global::System.Guid id, global::System.Guid xenAppFarm_Id, global::System.String name, global::System.String description, global::System.String browserName, global::System.String commandLineExecutable, global::System.DateTime lastUpdated, global::System.Guid xenAppFarmFolder_Id, global::System.Boolean inactive)
        {
            PublishedApplication publishedApplication = new PublishedApplication();
            publishedApplication.Id = id;
            publishedApplication.XenAppFarm_Id = xenAppFarm_Id;
            publishedApplication.Name = name;
            publishedApplication.Description = description;
            publishedApplication.BrowserName = browserName;
            publishedApplication.CommandLineExecutable = commandLineExecutable;
            publishedApplication.LastUpdated = lastUpdated;
            publishedApplication.XenAppFarmFolder_Id = xenAppFarmFolder_Id;
            publishedApplication.Inactive = inactive;
            return publishedApplication;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid XenAppFarm_Id
        {
            get
            {
                return _XenAppFarm_Id;
            }
            set
            {
                OnXenAppFarm_IdChanging(value);
                ReportPropertyChanging("XenAppFarm_Id");
                _XenAppFarm_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XenAppFarm_Id");
                OnXenAppFarm_IdChanged();
            }
        }
        private global::System.Guid _XenAppFarm_Id;
        partial void OnXenAppFarm_IdChanging(global::System.Guid value);
        partial void OnXenAppFarm_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BrowserName
        {
            get
            {
                return _BrowserName;
            }
            set
            {
                OnBrowserNameChanging(value);
                ReportPropertyChanging("BrowserName");
                _BrowserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BrowserName");
                OnBrowserNameChanged();
            }
        }
        private global::System.String _BrowserName;
        partial void OnBrowserNameChanging(global::System.String value);
        partial void OnBrowserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommandLineExecutable
        {
            get
            {
                return _CommandLineExecutable;
            }
            set
            {
                OnCommandLineExecutableChanging(value);
                ReportPropertyChanging("CommandLineExecutable");
                _CommandLineExecutable = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommandLineExecutable");
                OnCommandLineExecutableChanged();
            }
        }
        private global::System.String _CommandLineExecutable;
        partial void OnCommandLineExecutableChanging(global::System.String value);
        partial void OnCommandLineExecutableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid XenAppFarmFolder_Id
        {
            get
            {
                return _XenAppFarmFolder_Id;
            }
            set
            {
                OnXenAppFarmFolder_IdChanging(value);
                ReportPropertyChanging("XenAppFarmFolder_Id");
                _XenAppFarmFolder_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XenAppFarmFolder_Id");
                OnXenAppFarmFolder_IdChanged();
            }
        }
        private global::System.Guid _XenAppFarmFolder_Id;
        partial void OnXenAppFarmFolder_IdChanging(global::System.Guid value);
        partial void OnXenAppFarmFolder_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ApplicationVersion_Id
        {
            get
            {
                return _ApplicationVersion_Id;
            }
            set
            {
                OnApplicationVersion_IdChanging(value);
                ReportPropertyChanging("ApplicationVersion_Id");
                _ApplicationVersion_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationVersion_Id");
                OnApplicationVersion_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _ApplicationVersion_Id;
        partial void OnApplicationVersion_IdChanging(Nullable<global::System.Guid> value);
        partial void OnApplicationVersion_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> BusinessSolution_Id
        {
            get
            {
                return _BusinessSolution_Id;
            }
            set
            {
                OnBusinessSolution_IdChanging(value);
                ReportPropertyChanging("BusinessSolution_Id");
                _BusinessSolution_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessSolution_Id");
                OnBusinessSolution_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _BusinessSolution_Id;
        partial void OnBusinessSolution_IdChanging(Nullable<global::System.Guid> value);
        partial void OnBusinessSolution_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplications_ApplicationVersions", "ApplicationVersion")]
        public ApplicationVersion ApplicationVersion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_PublishedApplications_ApplicationVersions", "ApplicationVersion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_PublishedApplications_ApplicationVersions", "ApplicationVersion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApplicationVersion> ApplicationVersionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_PublishedApplications_ApplicationVersions", "ApplicationVersion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_PublishedApplications_ApplicationVersions", "ApplicationVersion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_PublishedApplications", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_PublishedApplications", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_PublishedApplications", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplicationLaunches_PublishedApplications", "PublishedApplicationLaunch")]
        public EntityCollection<PublishedApplicationLaunch> PublishedApplicationLaunches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PublishedApplicationLaunch>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_PublishedApplications", "PublishedApplicationLaunch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PublishedApplicationLaunch>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_PublishedApplications", "PublishedApplicationLaunch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplications_XenAppFarmFolders", "XenAppFarmFolder")]
        public XenAppFarmFolder XenAppFarmFolder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_PublishedApplications_XenAppFarmFolders", "XenAppFarmFolder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_PublishedApplications_XenAppFarmFolders", "XenAppFarmFolder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppFarmFolder> XenAppFarmFolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_PublishedApplications_XenAppFarmFolders", "XenAppFarmFolder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_PublishedApplications_XenAppFarmFolders", "XenAppFarmFolder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplications_XenAppFarms", "XenAppFarm")]
        public XenAppFarm XenAppFarm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_PublishedApplications_XenAppFarms", "XenAppFarm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_PublishedApplications_XenAppFarms", "XenAppFarm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppFarm> XenAppFarmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_PublishedApplications_XenAppFarms", "XenAppFarm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_PublishedApplications_XenAppFarms", "XenAppFarm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_PublishedApplications", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_PublishedApplications", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_PublishedApplications", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "PublishedApplicationsActiveDirectoryGroups", "ActiveDirectoryGroup")]
        public EntityCollection<ActiveDirectoryGroup> ActiveDirectoryGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActiveDirectoryGroup>("MigrationTool_DevelopmentModel.PublishedApplicationsActiveDirectoryGroups", "ActiveDirectoryGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActiveDirectoryGroup>("MigrationTool_DevelopmentModel.PublishedApplicationsActiveDirectoryGroups", "ActiveDirectoryGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "PublishedApplicationsEntitledUsers", "EntitledUser")]
        public EntityCollection<EntitledUser> EntitledUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntitledUser>("MigrationTool_DevelopmentModel.PublishedApplicationsEntitledUsers", "EntitledUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntitledUser>("MigrationTool_DevelopmentModel.PublishedApplicationsEntitledUsers", "EntitledUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplications_BusinessSolutions", "BusinessSolution")]
        public BusinessSolution BusinessSolution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessSolution>("MigrationTool_DevelopmentModel.FK_PublishedApplications_BusinessSolutions", "BusinessSolution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessSolution>("MigrationTool_DevelopmentModel.FK_PublishedApplications_BusinessSolutions", "BusinessSolution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessSolution> BusinessSolutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessSolution>("MigrationTool_DevelopmentModel.FK_PublishedApplications_BusinessSolutions", "BusinessSolution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessSolution>("MigrationTool_DevelopmentModel.FK_PublishedApplications_BusinessSolutions", "BusinessSolution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "PublishedApplicationsXenAppServers", "XenAppServer")]
        public EntityCollection<XenAppServer> XenAppServers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenAppServer>("MigrationTool_DevelopmentModel.PublishedApplicationsXenAppServers", "XenAppServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenAppServer>("MigrationTool_DevelopmentModel.PublishedApplicationsXenAppServers", "XenAppServer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="PublishedApplicationLaunch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PublishedApplicationLaunch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PublishedApplicationLaunch object.
        /// </summary>
        /// <param name="publishedApplication_Id">Initial value of the PublishedApplication_Id property.</param>
        /// <param name="entitledUser_Id">Initial value of the EntitledUser_Id property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        public static PublishedApplicationLaunch CreatePublishedApplicationLaunch(global::System.Guid publishedApplication_Id, global::System.Guid entitledUser_Id, global::System.DateTime startTime, global::System.Int64 duration)
        {
            PublishedApplicationLaunch publishedApplicationLaunch = new PublishedApplicationLaunch();
            publishedApplicationLaunch.PublishedApplication_Id = publishedApplication_Id;
            publishedApplicationLaunch.EntitledUser_Id = entitledUser_Id;
            publishedApplicationLaunch.StartTime = startTime;
            publishedApplicationLaunch.Duration = duration;
            return publishedApplicationLaunch;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PublishedApplication_Id
        {
            get
            {
                return _PublishedApplication_Id;
            }
            set
            {
                if (_PublishedApplication_Id != value)
                {
                    OnPublishedApplication_IdChanging(value);
                    ReportPropertyChanging("PublishedApplication_Id");
                    _PublishedApplication_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PublishedApplication_Id");
                    OnPublishedApplication_IdChanged();
                }
            }
        }
        private global::System.Guid _PublishedApplication_Id;
        partial void OnPublishedApplication_IdChanging(global::System.Guid value);
        partial void OnPublishedApplication_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid EntitledUser_Id
        {
            get
            {
                return _EntitledUser_Id;
            }
            set
            {
                if (_EntitledUser_Id != value)
                {
                    OnEntitledUser_IdChanging(value);
                    ReportPropertyChanging("EntitledUser_Id");
                    _EntitledUser_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntitledUser_Id");
                    OnEntitledUser_IdChanged();
                }
            }
        }
        private global::System.Guid _EntitledUser_Id;
        partial void OnEntitledUser_IdChanging(global::System.Guid value);
        partial void OnEntitledUser_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                if (_StartTime != value)
                {
                    OnStartTimeChanging(value);
                    ReportPropertyChanging("StartTime");
                    _StartTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StartTime");
                    OnStartTimeChanged();
                }
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.Int64 _Duration;
        partial void OnDurationChanging(global::System.Int64 value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> XenAppServer_Id
        {
            get
            {
                return _XenAppServer_Id;
            }
            set
            {
                OnXenAppServer_IdChanging(value);
                ReportPropertyChanging("XenAppServer_Id");
                _XenAppServer_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XenAppServer_Id");
                OnXenAppServer_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _XenAppServer_Id;
        partial void OnXenAppServer_IdChanging(Nullable<global::System.Guid> value);
        partial void OnXenAppServer_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplicationLaunches_EntitledUsers", "EntitledUser")]
        public EntitledUser EntitledUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntitledUser>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_EntitledUsers", "EntitledUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntitledUser>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_EntitledUsers", "EntitledUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntitledUser> EntitledUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntitledUser>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_EntitledUsers", "EntitledUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntitledUser>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_EntitledUsers", "EntitledUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplicationLaunches_PublishedApplications", "PublishedApplication")]
        public PublishedApplication PublishedApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublishedApplication>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_PublishedApplications", "PublishedApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublishedApplication>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_PublishedApplications", "PublishedApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PublishedApplication> PublishedApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublishedApplication>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_PublishedApplications", "PublishedApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PublishedApplication>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_PublishedApplications", "PublishedApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplicationLaunches_XenAppServers", "XenAppServer")]
        public XenAppServer XenAppServer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServer>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_XenAppServers", "XenAppServer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServer>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_XenAppServers", "XenAppServer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppServer> XenAppServerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServer>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_XenAppServers", "XenAppServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppServer>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_XenAppServers", "XenAppServer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="PublishedApplicationLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PublishedApplicationLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PublishedApplicationLevel object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="publishedApplicationName">Initial value of the PublishedApplicationName property.</param>
        /// <param name="applicationLevel">Initial value of the ApplicationLevel property.</param>
        public static PublishedApplicationLevel CreatePublishedApplicationLevel(global::System.Guid id, global::System.String publishedApplicationName, global::System.Int32 applicationLevel)
        {
            PublishedApplicationLevel publishedApplicationLevel = new PublishedApplicationLevel();
            publishedApplicationLevel.Id = id;
            publishedApplicationLevel.PublishedApplicationName = publishedApplicationName;
            publishedApplicationLevel.ApplicationLevel = applicationLevel;
            return publishedApplicationLevel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PublishedApplicationName
        {
            get
            {
                return _PublishedApplicationName;
            }
            set
            {
                OnPublishedApplicationNameChanging(value);
                ReportPropertyChanging("PublishedApplicationName");
                _PublishedApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PublishedApplicationName");
                OnPublishedApplicationNameChanged();
            }
        }
        private global::System.String _PublishedApplicationName;
        partial void OnPublishedApplicationNameChanging(global::System.String value);
        partial void OnPublishedApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationLevel
        {
            get
            {
                return _ApplicationLevel;
            }
            set
            {
                OnApplicationLevelChanging(value);
                ReportPropertyChanging("ApplicationLevel");
                _ApplicationLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationLevel");
                OnApplicationLevelChanged();
            }
        }
        private global::System.Int32 _ApplicationLevel;
        partial void OnApplicationLevelChanging(global::System.Int32 value);
        partial void OnApplicationLevelChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_PublishedApplicationLevels", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_PublishedApplicationLevels", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_PublishedApplicationLevels", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_PublishedApplicationLevels", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_PublishedApplicationLevels", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_PublishedApplicationLevels", "TagsMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="ResponsibleParty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResponsibleParty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResponsibleParty object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ResponsibleParty CreateResponsibleParty(global::System.Guid id, global::System.String name)
        {
            ResponsibleParty responsibleParty = new ResponsibleParty();
            responsibleParty.Id = id;
            responsibleParty.Name = name;
            return responsibleParty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_ResponsibleParties", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_ResponsibleParties", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_ResponsibleParties", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepActivities_ResponsibleParties", "WorkflowStepActivity")]
        public EntityCollection<WorkflowStepActivity> WorkflowStepActivities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkflowStepActivity>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_ResponsibleParties", "WorkflowStepActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkflowStepActivity>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_ResponsibleParties", "WorkflowStepActivity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepDefinitions_ResponsibleParties", "WorkflowStepDefinition")]
        public EntityCollection<WorkflowStepDefinition> WorkflowStepDefinitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowStepDefinitions_ResponsibleParties", "WorkflowStepDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowStepDefinitions_ResponsibleParties", "WorkflowStepDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ResponsibleParties", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_ResponsibleParties", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_ResponsibleParties", "TagsMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="StrategicVendor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StrategicVendor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StrategicVendor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static StrategicVendor CreateStrategicVendor(global::System.Guid id, global::System.String name)
        {
            StrategicVendor strategicVendor = new StrategicVendor();
            strategicVendor.Id = id;
            strategicVendor.Name = name;
            return strategicVendor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_CustomerGroups1", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_CustomerGroups1", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_CustomerGroups1", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_CustomerGroups1", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_CustomerGroups1", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_CustomerGroups1", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_StrategicVendors", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_StrategicVendors", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_StrategicVendors", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "BusinessSolutionsStrategicVendors", "BusinessSolution")]
        public EntityCollection<BusinessSolution> BusinessSolutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.BusinessSolutionsStrategicVendors", "BusinessSolution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.BusinessSolutionsStrategicVendors", "BusinessSolution", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Tag CreateTag(global::System.Int32 id, global::System.String name)
        {
            Tag tag = new Tag();
            tag.Id = id;
            tag.Name = name;
            return tag;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Tags", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_Tags", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_Tags", "TagsMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="TagsMeta")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TagsMeta : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TagsMeta object.
        /// </summary>
        /// <param name="parent_Id">Initial value of the Parent_Id property.</param>
        /// <param name="tag_Id">Initial value of the Tag_Id property.</param>
        public static TagsMeta CreateTagsMeta(global::System.Guid parent_Id, global::System.Int32 tag_Id)
        {
            TagsMeta tagsMeta = new TagsMeta();
            tagsMeta.Parent_Id = parent_Id;
            tagsMeta.Tag_Id = tag_Id;
            return tagsMeta;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Parent_Id
        {
            get
            {
                return _Parent_Id;
            }
            set
            {
                if (_Parent_Id != value)
                {
                    OnParent_IdChanging(value);
                    ReportPropertyChanging("Parent_Id");
                    _Parent_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Parent_Id");
                    OnParent_IdChanged();
                }
            }
        }
        private global::System.Guid _Parent_Id;
        partial void OnParent_IdChanging(global::System.Guid value);
        partial void OnParent_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Tag_Id
        {
            get
            {
                return _Tag_Id;
            }
            set
            {
                if (_Tag_Id != value)
                {
                    OnTag_IdChanging(value);
                    ReportPropertyChanging("Tag_Id");
                    _Tag_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Tag_Id");
                    OnTag_IdChanged();
                }
            }
        }
        private global::System.Int32 _Tag_Id;
        partial void OnTag_IdChanging(global::System.Int32 value);
        partial void OnTag_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Tags", "Tag")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("MigrationTool_DevelopmentModel.FK_TagsMeta_Tags", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("MigrationTool_DevelopmentModel.FK_TagsMeta_Tags", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("MigrationTool_DevelopmentModel.FK_TagsMeta_Tags", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("MigrationTool_DevelopmentModel.FK_TagsMeta_Tags", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenAppFarms", "XenAppFarm")]
        public XenAppFarm XenAppFarm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarms", "XenAppFarm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarms", "XenAppFarm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppFarm> XenAppFarmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarms", "XenAppFarm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarms", "XenAppFarm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenAppFarmFolders", "XenAppFarmFolder")]
        public XenAppFarmFolder XenAppFarmFolder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarmFolders", "XenAppFarmFolder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarmFolders", "XenAppFarmFolder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppFarmFolder> XenAppFarmFolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarmFolders", "XenAppFarmFolder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarmFolders", "XenAppFarmFolder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ActiveDirectoryGroups", "ActiveDirectoryGroup")]
        public ActiveDirectoryGroup ActiveDirectoryGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveDirectoryGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_ActiveDirectoryGroups", "ActiveDirectoryGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveDirectoryGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_ActiveDirectoryGroups", "ActiveDirectoryGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActiveDirectoryGroup> ActiveDirectoryGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActiveDirectoryGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_ActiveDirectoryGroups", "ActiveDirectoryGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActiveDirectoryGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_ActiveDirectoryGroups", "ActiveDirectoryGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_EntitledUsers", "EntitledUser")]
        public EntitledUser EntitledUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntitledUser>("MigrationTool_DevelopmentModel.FK_TagsMeta_EntitledUsers", "EntitledUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntitledUser>("MigrationTool_DevelopmentModel.FK_TagsMeta_EntitledUsers", "EntitledUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntitledUser> EntitledUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntitledUser>("MigrationTool_DevelopmentModel.FK_TagsMeta_EntitledUsers", "EntitledUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntitledUser>("MigrationTool_DevelopmentModel.FK_TagsMeta_EntitledUsers", "EntitledUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Divisions", "Division")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("MigrationTool_DevelopmentModel.FK_TagsMeta_Divisions", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("MigrationTool_DevelopmentModel.FK_TagsMeta_Divisions", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("MigrationTool_DevelopmentModel.FK_TagsMeta_Divisions", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("MigrationTool_DevelopmentModel.FK_TagsMeta_Divisions", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ApplicationOwners", "ApplicationOwner")]
        public ApplicationOwner ApplicationOwner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationOwner>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationOwners", "ApplicationOwner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationOwner>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationOwners", "ApplicationOwner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApplicationOwner> ApplicationOwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationOwner>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationOwners", "ApplicationOwner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApplicationOwner>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationOwners", "ApplicationOwner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ApplicationGroups", "ApplicationGroup")]
        public ApplicationGroup ApplicationGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationGroups", "ApplicationGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationGroups", "ApplicationGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApplicationGroup> ApplicationGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationGroups", "ApplicationGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApplicationGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationGroups", "ApplicationGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Platforms", "Platform")]
        public Platform Platform
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Platform>("MigrationTool_DevelopmentModel.FK_TagsMeta_Platforms", "Platform").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Platform>("MigrationTool_DevelopmentModel.FK_TagsMeta_Platforms", "Platform").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Platform> PlatformReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Platform>("MigrationTool_DevelopmentModel.FK_TagsMeta_Platforms", "Platform");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Platform>("MigrationTool_DevelopmentModel.FK_TagsMeta_Platforms", "Platform", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ApplicationVersions", "ApplicationVersion")]
        public ApplicationVersion ApplicationVersion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationVersions", "ApplicationVersion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationVersions", "ApplicationVersion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApplicationVersion> ApplicationVersionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationVersions", "ApplicationVersion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApplicationVersion>("MigrationTool_DevelopmentModel.FK_TagsMeta_ApplicationVersions", "ApplicationVersion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Applications", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("MigrationTool_DevelopmentModel.FK_TagsMeta_Applications", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("MigrationTool_DevelopmentModel.FK_TagsMeta_Applications", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("MigrationTool_DevelopmentModel.FK_TagsMeta_Applications", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("MigrationTool_DevelopmentModel.FK_TagsMeta_Applications", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ResponsibleParties", "ResponsibleParty")]
        public ResponsibleParty ResponsibleParty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResponsibleParty>("MigrationTool_DevelopmentModel.FK_TagsMeta_ResponsibleParties", "ResponsibleParty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResponsibleParty>("MigrationTool_DevelopmentModel.FK_TagsMeta_ResponsibleParties", "ResponsibleParty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResponsibleParty> ResponsiblePartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResponsibleParty>("MigrationTool_DevelopmentModel.FK_TagsMeta_ResponsibleParties", "ResponsibleParty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResponsibleParty>("MigrationTool_DevelopmentModel.FK_TagsMeta_ResponsibleParties", "ResponsibleParty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowDefinitions", "WorkflowDefinition")]
        public WorkflowDefinition WorkflowDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDefinitions", "WorkflowDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDefinitions", "WorkflowDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowDefinition> WorkflowDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDefinitions", "WorkflowDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDefinitions", "WorkflowDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowDurationEstimateDetails", "WorkflowDurationEstimateDetail")]
        public WorkflowDurationEstimateDetail WorkflowDurationEstimateDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimateDetail>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDurationEstimateDetails", "WorkflowDurationEstimateDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimateDetail>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDurationEstimateDetails", "WorkflowDurationEstimateDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowDurationEstimateDetail> WorkflowDurationEstimateDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimateDetail>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDurationEstimateDetails", "WorkflowDurationEstimateDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowDurationEstimateDetail>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDurationEstimateDetails", "WorkflowDurationEstimateDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowDurationEstimates", "WorkflowDurationEstimate")]
        public WorkflowDurationEstimate WorkflowDurationEstimate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDurationEstimates", "WorkflowDurationEstimate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDurationEstimates", "WorkflowDurationEstimate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowDurationEstimate> WorkflowDurationEstimateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDurationEstimates", "WorkflowDurationEstimate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDurationEstimates", "WorkflowDurationEstimate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowStepActivities", "WorkflowStepActivity")]
        public WorkflowStepActivity WorkflowStepActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepActivity>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepActivities", "WorkflowStepActivity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepActivity>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepActivities", "WorkflowStepActivity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowStepActivity> WorkflowStepActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepActivity>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepActivities", "WorkflowStepActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowStepActivity>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepActivities", "WorkflowStepActivity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowStepDefinitions", "WorkflowStepDefinition")]
        public WorkflowStepDefinition WorkflowStepDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepDefinitions", "WorkflowStepDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepDefinitions", "WorkflowStepDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowStepDefinition> WorkflowStepDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepDefinitions", "WorkflowStepDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepDefinitions", "WorkflowStepDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowStepInstances", "WorkflowStepInstance")]
        public WorkflowStepInstance WorkflowStepInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepInstances", "WorkflowStepInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepInstances", "WorkflowStepInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowStepInstance> WorkflowStepInstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepInstances", "WorkflowStepInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepInstances", "WorkflowStepInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Binaries", "Binary")]
        public Binary Binary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Binary>("MigrationTool_DevelopmentModel.FK_TagsMeta_Binaries", "Binary").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Binary>("MigrationTool_DevelopmentModel.FK_TagsMeta_Binaries", "Binary").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Binary> BinaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Binary>("MigrationTool_DevelopmentModel.FK_TagsMeta_Binaries", "Binary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Binary>("MigrationTool_DevelopmentModel.FK_TagsMeta_Binaries", "Binary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_ClarityEntries", "ClarityEntry")]
        public ClarityEntry ClarityEntry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_TagsMeta_ClarityEntries", "ClarityEntry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_TagsMeta_ClarityEntries", "ClarityEntry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClarityEntry> ClarityEntryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_TagsMeta_ClarityEntries", "ClarityEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClarityEntry>("MigrationTool_DevelopmentModel.FK_TagsMeta_ClarityEntries", "ClarityEntry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_IqDocuments", "IqDocument")]
        public IqDocument IqDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IqDocument>("MigrationTool_DevelopmentModel.FK_TagsMeta_IqDocuments", "IqDocument").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IqDocument>("MigrationTool_DevelopmentModel.FK_TagsMeta_IqDocuments", "IqDocument").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IqDocument> IqDocumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IqDocument>("MigrationTool_DevelopmentModel.FK_TagsMeta_IqDocuments", "IqDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IqDocument>("MigrationTool_DevelopmentModel.FK_TagsMeta_IqDocuments", "IqDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_CustomerGroups1", "StrategicVendor")]
        public StrategicVendor StrategicVendor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StrategicVendor>("MigrationTool_DevelopmentModel.FK_TagsMeta_CustomerGroups1", "StrategicVendor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StrategicVendor>("MigrationTool_DevelopmentModel.FK_TagsMeta_CustomerGroups1", "StrategicVendor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StrategicVendor> StrategicVendorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StrategicVendor>("MigrationTool_DevelopmentModel.FK_TagsMeta_CustomerGroups1", "StrategicVendor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StrategicVendor>("MigrationTool_DevelopmentModel.FK_TagsMeta_CustomerGroups1", "StrategicVendor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_StrategicVendors", "StrategicVendor")]
        public StrategicVendor StrategicVendor1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StrategicVendor>("MigrationTool_DevelopmentModel.FK_TagsMeta_StrategicVendors", "StrategicVendor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StrategicVendor>("MigrationTool_DevelopmentModel.FK_TagsMeta_StrategicVendors", "StrategicVendor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StrategicVendor> StrategicVendor1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StrategicVendor>("MigrationTool_DevelopmentModel.FK_TagsMeta_StrategicVendors", "StrategicVendor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StrategicVendor>("MigrationTool_DevelopmentModel.FK_TagsMeta_StrategicVendors", "StrategicVendor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_PublishedApplications", "PublishedApplication")]
        public PublishedApplication PublishedApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublishedApplication>("MigrationTool_DevelopmentModel.FK_TagsMeta_PublishedApplications", "PublishedApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublishedApplication>("MigrationTool_DevelopmentModel.FK_TagsMeta_PublishedApplications", "PublishedApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PublishedApplication> PublishedApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublishedApplication>("MigrationTool_DevelopmentModel.FK_TagsMeta_PublishedApplications", "PublishedApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PublishedApplication>("MigrationTool_DevelopmentModel.FK_TagsMeta_PublishedApplications", "PublishedApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowInstances", "WorkflowInstance")]
        public WorkflowInstance WorkflowInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowInstances", "WorkflowInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowInstances", "WorkflowInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowInstance> WorkflowInstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowInstances", "WorkflowInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowInstances", "WorkflowInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_BusinessSolutions", "BusinessSolution")]
        public BusinessSolution BusinessSolution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessSolution>("MigrationTool_DevelopmentModel.FK_TagsMeta_BusinessSolutions", "BusinessSolution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessSolution>("MigrationTool_DevelopmentModel.FK_TagsMeta_BusinessSolutions", "BusinessSolution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessSolution> BusinessSolutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessSolution>("MigrationTool_DevelopmentModel.FK_TagsMeta_BusinessSolutions", "BusinessSolution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessSolution>("MigrationTool_DevelopmentModel.FK_TagsMeta_BusinessSolutions", "BusinessSolution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_BusinessActions", "BusinessAction")]
        public BusinessAction BusinessAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAction>("MigrationTool_DevelopmentModel.FK_TagsMeta_BusinessActions", "BusinessAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAction>("MigrationTool_DevelopmentModel.FK_TagsMeta_BusinessActions", "BusinessAction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessAction> BusinessActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessAction>("MigrationTool_DevelopmentModel.FK_TagsMeta_BusinessActions", "BusinessAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessAction>("MigrationTool_DevelopmentModel.FK_TagsMeta_BusinessActions", "BusinessAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_HypervisorGroups", "HypervisorGroup")]
        public HypervisorGroup HypervisorGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorGroups", "HypervisorGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorGroups", "HypervisorGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorGroup> HypervisorGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorGroups", "HypervisorGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorGroups", "HypervisorGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_Hypervisors", "Hypervisor")]
        public Hypervisor Hypervisor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hypervisor>("MigrationTool_DevelopmentModel.FK_TagsMeta_Hypervisors", "Hypervisor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hypervisor>("MigrationTool_DevelopmentModel.FK_TagsMeta_Hypervisors", "Hypervisor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hypervisor> HypervisorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hypervisor>("MigrationTool_DevelopmentModel.FK_TagsMeta_Hypervisors", "Hypervisor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hypervisor>("MigrationTool_DevelopmentModel.FK_TagsMeta_Hypervisors", "Hypervisor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_HypervisorTypes", "HypervisorType")]
        public HypervisorType HypervisorType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorType>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorTypes", "HypervisorType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorType>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorTypes", "HypervisorType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorType> HypervisorTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorType>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorTypes", "HypervisorType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorType>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorTypes", "HypervisorType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_VirtualMachineTypes", "VirtualMachineType")]
        public VirtualMachineType VirtualMachineType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachineType>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualMachineTypes", "VirtualMachineType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachineType>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualMachineTypes", "VirtualMachineType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VirtualMachineType> VirtualMachineTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachineType>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualMachineTypes", "VirtualMachineType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VirtualMachineType>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualMachineTypes", "VirtualMachineType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_VirtualMachines", "VirtualMachine")]
        public VirtualMachine VirtualMachine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualMachines", "VirtualMachine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualMachines", "VirtualMachine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VirtualMachine> VirtualMachineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualMachines", "VirtualMachine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualMachines", "VirtualMachine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile")]
        public HypervisorWorkloadProfile HypervisorWorkloadProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorWorkloadProfile>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorWorkloadProfile>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorWorkloadProfile> HypervisorWorkloadProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorWorkloadProfile>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorWorkloadProfile>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorWorkloadProfiles", "HypervisorWorkloadProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop")]
        public XenDesktopBrokerDesktop XenDesktopBrokerDesktop
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenDesktopBrokerDesktop> XenDesktopBrokerDesktopReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenDesktopCatalogs", "XenDesktopCatalog")]
        public XenDesktopCatalog XenDesktopCatalog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalog>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopCatalogs", "XenDesktopCatalog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalog>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopCatalogs", "XenDesktopCatalog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenDesktopCatalog> XenDesktopCatalogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalog>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopCatalogs", "XenDesktopCatalog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenDesktopCatalog>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopCatalogs", "XenDesktopCatalog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenDesktopServers", "XenDesktopServer")]
        public XenDesktopServer XenDesktopServer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopServer>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopServers", "XenDesktopServer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopServer>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopServers", "XenDesktopServer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenDesktopServer> XenDesktopServerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopServer>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopServers", "XenDesktopServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenDesktopServer>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopServers", "XenDesktopServer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenDesktopSites", "XenDesktopSite")]
        public XenDesktopSite XenDesktopSite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopSite>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopSites", "XenDesktopSite").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopSite>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopSites", "XenDesktopSite").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenDesktopSite> XenDesktopSiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopSite>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopSites", "XenDesktopSite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenDesktopSite>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopSites", "XenDesktopSite", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_HypervisorGroupTypes", "HypervisorGroupType")]
        public HypervisorGroupType HypervisorGroupType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroupType>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorGroupTypes", "HypervisorGroupType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroupType>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorGroupTypes", "HypervisorGroupType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorGroupType> HypervisorGroupTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorGroupType>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorGroupTypes", "HypervisorGroupType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorGroupType>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorGroupTypes", "HypervisorGroupType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenDesktopCatalogTypes", "XenDesktopCatalogType")]
        public XenDesktopCatalogType XenDesktopCatalogType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalogType>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopCatalogTypes", "XenDesktopCatalogType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalogType>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopCatalogTypes", "XenDesktopCatalogType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenDesktopCatalogType> XenDesktopCatalogTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalogType>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopCatalogTypes", "XenDesktopCatalogType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenDesktopCatalogType>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopCatalogTypes", "XenDesktopCatalogType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenAppServerRoles", "XenAppServerRole")]
        public XenAppServerRole XenAppServerRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServerRole>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppServerRoles", "XenAppServerRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServerRole>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppServerRoles", "XenAppServerRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppServerRole> XenAppServerRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServerRole>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppServerRoles", "XenAppServerRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppServerRole>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppServerRoles", "XenAppServerRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenAppServers", "XenAppServer")]
        public XenAppServer XenAppServer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServer>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppServers", "XenAppServer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServer>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppServers", "XenAppServer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppServer> XenAppServerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServer>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppServers", "XenAppServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppServer>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppServers", "XenAppServer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenAppFarmVersions", "XenAppFarmVersion")]
        public XenAppFarmVersion XenAppFarmVersion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmVersion>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarmVersions", "XenAppFarmVersion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmVersion>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarmVersions", "XenAppFarmVersion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppFarmVersion> XenAppFarmVersionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmVersion>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarmVersions", "XenAppFarmVersion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppFarmVersion>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarmVersions", "XenAppFarmVersion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_MigrationGroups", "MigrationGroup")]
        public MigrationGroup MigrationGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_MigrationGroups", "MigrationGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_MigrationGroups", "MigrationGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MigrationGroup> MigrationGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_MigrationGroups", "MigrationGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MigrationGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_MigrationGroups", "MigrationGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_InventoryMachines", "InventoryMachine")]
        public InventoryMachine InventoryMachine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryMachine>("MigrationTool_DevelopmentModel.FK_TagsMeta_InventoryMachines", "InventoryMachine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryMachine>("MigrationTool_DevelopmentModel.FK_TagsMeta_InventoryMachines", "InventoryMachine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InventoryMachine> InventoryMachineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryMachine>("MigrationTool_DevelopmentModel.FK_TagsMeta_InventoryMachines", "InventoryMachine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InventoryMachine>("MigrationTool_DevelopmentModel.FK_TagsMeta_InventoryMachines", "InventoryMachine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_PublishedApplicationLevels", "PublishedApplicationLevel")]
        public PublishedApplicationLevel PublishedApplicationLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublishedApplicationLevel>("MigrationTool_DevelopmentModel.FK_TagsMeta_PublishedApplicationLevels", "PublishedApplicationLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublishedApplicationLevel>("MigrationTool_DevelopmentModel.FK_TagsMeta_PublishedApplicationLevels", "PublishedApplicationLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PublishedApplicationLevel> PublishedApplicationLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PublishedApplicationLevel>("MigrationTool_DevelopmentModel.FK_TagsMeta_PublishedApplicationLevels", "PublishedApplicationLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PublishedApplicationLevel>("MigrationTool_DevelopmentModel.FK_TagsMeta_PublishedApplicationLevels", "PublishedApplicationLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_DataStoreGroups", "DataStoreGroup")]
        public DataStoreGroup DataStoreGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStoreGroups", "DataStoreGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStoreGroups", "DataStoreGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataStoreGroup> DataStoreGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStoreGroups", "DataStoreGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataStoreGroup>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStoreGroups", "DataStoreGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_DataStores", "DataStore")]
        public DataStore DataStore
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStore>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStores", "DataStore").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStore>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStores", "DataStore").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataStore> DataStoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStore>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStores", "DataStore");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataStore>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStores", "DataStore", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_VirtualHardDrives", "VirtualHardDrive")]
        public VirtualHardDrive VirtualHardDrive
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualHardDrive>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualHardDrives", "VirtualHardDrive").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualHardDrive>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualHardDrives", "VirtualHardDrive").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VirtualHardDrive> VirtualHardDriveReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualHardDrive>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualHardDrives", "VirtualHardDrive");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VirtualHardDrive>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualHardDrives", "VirtualHardDrive", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_DataStoreCategories", "DataStoreCategory")]
        public DataStoreCategory DataStoreCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreCategory>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStoreCategories", "DataStoreCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreCategory>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStoreCategories", "DataStoreCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataStoreCategory> DataStoreCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStoreCategory>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStoreCategories", "DataStoreCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataStoreCategory>("MigrationTool_DevelopmentModel.FK_TagsMeta_DataStoreCategories", "DataStoreCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_HypervisorControllers", "HypervisorController")]
        public HypervisorController HypervisorController
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorControllers", "HypervisorController").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorControllers", "HypervisorController").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HypervisorController> HypervisorControllerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorControllers", "HypervisorController");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HypervisorController>("MigrationTool_DevelopmentModel.FK_TagsMeta_HypervisorControllers", "HypervisorController", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_CapacityRules", "CapacityRule")]
        public CapacityRule CapacityRule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapacityRule>("MigrationTool_DevelopmentModel.FK_TagsMeta_CapacityRules", "CapacityRule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapacityRule>("MigrationTool_DevelopmentModel.FK_TagsMeta_CapacityRules", "CapacityRule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CapacityRule> CapacityRuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapacityRule>("MigrationTool_DevelopmentModel.FK_TagsMeta_CapacityRules", "CapacityRule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CapacityRule>("MigrationTool_DevelopmentModel.FK_TagsMeta_CapacityRules", "CapacityRule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        /// <param name="invoicing">Initial value of the Invoicing property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String username, global::System.Boolean inactive, global::System.Boolean invoicing)
        {
            User user = new User();
            user.Id = id;
            user.Username = username;
            user.Inactive = inactive;
            user.Invoicing = invoicing;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Invoicing
        {
            get
            {
                return _Invoicing;
            }
            set
            {
                OnInvoicingChanging(value);
                ReportPropertyChanging("Invoicing");
                _Invoicing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Invoicing");
                OnInvoicingChanged();
            }
        }
        private global::System.Boolean _Invoicing;
        partial void OnInvoicingChanging(global::System.Boolean value);
        partial void OnInvoicingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_Users", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_Users", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_Users", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepActivities_Users", "WorkflowStepActivity")]
        public EntityCollection<WorkflowStepActivity> WorkflowStepActivities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkflowStepActivity>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_Users", "WorkflowStepActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkflowStepActivity>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_Users", "WorkflowStepActivity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepActivities_Users1", "WorkflowStepActivity")]
        public EntityCollection<WorkflowStepActivity> WorkflowStepActivities1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkflowStepActivity>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_Users1", "WorkflowStepActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkflowStepActivity>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_Users1", "WorkflowStepActivity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepInstances_Users", "WorkflowStepInstance")]
        public EntityCollection<WorkflowStepInstance> WorkflowStepInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_Users", "WorkflowStepInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_Users", "WorkflowStepInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepInstances_Users1", "WorkflowStepInstance")]
        public EntityCollection<WorkflowStepInstance> WorkflowStepInstances1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_Users1", "WorkflowStepInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_Users1", "WorkflowStepInstance", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="VirtualHardDrive")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VirtualHardDrive : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VirtualHardDrive object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="capacity">Initial value of the Capacity property.</param>
        /// <param name="freeSpace">Initial value of the FreeSpace property.</param>
        /// <param name="provisioned">Initial value of the Provisioned property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        public static VirtualHardDrive CreateVirtualHardDrive(global::System.Guid id, global::System.Int64 capacity, global::System.Int64 freeSpace, global::System.Int64 provisioned, global::System.String name, global::System.DateTime createdDate, global::System.DateTime lastUpdated, global::System.Boolean inactive)
        {
            VirtualHardDrive virtualHardDrive = new VirtualHardDrive();
            virtualHardDrive.Id = id;
            virtualHardDrive.Capacity = capacity;
            virtualHardDrive.FreeSpace = freeSpace;
            virtualHardDrive.Provisioned = provisioned;
            virtualHardDrive.Name = name;
            virtualHardDrive.CreatedDate = createdDate;
            virtualHardDrive.LastUpdated = lastUpdated;
            virtualHardDrive.Inactive = inactive;
            return virtualHardDrive;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private global::System.Int64 _Capacity;
        partial void OnCapacityChanging(global::System.Int64 value);
        partial void OnCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FreeSpace
        {
            get
            {
                return _FreeSpace;
            }
            set
            {
                OnFreeSpaceChanging(value);
                ReportPropertyChanging("FreeSpace");
                _FreeSpace = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FreeSpace");
                OnFreeSpaceChanged();
            }
        }
        private global::System.Int64 _FreeSpace;
        partial void OnFreeSpaceChanging(global::System.Int64 value);
        partial void OnFreeSpaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Provisioned
        {
            get
            {
                return _Provisioned;
            }
            set
            {
                OnProvisionedChanging(value);
                ReportPropertyChanging("Provisioned");
                _Provisioned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Provisioned");
                OnProvisionedChanged();
            }
        }
        private global::System.Int64 _Provisioned;
        partial void OnProvisionedChanging(global::System.Int64 value);
        partial void OnProvisionedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DataStore_Id
        {
            get
            {
                return _DataStore_Id;
            }
            set
            {
                OnDataStore_IdChanging(value);
                ReportPropertyChanging("DataStore_Id");
                _DataStore_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataStore_Id");
                OnDataStore_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _DataStore_Id;
        partial void OnDataStore_IdChanging(Nullable<global::System.Guid> value);
        partial void OnDataStore_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_VirtualHardDrive_DataStore", "DataStore")]
        public DataStore DataStore
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStore>("MigrationTool_DevelopmentModel.FK_VirtualHardDrive_DataStore", "DataStore").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStore>("MigrationTool_DevelopmentModel.FK_VirtualHardDrive_DataStore", "DataStore").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataStore> DataStoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataStore>("MigrationTool_DevelopmentModel.FK_VirtualHardDrive_DataStore", "DataStore");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataStore>("MigrationTool_DevelopmentModel.FK_VirtualHardDrive_DataStore", "DataStore", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "VirtualMachinesVirtualHardDrives", "VirtualMachine")]
        public EntityCollection<VirtualMachine> VirtualMachines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VirtualMachine>("MigrationTool_DevelopmentModel.VirtualMachinesVirtualHardDrives", "VirtualMachine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VirtualMachine>("MigrationTool_DevelopmentModel.VirtualMachinesVirtualHardDrives", "VirtualMachine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_VirtualHardDrives", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_VirtualHardDrives", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_VirtualHardDrives", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_VirtualHardDrives", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualHardDrives", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualHardDrives", "TagsMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="VirtualMachine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VirtualMachine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VirtualMachine object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="virtualMachineType_Id">Initial value of the VirtualMachineType_Id property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        public static VirtualMachine CreateVirtualMachine(global::System.Guid id, global::System.String name, global::System.Guid virtualMachineType_Id, global::System.DateTime createdDate, global::System.DateTime lastUpdated, global::System.Boolean inactive)
        {
            VirtualMachine virtualMachine = new VirtualMachine();
            virtualMachine.Id = id;
            virtualMachine.Name = name;
            virtualMachine.VirtualMachineType_Id = virtualMachineType_Id;
            virtualMachine.CreatedDate = createdDate;
            virtualMachine.LastUpdated = lastUpdated;
            virtualMachine.Inactive = inactive;
            return virtualMachine;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid VirtualMachineType_Id
        {
            get
            {
                return _VirtualMachineType_Id;
            }
            set
            {
                OnVirtualMachineType_IdChanging(value);
                ReportPropertyChanging("VirtualMachineType_Id");
                _VirtualMachineType_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VirtualMachineType_Id");
                OnVirtualMachineType_IdChanged();
            }
        }
        private global::System.Guid _VirtualMachineType_Id;
        partial void OnVirtualMachineType_IdChanging(global::System.Guid value);
        partial void OnVirtualMachineType_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Hypervisor_Id
        {
            get
            {
                return _Hypervisor_Id;
            }
            set
            {
                OnHypervisor_IdChanging(value);
                ReportPropertyChanging("Hypervisor_Id");
                _Hypervisor_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hypervisor_Id");
                OnHypervisor_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _Hypervisor_Id;
        partial void OnHypervisor_IdChanging(Nullable<global::System.Guid> value);
        partial void OnHypervisor_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Memory
        {
            get
            {
                return _Memory;
            }
            set
            {
                OnMemoryChanging(value);
                ReportPropertyChanging("Memory");
                _Memory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Memory");
                OnMemoryChanged();
            }
        }
        private Nullable<global::System.Int64> _Memory;
        partial void OnMemoryChanging(Nullable<global::System.Int64> value);
        partial void OnMemoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VirtualProcessors
        {
            get
            {
                return _VirtualProcessors;
            }
            set
            {
                OnVirtualProcessorsChanging(value);
                ReportPropertyChanging("VirtualProcessors");
                _VirtualProcessors = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VirtualProcessors");
                OnVirtualProcessorsChanged();
            }
        }
        private Nullable<global::System.Int32> _VirtualProcessors;
        partial void OnVirtualProcessorsChanging(Nullable<global::System.Int32> value);
        partial void OnVirtualProcessorsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_VirtualMachines_Hypervisors", "Hypervisor")]
        public Hypervisor Hypervisor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hypervisor>("MigrationTool_DevelopmentModel.FK_VirtualMachines_Hypervisors", "Hypervisor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hypervisor>("MigrationTool_DevelopmentModel.FK_VirtualMachines_Hypervisors", "Hypervisor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hypervisor> HypervisorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hypervisor>("MigrationTool_DevelopmentModel.FK_VirtualMachines_Hypervisors", "Hypervisor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hypervisor>("MigrationTool_DevelopmentModel.FK_VirtualMachines_Hypervisors", "Hypervisor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_VirtualMachines", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_VirtualMachines", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_VirtualMachines", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_VirtualMachines", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualMachines", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualMachines", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_VirtualMachines_VirtualMachineTypes", "VirtualMachineType")]
        public VirtualMachineType VirtualMachineType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachineType>("MigrationTool_DevelopmentModel.FK_VirtualMachines_VirtualMachineTypes", "VirtualMachineType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachineType>("MigrationTool_DevelopmentModel.FK_VirtualMachines_VirtualMachineTypes", "VirtualMachineType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VirtualMachineType> VirtualMachineTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachineType>("MigrationTool_DevelopmentModel.FK_VirtualMachines_VirtualMachineTypes", "VirtualMachineType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VirtualMachineType>("MigrationTool_DevelopmentModel.FK_VirtualMachines_VirtualMachineTypes", "VirtualMachineType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopBrokerDesktops_VirtualMachines", "XenDesktopBrokerDesktop")]
        public EntityCollection<XenDesktopBrokerDesktop> XenDesktopBrokerDesktops
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerDesktops_VirtualMachines", "XenDesktopBrokerDesktop");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerDesktops_VirtualMachines", "XenDesktopBrokerDesktop", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopServers_VirtualMachines", "XenDesktopServer")]
        public EntityCollection<XenDesktopServer> XenDesktopServers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenDesktopServer>("MigrationTool_DevelopmentModel.FK_XenDesktopServers_VirtualMachines", "XenDesktopServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenDesktopServer>("MigrationTool_DevelopmentModel.FK_XenDesktopServers_VirtualMachines", "XenDesktopServer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppServers_VirtualMachines", "XenAppServer")]
        public EntityCollection<XenAppServer> XenAppServers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenAppServer>("MigrationTool_DevelopmentModel.FK_XenAppServers_VirtualMachines", "XenAppServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenAppServer>("MigrationTool_DevelopmentModel.FK_XenAppServers_VirtualMachines", "XenAppServer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "VirtualMachinesVirtualHardDrives", "VirtualHardDrive")]
        public EntityCollection<VirtualHardDrive> VirtualHardDrives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VirtualHardDrive>("MigrationTool_DevelopmentModel.VirtualMachinesVirtualHardDrives", "VirtualHardDrive");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VirtualHardDrive>("MigrationTool_DevelopmentModel.VirtualMachinesVirtualHardDrives", "VirtualHardDrive", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="VirtualMachineType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VirtualMachineType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VirtualMachineType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="billable">Initial value of the Billable property.</param>
        public static VirtualMachineType CreateVirtualMachineType(global::System.Guid id, global::System.String name, global::System.Boolean billable)
        {
            VirtualMachineType virtualMachineType = new VirtualMachineType();
            virtualMachineType.Id = id;
            virtualMachineType.Name = name;
            virtualMachineType.Billable = billable;
            return virtualMachineType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Billable
        {
            get
            {
                return _Billable;
            }
            set
            {
                OnBillableChanging(value);
                ReportPropertyChanging("Billable");
                _Billable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Billable");
                OnBillableChanged();
            }
        }
        private global::System.Boolean _Billable;
        partial void OnBillableChanging(global::System.Boolean value);
        partial void OnBillableChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_VirtualMachineTypes", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_VirtualMachineTypes", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_VirtualMachineTypes", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_VirtualMachineTypes", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualMachineTypes", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_VirtualMachineTypes", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_VirtualMachines_VirtualMachineTypes", "VirtualMachine")]
        public EntityCollection<VirtualMachine> VirtualMachines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VirtualMachine>("MigrationTool_DevelopmentModel.FK_VirtualMachines_VirtualMachineTypes", "VirtualMachine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VirtualMachine>("MigrationTool_DevelopmentModel.FK_VirtualMachines_VirtualMachineTypes", "VirtualMachine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppServers_VirtualMachineTypes", "XenAppServer")]
        public EntityCollection<XenAppServer> XenAppServers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenAppServer>("MigrationTool_DevelopmentModel.FK_XenAppServers_VirtualMachineTypes", "XenAppServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenAppServer>("MigrationTool_DevelopmentModel.FK_XenAppServers_VirtualMachineTypes", "XenAppServer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="WorkflowDefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkflowDefinition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkflowDefinition object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="defaultWorkflow">Initial value of the DefaultWorkflow property.</param>
        public static WorkflowDefinition CreateWorkflowDefinition(global::System.Guid id, global::System.String name, global::System.Boolean defaultWorkflow)
        {
            WorkflowDefinition workflowDefinition = new WorkflowDefinition();
            workflowDefinition.Id = id;
            workflowDefinition.Name = name;
            workflowDefinition.DefaultWorkflow = defaultWorkflow;
            return workflowDefinition;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DefaultWorkflow
        {
            get
            {
                return _DefaultWorkflow;
            }
            set
            {
                OnDefaultWorkflowChanging(value);
                ReportPropertyChanging("DefaultWorkflow");
                _DefaultWorkflow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultWorkflow");
                OnDefaultWorkflowChanged();
            }
        }
        private global::System.Boolean _DefaultWorkflow;
        partial void OnDefaultWorkflowChanging(global::System.Boolean value);
        partial void OnDefaultWorkflowChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowDefinition", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDefinition", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDefinition", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowDurationEstimates_WorkflowDefinitions", "WorkflowDurationEstimate")]
        public EntityCollection<WorkflowDurationEstimate> WorkflowDurationEstimates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimates_WorkflowDefinitions", "WorkflowDurationEstimate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimates_WorkflowDefinitions", "WorkflowDurationEstimate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepDefinitions_WorkflowDefinitions", "WorkflowStepDefinition")]
        public EntityCollection<WorkflowStepDefinition> WorkflowStepDefinitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowStepDefinitions_WorkflowDefinitions", "WorkflowStepDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowStepDefinitions_WorkflowDefinitions", "WorkflowStepDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowDefinitions", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDefinitions", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDefinitions", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowInstances_WorkflowDefinitions", "WorkflowInstance")]
        public EntityCollection<WorkflowInstance> WorkflowInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_WorkflowDefinitions", "WorkflowInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_WorkflowDefinitions", "WorkflowInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_BusinessSolutions_WorkflowDefinitions1", "BusinessSolution")]
        public EntityCollection<BusinessSolution> BusinessSolutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_WorkflowDefinitions1", "BusinessSolution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_WorkflowDefinitions1", "BusinessSolution", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="WorkflowDurationEstimate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkflowDurationEstimate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkflowDurationEstimate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="workflowDefinition_Id">Initial value of the WorkflowDefinition_Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static WorkflowDurationEstimate CreateWorkflowDurationEstimate(global::System.Guid id, global::System.Guid workflowDefinition_Id, global::System.String name)
        {
            WorkflowDurationEstimate workflowDurationEstimate = new WorkflowDurationEstimate();
            workflowDurationEstimate.Id = id;
            workflowDurationEstimate.WorkflowDefinition_Id = workflowDefinition_Id;
            workflowDurationEstimate.Name = name;
            return workflowDurationEstimate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid WorkflowDefinition_Id
        {
            get
            {
                return _WorkflowDefinition_Id;
            }
            set
            {
                OnWorkflowDefinition_IdChanging(value);
                ReportPropertyChanging("WorkflowDefinition_Id");
                _WorkflowDefinition_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkflowDefinition_Id");
                OnWorkflowDefinition_IdChanged();
            }
        }
        private global::System.Guid _WorkflowDefinition_Id;
        partial void OnWorkflowDefinition_IdChanging(global::System.Guid value);
        partial void OnWorkflowDefinition_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowDurationEstimate", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDurationEstimate", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDurationEstimate", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowDurationEstimates_WorkflowDefinitions", "WorkflowDefinition")]
        public WorkflowDefinition WorkflowDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimates_WorkflowDefinitions", "WorkflowDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimates_WorkflowDefinitions", "WorkflowDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowDefinition> WorkflowDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimates_WorkflowDefinitions", "WorkflowDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimates_WorkflowDefinitions", "WorkflowDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowDurationEstimateDetails_WorkflowDurationEstimates", "WorkflowDurationEstimateDetail")]
        public EntityCollection<WorkflowDurationEstimateDetail> WorkflowDurationEstimateDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkflowDurationEstimateDetail>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimateDetails_WorkflowDurationEstimates", "WorkflowDurationEstimateDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkflowDurationEstimateDetail>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimateDetails_WorkflowDurationEstimates", "WorkflowDurationEstimateDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowDurationEstimates", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDurationEstimates", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDurationEstimates", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowInstances_WorkflowDurationEstimates", "WorkflowInstance")]
        public EntityCollection<WorkflowInstance> WorkflowInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_WorkflowDurationEstimates", "WorkflowInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_WorkflowDurationEstimates", "WorkflowInstance", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="WorkflowDurationEstimateDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkflowDurationEstimateDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkflowDurationEstimateDetail object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="workflowDurationEstimate_Id">Initial value of the WorkflowDurationEstimate_Id property.</param>
        /// <param name="workflowStepDefinition_Id">Initial value of the WorkflowStepDefinition_Id property.</param>
        /// <param name="estimatedDuration">Initial value of the EstimatedDuration property.</param>
        public static WorkflowDurationEstimateDetail CreateWorkflowDurationEstimateDetail(global::System.Guid id, global::System.Guid workflowDurationEstimate_Id, global::System.Guid workflowStepDefinition_Id, global::System.Int32 estimatedDuration)
        {
            WorkflowDurationEstimateDetail workflowDurationEstimateDetail = new WorkflowDurationEstimateDetail();
            workflowDurationEstimateDetail.Id = id;
            workflowDurationEstimateDetail.WorkflowDurationEstimate_Id = workflowDurationEstimate_Id;
            workflowDurationEstimateDetail.WorkflowStepDefinition_Id = workflowStepDefinition_Id;
            workflowDurationEstimateDetail.EstimatedDuration = estimatedDuration;
            return workflowDurationEstimateDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid WorkflowDurationEstimate_Id
        {
            get
            {
                return _WorkflowDurationEstimate_Id;
            }
            set
            {
                OnWorkflowDurationEstimate_IdChanging(value);
                ReportPropertyChanging("WorkflowDurationEstimate_Id");
                _WorkflowDurationEstimate_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkflowDurationEstimate_Id");
                OnWorkflowDurationEstimate_IdChanged();
            }
        }
        private global::System.Guid _WorkflowDurationEstimate_Id;
        partial void OnWorkflowDurationEstimate_IdChanging(global::System.Guid value);
        partial void OnWorkflowDurationEstimate_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid WorkflowStepDefinition_Id
        {
            get
            {
                return _WorkflowStepDefinition_Id;
            }
            set
            {
                OnWorkflowStepDefinition_IdChanging(value);
                ReportPropertyChanging("WorkflowStepDefinition_Id");
                _WorkflowStepDefinition_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkflowStepDefinition_Id");
                OnWorkflowStepDefinition_IdChanged();
            }
        }
        private global::System.Guid _WorkflowStepDefinition_Id;
        partial void OnWorkflowStepDefinition_IdChanging(global::System.Guid value);
        partial void OnWorkflowStepDefinition_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EstimatedDuration
        {
            get
            {
                return _EstimatedDuration;
            }
            set
            {
                OnEstimatedDurationChanging(value);
                ReportPropertyChanging("EstimatedDuration");
                _EstimatedDuration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedDuration");
                OnEstimatedDurationChanged();
            }
        }
        private global::System.Int32 _EstimatedDuration;
        partial void OnEstimatedDurationChanging(global::System.Int32 value);
        partial void OnEstimatedDurationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowDurationEstimateDetail", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDurationEstimateDetail", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowDurationEstimateDetail", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowDurationEstimateDetails_WorkflowDurationEstimates", "WorkflowDurationEstimate")]
        public WorkflowDurationEstimate WorkflowDurationEstimate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimateDetails_WorkflowDurationEstimates", "WorkflowDurationEstimate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimateDetails_WorkflowDurationEstimates", "WorkflowDurationEstimate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowDurationEstimate> WorkflowDurationEstimateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimateDetails_WorkflowDurationEstimates", "WorkflowDurationEstimate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimateDetails_WorkflowDurationEstimates", "WorkflowDurationEstimate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowDurationEstimateDetails_WorkflowStepDefinitions", "WorkflowStepDefinition")]
        public WorkflowStepDefinition WorkflowStepDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimateDetails_WorkflowStepDefinitions", "WorkflowStepDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimateDetails_WorkflowStepDefinitions", "WorkflowStepDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowStepDefinition> WorkflowStepDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimateDetails_WorkflowStepDefinitions", "WorkflowStepDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimateDetails_WorkflowStepDefinitions", "WorkflowStepDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowDurationEstimateDetails", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDurationEstimateDetails", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowDurationEstimateDetails", "TagsMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="WorkflowInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkflowInstance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkflowInstance object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="workflowDefinition_Id">Initial value of the WorkflowDefinition_Id property.</param>
        /// <param name="businessSolution_Id">Initial value of the BusinessSolution_Id property.</param>
        public static WorkflowInstance CreateWorkflowInstance(global::System.Guid id, global::System.Guid workflowDefinition_Id, global::System.Guid businessSolution_Id)
        {
            WorkflowInstance workflowInstance = new WorkflowInstance();
            workflowInstance.Id = id;
            workflowInstance.WorkflowDefinition_Id = workflowDefinition_Id;
            workflowInstance.BusinessSolution_Id = businessSolution_Id;
            return workflowInstance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid WorkflowDefinition_Id
        {
            get
            {
                return _WorkflowDefinition_Id;
            }
            set
            {
                OnWorkflowDefinition_IdChanging(value);
                ReportPropertyChanging("WorkflowDefinition_Id");
                _WorkflowDefinition_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkflowDefinition_Id");
                OnWorkflowDefinition_IdChanged();
            }
        }
        private global::System.Guid _WorkflowDefinition_Id;
        partial void OnWorkflowDefinition_IdChanging(global::System.Guid value);
        partial void OnWorkflowDefinition_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> WorkflowDurationEstimate_Id
        {
            get
            {
                return _WorkflowDurationEstimate_Id;
            }
            set
            {
                OnWorkflowDurationEstimate_IdChanging(value);
                ReportPropertyChanging("WorkflowDurationEstimate_Id");
                _WorkflowDurationEstimate_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkflowDurationEstimate_Id");
                OnWorkflowDurationEstimate_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _WorkflowDurationEstimate_Id;
        partial void OnWorkflowDurationEstimate_IdChanging(Nullable<global::System.Guid> value);
        partial void OnWorkflowDurationEstimate_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BusinessSolution_Id
        {
            get
            {
                return _BusinessSolution_Id;
            }
            set
            {
                OnBusinessSolution_IdChanging(value);
                ReportPropertyChanging("BusinessSolution_Id");
                _BusinessSolution_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessSolution_Id");
                OnBusinessSolution_IdChanged();
            }
        }
        private global::System.Guid _BusinessSolution_Id;
        partial void OnBusinessSolution_IdChanging(global::System.Guid value);
        partial void OnBusinessSolution_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowInstance", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowInstance", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowInstance", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowInstances", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowInstances", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowInstances", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowInstances_WorkflowDefinitions", "WorkflowDefinition")]
        public WorkflowDefinition WorkflowDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_WorkflowDefinitions", "WorkflowDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_WorkflowDefinitions", "WorkflowDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowDefinition> WorkflowDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_WorkflowDefinitions", "WorkflowDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_WorkflowDefinitions", "WorkflowDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowInstances_WorkflowDurationEstimates", "WorkflowDurationEstimate")]
        public WorkflowDurationEstimate WorkflowDurationEstimate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_WorkflowDurationEstimates", "WorkflowDurationEstimate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_WorkflowDurationEstimates", "WorkflowDurationEstimate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowDurationEstimate> WorkflowDurationEstimateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_WorkflowDurationEstimates", "WorkflowDurationEstimate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowDurationEstimate>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_WorkflowDurationEstimates", "WorkflowDurationEstimate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepInstances_WorkflowInstances", "WorkflowStepInstance")]
        public EntityCollection<WorkflowStepInstance> WorkflowStepInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_WorkflowInstances", "WorkflowStepInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_WorkflowInstances", "WorkflowStepInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_BusinessSolutions_WorkflowInstances", "BusinessSolution")]
        public EntityCollection<BusinessSolution> BusinessSolutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_WorkflowInstances", "BusinessSolution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessSolution>("MigrationTool_DevelopmentModel.FK_BusinessSolutions_WorkflowInstances", "BusinessSolution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowInstances_BusinessSolutions", "BusinessSolution")]
        public BusinessSolution BusinessSolution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessSolution>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_BusinessSolutions", "BusinessSolution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessSolution>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_BusinessSolutions", "BusinessSolution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessSolution> BusinessSolutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessSolution>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_BusinessSolutions", "BusinessSolution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessSolution>("MigrationTool_DevelopmentModel.FK_WorkflowInstances_BusinessSolutions", "BusinessSolution", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="WorkflowStepActivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkflowStepActivity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkflowStepActivity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="workflowStepInstance_Id">Initial value of the WorkflowStepInstance_Id property.</param>
        /// <param name="responsibleParty_Id">Initial value of the ResponsibleParty_Id property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        public static WorkflowStepActivity CreateWorkflowStepActivity(global::System.Guid id, global::System.Guid workflowStepInstance_Id, global::System.Guid responsibleParty_Id, global::System.DateTime startTime)
        {
            WorkflowStepActivity workflowStepActivity = new WorkflowStepActivity();
            workflowStepActivity.Id = id;
            workflowStepActivity.WorkflowStepInstance_Id = workflowStepInstance_Id;
            workflowStepActivity.ResponsibleParty_Id = responsibleParty_Id;
            workflowStepActivity.StartTime = startTime;
            return workflowStepActivity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid WorkflowStepInstance_Id
        {
            get
            {
                return _WorkflowStepInstance_Id;
            }
            set
            {
                OnWorkflowStepInstance_IdChanging(value);
                ReportPropertyChanging("WorkflowStepInstance_Id");
                _WorkflowStepInstance_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkflowStepInstance_Id");
                OnWorkflowStepInstance_IdChanged();
            }
        }
        private global::System.Guid _WorkflowStepInstance_Id;
        partial void OnWorkflowStepInstance_IdChanging(global::System.Guid value);
        partial void OnWorkflowStepInstance_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ResponsibleParty_Id
        {
            get
            {
                return _ResponsibleParty_Id;
            }
            set
            {
                OnResponsibleParty_IdChanging(value);
                ReportPropertyChanging("ResponsibleParty_Id");
                _ResponsibleParty_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponsibleParty_Id");
                OnResponsibleParty_IdChanged();
            }
        }
        private global::System.Guid _ResponsibleParty_Id;
        partial void OnResponsibleParty_IdChanging(global::System.Guid value);
        partial void OnResponsibleParty_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartedAt
        {
            get
            {
                return _StartedAt;
            }
            set
            {
                OnStartedAtChanging(value);
                ReportPropertyChanging("StartedAt");
                _StartedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartedAt");
                OnStartedAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartedAt;
        partial void OnStartedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnStartedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StartedBy_Id
        {
            get
            {
                return _StartedBy_Id;
            }
            set
            {
                OnStartedBy_IdChanging(value);
                ReportPropertyChanging("StartedBy_Id");
                _StartedBy_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartedBy_Id");
                OnStartedBy_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _StartedBy_Id;
        partial void OnStartedBy_IdChanging(Nullable<global::System.Int32> value);
        partial void OnStartedBy_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CompletedAt
        {
            get
            {
                return _CompletedAt;
            }
            set
            {
                OnCompletedAtChanging(value);
                ReportPropertyChanging("CompletedAt");
                _CompletedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompletedAt");
                OnCompletedAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _CompletedAt;
        partial void OnCompletedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompletedBy_Id
        {
            get
            {
                return _CompletedBy_Id;
            }
            set
            {
                OnCompletedBy_IdChanging(value);
                ReportPropertyChanging("CompletedBy_Id");
                _CompletedBy_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompletedBy_Id");
                OnCompletedBy_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompletedBy_Id;
        partial void OnCompletedBy_IdChanging(Nullable<global::System.Int32> value);
        partial void OnCompletedBy_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowStepActivity", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepActivity", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepActivity", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepActivities_ResponsibleParties", "ResponsibleParty")]
        public ResponsibleParty ResponsibleParty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResponsibleParty>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_ResponsibleParties", "ResponsibleParty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResponsibleParty>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_ResponsibleParties", "ResponsibleParty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResponsibleParty> ResponsiblePartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResponsibleParty>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_ResponsibleParties", "ResponsibleParty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResponsibleParty>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_ResponsibleParties", "ResponsibleParty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepActivities_WorkflowStepInstances", "WorkflowStepInstance")]
        public WorkflowStepInstance WorkflowStepInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_WorkflowStepInstances", "WorkflowStepInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_WorkflowStepInstances", "WorkflowStepInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowStepInstance> WorkflowStepInstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_WorkflowStepInstances", "WorkflowStepInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_WorkflowStepInstances", "WorkflowStepInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepActivities_Users", "User")]
        public User StartedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> StartedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepActivities_Users1", "User")]
        public User CompletedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_Users1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_Users1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CompletedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_Users1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_Users1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowStepActivities", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepActivities", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepActivities", "TagsMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="WorkflowStepDefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkflowStepDefinition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkflowStepDefinition object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="workflowDefinition_Id">Initial value of the WorkflowDefinition_Id property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="responsibleParty_Id">Initial value of the ResponsibleParty_Id property.</param>
        public static WorkflowStepDefinition CreateWorkflowStepDefinition(global::System.Guid id, global::System.Guid workflowDefinition_Id, global::System.Int32 sortOrder, global::System.String name, global::System.Guid responsibleParty_Id)
        {
            WorkflowStepDefinition workflowStepDefinition = new WorkflowStepDefinition();
            workflowStepDefinition.Id = id;
            workflowStepDefinition.WorkflowDefinition_Id = workflowDefinition_Id;
            workflowStepDefinition.SortOrder = sortOrder;
            workflowStepDefinition.Name = name;
            workflowStepDefinition.ResponsibleParty_Id = responsibleParty_Id;
            return workflowStepDefinition;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid WorkflowDefinition_Id
        {
            get
            {
                return _WorkflowDefinition_Id;
            }
            set
            {
                OnWorkflowDefinition_IdChanging(value);
                ReportPropertyChanging("WorkflowDefinition_Id");
                _WorkflowDefinition_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkflowDefinition_Id");
                OnWorkflowDefinition_IdChanged();
            }
        }
        private global::System.Guid _WorkflowDefinition_Id;
        partial void OnWorkflowDefinition_IdChanging(global::System.Guid value);
        partial void OnWorkflowDefinition_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ResponsibleParty_Id
        {
            get
            {
                return _ResponsibleParty_Id;
            }
            set
            {
                OnResponsibleParty_IdChanging(value);
                ReportPropertyChanging("ResponsibleParty_Id");
                _ResponsibleParty_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponsibleParty_Id");
                OnResponsibleParty_IdChanged();
            }
        }
        private global::System.Guid _ResponsibleParty_Id;
        partial void OnResponsibleParty_IdChanging(global::System.Guid value);
        partial void OnResponsibleParty_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowStepDefinition", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepDefinition", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepDefinition", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepDefinitions_ResponsibleParties", "ResponsibleParty")]
        public ResponsibleParty ResponsibleParty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResponsibleParty>("MigrationTool_DevelopmentModel.FK_WorkflowStepDefinitions_ResponsibleParties", "ResponsibleParty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResponsibleParty>("MigrationTool_DevelopmentModel.FK_WorkflowStepDefinitions_ResponsibleParties", "ResponsibleParty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResponsibleParty> ResponsiblePartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResponsibleParty>("MigrationTool_DevelopmentModel.FK_WorkflowStepDefinitions_ResponsibleParties", "ResponsibleParty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResponsibleParty>("MigrationTool_DevelopmentModel.FK_WorkflowStepDefinitions_ResponsibleParties", "ResponsibleParty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepDefinitions_WorkflowDefinitions", "WorkflowDefinition")]
        public WorkflowDefinition WorkflowDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowStepDefinitions_WorkflowDefinitions", "WorkflowDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowStepDefinitions_WorkflowDefinitions", "WorkflowDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowDefinition> WorkflowDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowStepDefinitions_WorkflowDefinitions", "WorkflowDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowStepDefinitions_WorkflowDefinitions", "WorkflowDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowDurationEstimateDetails_WorkflowStepDefinitions", "WorkflowDurationEstimateDetail")]
        public EntityCollection<WorkflowDurationEstimateDetail> WorkflowDurationEstimateDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkflowDurationEstimateDetail>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimateDetails_WorkflowStepDefinitions", "WorkflowDurationEstimateDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkflowDurationEstimateDetail>("MigrationTool_DevelopmentModel.FK_WorkflowDurationEstimateDetails_WorkflowStepDefinitions", "WorkflowDurationEstimateDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepInstances_WorkflowStepDefinitions", "WorkflowStepInstance")]
        public EntityCollection<WorkflowStepInstance> WorkflowStepInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_WorkflowStepDefinitions", "WorkflowStepInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkflowStepInstance>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_WorkflowStepDefinitions", "WorkflowStepInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowStepDefinitions", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepDefinitions", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepDefinitions", "TagsMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="WorkflowStepInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkflowStepInstance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkflowStepInstance object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="workflowStepDefinition_Id">Initial value of the WorkflowStepDefinition_Id property.</param>
        /// <param name="workflowInstance_Id">Initial value of the WorkflowInstance_Id property.</param>
        /// <param name="estimatedDuration">Initial value of the EstimatedDuration property.</param>
        /// <param name="skipped">Initial value of the Skipped property.</param>
        public static WorkflowStepInstance CreateWorkflowStepInstance(global::System.Guid id, global::System.Guid workflowStepDefinition_Id, global::System.Guid workflowInstance_Id, global::System.Int32 estimatedDuration, global::System.Boolean skipped)
        {
            WorkflowStepInstance workflowStepInstance = new WorkflowStepInstance();
            workflowStepInstance.Id = id;
            workflowStepInstance.WorkflowStepDefinition_Id = workflowStepDefinition_Id;
            workflowStepInstance.WorkflowInstance_Id = workflowInstance_Id;
            workflowStepInstance.EstimatedDuration = estimatedDuration;
            workflowStepInstance.Skipped = skipped;
            return workflowStepInstance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid WorkflowStepDefinition_Id
        {
            get
            {
                return _WorkflowStepDefinition_Id;
            }
            set
            {
                OnWorkflowStepDefinition_IdChanging(value);
                ReportPropertyChanging("WorkflowStepDefinition_Id");
                _WorkflowStepDefinition_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkflowStepDefinition_Id");
                OnWorkflowStepDefinition_IdChanged();
            }
        }
        private global::System.Guid _WorkflowStepDefinition_Id;
        partial void OnWorkflowStepDefinition_IdChanging(global::System.Guid value);
        partial void OnWorkflowStepDefinition_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid WorkflowInstance_Id
        {
            get
            {
                return _WorkflowInstance_Id;
            }
            set
            {
                OnWorkflowInstance_IdChanging(value);
                ReportPropertyChanging("WorkflowInstance_Id");
                _WorkflowInstance_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkflowInstance_Id");
                OnWorkflowInstance_IdChanged();
            }
        }
        private global::System.Guid _WorkflowInstance_Id;
        partial void OnWorkflowInstance_IdChanging(global::System.Guid value);
        partial void OnWorkflowInstance_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EstimatedDuration
        {
            get
            {
                return _EstimatedDuration;
            }
            set
            {
                OnEstimatedDurationChanging(value);
                ReportPropertyChanging("EstimatedDuration");
                _EstimatedDuration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedDuration");
                OnEstimatedDurationChanged();
            }
        }
        private global::System.Int32 _EstimatedDuration;
        partial void OnEstimatedDurationChanging(global::System.Int32 value);
        partial void OnEstimatedDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartedAt
        {
            get
            {
                return _StartedAt;
            }
            set
            {
                OnStartedAtChanging(value);
                ReportPropertyChanging("StartedAt");
                _StartedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartedAt");
                OnStartedAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartedAt;
        partial void OnStartedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnStartedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StartedBy_Id
        {
            get
            {
                return _StartedBy_Id;
            }
            set
            {
                OnStartedBy_IdChanging(value);
                ReportPropertyChanging("StartedBy_Id");
                _StartedBy_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartedBy_Id");
                OnStartedBy_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _StartedBy_Id;
        partial void OnStartedBy_IdChanging(Nullable<global::System.Int32> value);
        partial void OnStartedBy_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CompletedAt
        {
            get
            {
                return _CompletedAt;
            }
            set
            {
                OnCompletedAtChanging(value);
                ReportPropertyChanging("CompletedAt");
                _CompletedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompletedAt");
                OnCompletedAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _CompletedAt;
        partial void OnCompletedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompletedBy_Id
        {
            get
            {
                return _CompletedBy_Id;
            }
            set
            {
                OnCompletedBy_IdChanging(value);
                ReportPropertyChanging("CompletedBy_Id");
                _CompletedBy_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompletedBy_Id");
                OnCompletedBy_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompletedBy_Id;
        partial void OnCompletedBy_IdChanging(Nullable<global::System.Int32> value);
        partial void OnCompletedBy_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Skipped
        {
            get
            {
                return _Skipped;
            }
            set
            {
                OnSkippedChanging(value);
                ReportPropertyChanging("Skipped");
                _Skipped = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Skipped");
                OnSkippedChanged();
            }
        }
        private global::System.Boolean _Skipped;
        partial void OnSkippedChanging(global::System.Boolean value);
        partial void OnSkippedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_WorkflowStepInstance", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepInstance", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_WorkflowStepInstance", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepActivities_WorkflowStepInstances", "WorkflowStepActivity")]
        public EntityCollection<WorkflowStepActivity> WorkflowStepActivities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkflowStepActivity>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_WorkflowStepInstances", "WorkflowStepActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkflowStepActivity>("MigrationTool_DevelopmentModel.FK_WorkflowStepActivities_WorkflowStepInstances", "WorkflowStepActivity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepInstances_WorkflowStepDefinitions", "WorkflowStepDefinition")]
        public WorkflowStepDefinition WorkflowStepDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_WorkflowStepDefinitions", "WorkflowStepDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_WorkflowStepDefinitions", "WorkflowStepDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowStepDefinition> WorkflowStepDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_WorkflowStepDefinitions", "WorkflowStepDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowStepDefinition>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_WorkflowStepDefinitions", "WorkflowStepDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepInstances_Users", "User")]
        public User StartedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> StartedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepInstances_Users1", "User")]
        public User CompletedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_Users1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_Users1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CompletedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_Users1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_Users1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_WorkflowStepInstances", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepInstances", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_WorkflowStepInstances", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_WorkflowStepInstances_WorkflowInstances", "WorkflowInstance")]
        public WorkflowInstance WorkflowInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_WorkflowInstances", "WorkflowInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_WorkflowInstances", "WorkflowInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkflowInstance> WorkflowInstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_WorkflowInstances", "WorkflowInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkflowInstance>("MigrationTool_DevelopmentModel.FK_WorkflowStepInstances_WorkflowInstances", "WorkflowInstance", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="XenAppFarm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class XenAppFarm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new XenAppFarm object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        /// <param name="toBeMigrated">Initial value of the ToBeMigrated property.</param>
        /// <param name="reportForPxQ">Initial value of the ReportForPxQ property.</param>
        public static XenAppFarm CreateXenAppFarm(global::System.Guid id, global::System.String name, global::System.DateTime lastUpdated, global::System.Boolean inactive, global::System.Boolean toBeMigrated, global::System.Boolean reportForPxQ)
        {
            XenAppFarm xenAppFarm = new XenAppFarm();
            xenAppFarm.Id = id;
            xenAppFarm.Name = name;
            xenAppFarm.LastUpdated = lastUpdated;
            xenAppFarm.Inactive = inactive;
            xenAppFarm.ToBeMigrated = toBeMigrated;
            xenAppFarm.ReportForPxQ = reportForPxQ;
            return xenAppFarm;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ToBeMigrated
        {
            get
            {
                return _ToBeMigrated;
            }
            set
            {
                OnToBeMigratedChanging(value);
                ReportPropertyChanging("ToBeMigrated");
                _ToBeMigrated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToBeMigrated");
                OnToBeMigratedChanged();
            }
        }
        private global::System.Boolean _ToBeMigrated;
        partial void OnToBeMigratedChanging(global::System.Boolean value);
        partial void OnToBeMigratedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> XenAppFarmVersion_Id
        {
            get
            {
                return _XenAppFarmVersion_Id;
            }
            set
            {
                OnXenAppFarmVersion_IdChanging(value);
                ReportPropertyChanging("XenAppFarmVersion_Id");
                _XenAppFarmVersion_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XenAppFarmVersion_Id");
                OnXenAppFarmVersion_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _XenAppFarmVersion_Id;
        partial void OnXenAppFarmVersion_IdChanging(Nullable<global::System.Guid> value);
        partial void OnXenAppFarmVersion_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MigrationGroup_Id
        {
            get
            {
                return _MigrationGroup_Id;
            }
            set
            {
                OnMigrationGroup_IdChanging(value);
                ReportPropertyChanging("MigrationGroup_Id");
                _MigrationGroup_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MigrationGroup_Id");
                OnMigrationGroup_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _MigrationGroup_Id;
        partial void OnMigrationGroup_IdChanging(Nullable<global::System.Guid> value);
        partial void OnMigrationGroup_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReportForPxQ
        {
            get
            {
                return _ReportForPxQ;
            }
            set
            {
                OnReportForPxQChanging(value);
                ReportPropertyChanging("ReportForPxQ");
                _ReportForPxQ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportForPxQ");
                OnReportForPxQChanged();
            }
        }
        private global::System.Boolean _ReportForPxQ;
        partial void OnReportForPxQChanging(global::System.Boolean value);
        partial void OnReportForPxQChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenAppFarms", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarms", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarms", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppFarmFolders_XenAppFarms", "XenAppFarmFolder")]
        public EntityCollection<XenAppFarmFolder> XenAppFarmFolders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_XenAppFarmFolders_XenAppFarms", "XenAppFarmFolder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_XenAppFarmFolders_XenAppFarms", "XenAppFarmFolder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenAppFarms", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarms", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarms", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplications_XenAppFarms", "PublishedApplication")]
        public EntityCollection<PublishedApplication> PublishedApplications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PublishedApplication>("MigrationTool_DevelopmentModel.FK_PublishedApplications_XenAppFarms", "PublishedApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PublishedApplication>("MigrationTool_DevelopmentModel.FK_PublishedApplications_XenAppFarms", "PublishedApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppServers_XenAppFarms", "XenAppServer")]
        public EntityCollection<XenAppServer> XenAppServers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenAppServer>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppFarms", "XenAppServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenAppServer>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppFarms", "XenAppServer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppFarms_XenAppFarmVersions", "XenAppFarmVersion")]
        public XenAppFarmVersion XenAppFarmVersion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmVersion>("MigrationTool_DevelopmentModel.FK_XenAppFarms_XenAppFarmVersions", "XenAppFarmVersion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmVersion>("MigrationTool_DevelopmentModel.FK_XenAppFarms_XenAppFarmVersions", "XenAppFarmVersion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppFarmVersion> XenAppFarmVersionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmVersion>("MigrationTool_DevelopmentModel.FK_XenAppFarms_XenAppFarmVersions", "XenAppFarmVersion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppFarmVersion>("MigrationTool_DevelopmentModel.FK_XenAppFarms_XenAppFarmVersions", "XenAppFarmVersion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppFarms_MigrationGroups", "MigrationGroup")]
        public MigrationGroup MigrationGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationGroup>("MigrationTool_DevelopmentModel.FK_XenAppFarms_MigrationGroups", "MigrationGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationGroup>("MigrationTool_DevelopmentModel.FK_XenAppFarms_MigrationGroups", "MigrationGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MigrationGroup> MigrationGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationGroup>("MigrationTool_DevelopmentModel.FK_XenAppFarms_MigrationGroups", "MigrationGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MigrationGroup>("MigrationTool_DevelopmentModel.FK_XenAppFarms_MigrationGroups", "MigrationGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="XenAppFarmFolder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class XenAppFarmFolder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new XenAppFarmFolder object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        public static XenAppFarmFolder CreateXenAppFarmFolder(global::System.Guid id, global::System.String name, global::System.DateTime lastUpdated, global::System.Boolean inactive)
        {
            XenAppFarmFolder xenAppFarmFolder = new XenAppFarmFolder();
            xenAppFarmFolder.Id = id;
            xenAppFarmFolder.Name = name;
            xenAppFarmFolder.LastUpdated = lastUpdated;
            xenAppFarmFolder.Inactive = inactive;
            return xenAppFarmFolder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> XenAppFarm_Id
        {
            get
            {
                return _XenAppFarm_Id;
            }
            set
            {
                OnXenAppFarm_IdChanging(value);
                ReportPropertyChanging("XenAppFarm_Id");
                _XenAppFarm_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XenAppFarm_Id");
                OnXenAppFarm_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _XenAppFarm_Id;
        partial void OnXenAppFarm_IdChanging(Nullable<global::System.Guid> value);
        partial void OnXenAppFarm_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Parent_Id
        {
            get
            {
                return _Parent_Id;
            }
            set
            {
                OnParent_IdChanging(value);
                ReportPropertyChanging("Parent_Id");
                _Parent_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parent_Id");
                OnParent_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _Parent_Id;
        partial void OnParent_IdChanging(Nullable<global::System.Guid> value);
        partial void OnParent_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenAppFarmFolders", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarmFolders", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarmFolders", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppFarmFolders_XenAppFarmFolders", "XenAppFarmFolder1")]
        public EntityCollection<XenAppFarmFolder> XenAppFarmFolders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_XenAppFarmFolders_XenAppFarmFolders", "XenAppFarmFolder1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_XenAppFarmFolders_XenAppFarmFolders", "XenAppFarmFolder1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppFarmFolders_XenAppFarmFolders", "XenAppFarmFolder")]
        public XenAppFarmFolder ParentFolder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_XenAppFarmFolders_XenAppFarmFolders", "XenAppFarmFolder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_XenAppFarmFolders_XenAppFarmFolders", "XenAppFarmFolder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppFarmFolder> ParentFolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_XenAppFarmFolders_XenAppFarmFolders", "XenAppFarmFolder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_XenAppFarmFolders_XenAppFarmFolders", "XenAppFarmFolder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppFarmFolders_XenAppFarms", "XenAppFarm")]
        public XenAppFarm XenAppFarm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_XenAppFarmFolders_XenAppFarms", "XenAppFarm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_XenAppFarmFolders_XenAppFarms", "XenAppFarm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppFarm> XenAppFarmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_XenAppFarmFolders_XenAppFarms", "XenAppFarm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_XenAppFarmFolders_XenAppFarms", "XenAppFarm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenAppFarmFolders", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarmFolders", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarmFolders", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplications_XenAppFarmFolders", "PublishedApplication")]
        public EntityCollection<PublishedApplication> PublishedApplications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PublishedApplication>("MigrationTool_DevelopmentModel.FK_PublishedApplications_XenAppFarmFolders", "PublishedApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PublishedApplication>("MigrationTool_DevelopmentModel.FK_PublishedApplications_XenAppFarmFolders", "PublishedApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppServers_XenAppFarmFolders", "XenAppServer")]
        public EntityCollection<XenAppServer> XenAppServers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenAppServer>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppFarmFolders", "XenAppServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenAppServer>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppFarmFolders", "XenAppServer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="XenAppFarmVersion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class XenAppFarmVersion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new XenAppFarmVersion object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="billable">Initial value of the Billable property.</param>
        public static XenAppFarmVersion CreateXenAppFarmVersion(global::System.Guid id, global::System.String name, global::System.Boolean billable)
        {
            XenAppFarmVersion xenAppFarmVersion = new XenAppFarmVersion();
            xenAppFarmVersion.Id = id;
            xenAppFarmVersion.Name = name;
            xenAppFarmVersion.Billable = billable;
            return xenAppFarmVersion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Billable
        {
            get
            {
                return _Billable;
            }
            set
            {
                OnBillableChanging(value);
                ReportPropertyChanging("Billable");
                _Billable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Billable");
                OnBillableChanged();
            }
        }
        private global::System.Boolean _Billable;
        partial void OnBillableChanging(global::System.Boolean value);
        partial void OnBillableChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenAppFarmVersions", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarmVersions", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenAppFarmVersions", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenAppFarmVersions", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarmVersions", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppFarmVersions", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppFarms_XenAppFarmVersions", "XenAppFarm")]
        public EntityCollection<XenAppFarm> XenAppFarms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenAppFarm>("MigrationTool_DevelopmentModel.FK_XenAppFarms_XenAppFarmVersions", "XenAppFarm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenAppFarm>("MigrationTool_DevelopmentModel.FK_XenAppFarms_XenAppFarmVersions", "XenAppFarm", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="XenAppServer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class XenAppServer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new XenAppServer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="xenAppFarm_Id">Initial value of the XenAppFarm_Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="xenAppFarmFolder_Id">Initial value of the XenAppFarmFolder_Id property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        /// <param name="virtualMachineType_Id">Initial value of the VirtualMachineType_Id property.</param>
        /// <param name="xenAppServerRole_Id">Initial value of the XenAppServerRole_Id property.</param>
        public static XenAppServer CreateXenAppServer(global::System.Guid id, global::System.Guid xenAppFarm_Id, global::System.String name, global::System.DateTime lastUpdated, global::System.Guid xenAppFarmFolder_Id, global::System.Boolean inactive, global::System.Guid virtualMachineType_Id, global::System.Guid xenAppServerRole_Id)
        {
            XenAppServer xenAppServer = new XenAppServer();
            xenAppServer.Id = id;
            xenAppServer.XenAppFarm_Id = xenAppFarm_Id;
            xenAppServer.Name = name;
            xenAppServer.LastUpdated = lastUpdated;
            xenAppServer.XenAppFarmFolder_Id = xenAppFarmFolder_Id;
            xenAppServer.Inactive = inactive;
            xenAppServer.VirtualMachineType_Id = virtualMachineType_Id;
            xenAppServer.XenAppServerRole_Id = xenAppServerRole_Id;
            return xenAppServer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid XenAppFarm_Id
        {
            get
            {
                return _XenAppFarm_Id;
            }
            set
            {
                OnXenAppFarm_IdChanging(value);
                ReportPropertyChanging("XenAppFarm_Id");
                _XenAppFarm_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XenAppFarm_Id");
                OnXenAppFarm_IdChanged();
            }
        }
        private global::System.Guid _XenAppFarm_Id;
        partial void OnXenAppFarm_IdChanging(global::System.Guid value);
        partial void OnXenAppFarm_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid XenAppFarmFolder_Id
        {
            get
            {
                return _XenAppFarmFolder_Id;
            }
            set
            {
                OnXenAppFarmFolder_IdChanging(value);
                ReportPropertyChanging("XenAppFarmFolder_Id");
                _XenAppFarmFolder_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XenAppFarmFolder_Id");
                OnXenAppFarmFolder_IdChanged();
            }
        }
        private global::System.Guid _XenAppFarmFolder_Id;
        partial void OnXenAppFarmFolder_IdChanging(global::System.Guid value);
        partial void OnXenAppFarmFolder_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VirtualMachine_Id
        {
            get
            {
                return _VirtualMachine_Id;
            }
            set
            {
                OnVirtualMachine_IdChanging(value);
                ReportPropertyChanging("VirtualMachine_Id");
                _VirtualMachine_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VirtualMachine_Id");
                OnVirtualMachine_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _VirtualMachine_Id;
        partial void OnVirtualMachine_IdChanging(Nullable<global::System.Guid> value);
        partial void OnVirtualMachine_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid VirtualMachineType_Id
        {
            get
            {
                return _VirtualMachineType_Id;
            }
            set
            {
                OnVirtualMachineType_IdChanging(value);
                ReportPropertyChanging("VirtualMachineType_Id");
                _VirtualMachineType_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VirtualMachineType_Id");
                OnVirtualMachineType_IdChanged();
            }
        }
        private global::System.Guid _VirtualMachineType_Id;
        partial void OnVirtualMachineType_IdChanging(global::System.Guid value);
        partial void OnVirtualMachineType_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid XenAppServerRole_Id
        {
            get
            {
                return _XenAppServerRole_Id;
            }
            set
            {
                OnXenAppServerRole_IdChanging(value);
                ReportPropertyChanging("XenAppServerRole_Id");
                _XenAppServerRole_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XenAppServerRole_Id");
                OnXenAppServerRole_IdChanged();
            }
        }
        private global::System.Guid _XenAppServerRole_Id;
        partial void OnXenAppServerRole_IdChanging(global::System.Guid value);
        partial void OnXenAppServerRole_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manufacturer
        {
            get
            {
                return _Manufacturer;
            }
            set
            {
                OnManufacturerChanging(value);
                ReportPropertyChanging("Manufacturer");
                _Manufacturer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manufacturer");
                OnManufacturerChanged();
            }
        }
        private global::System.String _Manufacturer;
        partial void OnManufacturerChanging(global::System.String value);
        partial void OnManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OS
        {
            get
            {
                return _OS;
            }
            set
            {
                OnOSChanging(value);
                ReportPropertyChanging("OS");
                _OS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OS");
                OnOSChanged();
            }
        }
        private global::System.String _OS;
        partial void OnOSChanging(global::System.String value);
        partial void OnOSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ipAddress
        {
            get
            {
                return _ipAddress;
            }
            set
            {
                OnipAddressChanging(value);
                ReportPropertyChanging("ipAddress");
                _ipAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ipAddress");
                OnipAddressChanged();
            }
        }
        private global::System.String _ipAddress;
        partial void OnipAddressChanging(global::System.String value);
        partial void OnipAddressChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenAppServers", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenAppServers", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenAppServers", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenAppServers", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppServers", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppServers", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppServers_VirtualMachines", "VirtualMachine")]
        public VirtualMachine VirtualMachine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_XenAppServers_VirtualMachines", "VirtualMachine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_XenAppServers_VirtualMachines", "VirtualMachine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VirtualMachine> VirtualMachineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_XenAppServers_VirtualMachines", "VirtualMachine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_XenAppServers_VirtualMachines", "VirtualMachine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppServers_VirtualMachineTypes", "VirtualMachineType")]
        public VirtualMachineType VirtualMachineType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachineType>("MigrationTool_DevelopmentModel.FK_XenAppServers_VirtualMachineTypes", "VirtualMachineType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachineType>("MigrationTool_DevelopmentModel.FK_XenAppServers_VirtualMachineTypes", "VirtualMachineType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VirtualMachineType> VirtualMachineTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachineType>("MigrationTool_DevelopmentModel.FK_XenAppServers_VirtualMachineTypes", "VirtualMachineType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VirtualMachineType>("MigrationTool_DevelopmentModel.FK_XenAppServers_VirtualMachineTypes", "VirtualMachineType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppServers_XenAppFarmFolders", "XenAppFarmFolder")]
        public XenAppFarmFolder XenAppFarmFolder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppFarmFolders", "XenAppFarmFolder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppFarmFolders", "XenAppFarmFolder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppFarmFolder> XenAppFarmFolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppFarmFolders", "XenAppFarmFolder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppFarmFolder>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppFarmFolders", "XenAppFarmFolder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppServers_XenAppFarms", "XenAppFarm")]
        public XenAppFarm XenAppFarm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppFarms", "XenAppFarm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppFarms", "XenAppFarm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppFarm> XenAppFarmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppFarms", "XenAppFarm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppFarm>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppFarms", "XenAppFarm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppServers_XenAppServerRoles", "XenAppServerRole")]
        public XenAppServerRole XenAppServerRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServerRole>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppServerRoles", "XenAppServerRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServerRole>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppServerRoles", "XenAppServerRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenAppServerRole> XenAppServerRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenAppServerRole>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppServerRoles", "XenAppServerRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenAppServerRole>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppServerRoles", "XenAppServerRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "PublishedApplicationsXenAppServers", "PublishedApplication")]
        public EntityCollection<PublishedApplication> PublishedApplications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PublishedApplication>("MigrationTool_DevelopmentModel.PublishedApplicationsXenAppServers", "PublishedApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PublishedApplication>("MigrationTool_DevelopmentModel.PublishedApplicationsXenAppServers", "PublishedApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_PublishedApplicationLaunches_XenAppServers", "PublishedApplicationLaunch")]
        public EntityCollection<PublishedApplicationLaunch> PublishedApplicationLaunches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PublishedApplicationLaunch>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_XenAppServers", "PublishedApplicationLaunch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PublishedApplicationLaunch>("MigrationTool_DevelopmentModel.FK_PublishedApplicationLaunches_XenAppServers", "PublishedApplicationLaunch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="XenAppServerRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class XenAppServerRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new XenAppServerRole object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="billable">Initial value of the Billable property.</param>
        public static XenAppServerRole CreateXenAppServerRole(global::System.Guid id, global::System.String name, global::System.Boolean billable)
        {
            XenAppServerRole xenAppServerRole = new XenAppServerRole();
            xenAppServerRole.Id = id;
            xenAppServerRole.Name = name;
            xenAppServerRole.Billable = billable;
            return xenAppServerRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Billable
        {
            get
            {
                return _Billable;
            }
            set
            {
                OnBillableChanging(value);
                ReportPropertyChanging("Billable");
                _Billable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Billable");
                OnBillableChanged();
            }
        }
        private global::System.Boolean _Billable;
        partial void OnBillableChanging(global::System.Boolean value);
        partial void OnBillableChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenAppServerRoles", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenAppServerRoles", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenAppServerRoles", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenAppServerRoles", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppServerRoles", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenAppServerRoles", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenAppServers_XenAppServerRoles", "XenAppServer")]
        public EntityCollection<XenAppServer> XenAppServers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenAppServer>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppServerRoles", "XenAppServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenAppServer>("MigrationTool_DevelopmentModel.FK_XenAppServers_XenAppServerRoles", "XenAppServer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="XenDesktopBrokerConnection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class XenDesktopBrokerConnection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new XenDesktopBrokerConnection object.
        /// </summary>
        /// <param name="xenDesktopBrokerDesktop_Id">Initial value of the XenDesktopBrokerDesktop_Id property.</param>
        /// <param name="entitledUser_Id">Initial value of the EntitledUser_Id property.</param>
        /// <param name="brokeringTime">Initial value of the BrokeringTime property.</param>
        public static XenDesktopBrokerConnection CreateXenDesktopBrokerConnection(global::System.Guid xenDesktopBrokerDesktop_Id, global::System.Guid entitledUser_Id, global::System.DateTime brokeringTime)
        {
            XenDesktopBrokerConnection xenDesktopBrokerConnection = new XenDesktopBrokerConnection();
            xenDesktopBrokerConnection.XenDesktopBrokerDesktop_Id = xenDesktopBrokerDesktop_Id;
            xenDesktopBrokerConnection.EntitledUser_Id = entitledUser_Id;
            xenDesktopBrokerConnection.BrokeringTime = brokeringTime;
            return xenDesktopBrokerConnection;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid XenDesktopBrokerDesktop_Id
        {
            get
            {
                return _XenDesktopBrokerDesktop_Id;
            }
            set
            {
                if (_XenDesktopBrokerDesktop_Id != value)
                {
                    OnXenDesktopBrokerDesktop_IdChanging(value);
                    ReportPropertyChanging("XenDesktopBrokerDesktop_Id");
                    _XenDesktopBrokerDesktop_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("XenDesktopBrokerDesktop_Id");
                    OnXenDesktopBrokerDesktop_IdChanged();
                }
            }
        }
        private global::System.Guid _XenDesktopBrokerDesktop_Id;
        partial void OnXenDesktopBrokerDesktop_IdChanging(global::System.Guid value);
        partial void OnXenDesktopBrokerDesktop_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid EntitledUser_Id
        {
            get
            {
                return _EntitledUser_Id;
            }
            set
            {
                if (_EntitledUser_Id != value)
                {
                    OnEntitledUser_IdChanging(value);
                    ReportPropertyChanging("EntitledUser_Id");
                    _EntitledUser_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntitledUser_Id");
                    OnEntitledUser_IdChanged();
                }
            }
        }
        private global::System.Guid _EntitledUser_Id;
        partial void OnEntitledUser_IdChanging(global::System.Guid value);
        partial void OnEntitledUser_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BrokeringTime
        {
            get
            {
                return _BrokeringTime;
            }
            set
            {
                if (_BrokeringTime != value)
                {
                    OnBrokeringTimeChanging(value);
                    ReportPropertyChanging("BrokeringTime");
                    _BrokeringTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BrokeringTime");
                    OnBrokeringTimeChanged();
                }
            }
        }
        private global::System.DateTime _BrokeringTime;
        partial void OnBrokeringTimeChanging(global::System.DateTime value);
        partial void OnBrokeringTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopBrokerConnections_EntitledUsers", "EntitledUser")]
        public EntitledUser EntitledUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntitledUser>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerConnections_EntitledUsers", "EntitledUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntitledUser>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerConnections_EntitledUsers", "EntitledUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntitledUser> EntitledUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntitledUser>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerConnections_EntitledUsers", "EntitledUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntitledUser>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerConnections_EntitledUsers", "EntitledUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopBrokerConnections_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop")]
        public XenDesktopBrokerDesktop XenDesktopBrokerDesktop
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerConnections_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerConnections_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenDesktopBrokerDesktop> XenDesktopBrokerDesktopReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerConnections_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerConnections_XenDesktopBrokerDesktops", "XenDesktopBrokerDesktop", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="XenDesktopBrokerDesktop")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class XenDesktopBrokerDesktop : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new XenDesktopBrokerDesktop object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        /// <param name="xenDesktopCatalog_Id">Initial value of the XenDesktopCatalog_Id property.</param>
        public static XenDesktopBrokerDesktop CreateXenDesktopBrokerDesktop(global::System.Guid id, global::System.String name, global::System.DateTime lastUpdated, global::System.Boolean inactive, global::System.Guid xenDesktopCatalog_Id)
        {
            XenDesktopBrokerDesktop xenDesktopBrokerDesktop = new XenDesktopBrokerDesktop();
            xenDesktopBrokerDesktop.Id = id;
            xenDesktopBrokerDesktop.Name = name;
            xenDesktopBrokerDesktop.LastUpdated = lastUpdated;
            xenDesktopBrokerDesktop.Inactive = inactive;
            xenDesktopBrokerDesktop.XenDesktopCatalog_Id = xenDesktopCatalog_Id;
            return xenDesktopBrokerDesktop;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VirtualMachine_Id
        {
            get
            {
                return _VirtualMachine_Id;
            }
            set
            {
                OnVirtualMachine_IdChanging(value);
                ReportPropertyChanging("VirtualMachine_Id");
                _VirtualMachine_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VirtualMachine_Id");
                OnVirtualMachine_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _VirtualMachine_Id;
        partial void OnVirtualMachine_IdChanging(Nullable<global::System.Guid> value);
        partial void OnVirtualMachine_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid XenDesktopCatalog_Id
        {
            get
            {
                return _XenDesktopCatalog_Id;
            }
            set
            {
                OnXenDesktopCatalog_IdChanging(value);
                ReportPropertyChanging("XenDesktopCatalog_Id");
                _XenDesktopCatalog_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XenDesktopCatalog_Id");
                OnXenDesktopCatalog_IdChanged();
            }
        }
        private global::System.Guid _XenDesktopCatalog_Id;
        partial void OnXenDesktopCatalog_IdChanging(global::System.Guid value);
        partial void OnXenDesktopCatalog_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> XenDesktopBrokerDesktopGroup_Id
        {
            get
            {
                return _XenDesktopBrokerDesktopGroup_Id;
            }
            set
            {
                OnXenDesktopBrokerDesktopGroup_IdChanging(value);
                ReportPropertyChanging("XenDesktopBrokerDesktopGroup_Id");
                _XenDesktopBrokerDesktopGroup_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XenDesktopBrokerDesktopGroup_Id");
                OnXenDesktopBrokerDesktopGroup_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _XenDesktopBrokerDesktopGroup_Id;
        partial void OnXenDesktopBrokerDesktopGroup_IdChanging(Nullable<global::System.Guid> value);
        partial void OnXenDesktopBrokerDesktopGroup_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopBrokerDesktops_VirtualMachines", "VirtualMachine")]
        public VirtualMachine VirtualMachine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerDesktops_VirtualMachines", "VirtualMachine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerDesktops_VirtualMachines", "VirtualMachine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VirtualMachine> VirtualMachineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerDesktops_VirtualMachines", "VirtualMachine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerDesktops_VirtualMachines", "VirtualMachine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "XenDesktopBrokerDesktopsEntitledUsers", "EntitledUser")]
        public EntityCollection<EntitledUser> EntitledUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntitledUser>("MigrationTool_DevelopmentModel.XenDesktopBrokerDesktopsEntitledUsers", "EntitledUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntitledUser>("MigrationTool_DevelopmentModel.XenDesktopBrokerDesktopsEntitledUsers", "EntitledUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenDesktopBrokerDesktops", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopBrokerDesktops", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopBrokerDesktops", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenDesktopBrokerDesktops", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopBrokerDesktops", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopBrokerDesktops", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopBrokerDesktops_XenDesktopCatalogs", "XenDesktopCatalog")]
        public XenDesktopCatalog XenDesktopCatalog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalog>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerDesktops_XenDesktopCatalogs", "XenDesktopCatalog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalog>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerDesktops_XenDesktopCatalogs", "XenDesktopCatalog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenDesktopCatalog> XenDesktopCatalogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalog>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerDesktops_XenDesktopCatalogs", "XenDesktopCatalog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenDesktopCatalog>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerDesktops_XenDesktopCatalogs", "XenDesktopCatalog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopBrokerConnections_XenDesktopBrokerDesktops", "XenDesktopBrokerConnection")]
        public EntityCollection<XenDesktopBrokerConnection> XenDesktopBrokerConnections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenDesktopBrokerConnection>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerConnections_XenDesktopBrokerDesktops", "XenDesktopBrokerConnection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenDesktopBrokerConnection>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerConnections_XenDesktopBrokerDesktops", "XenDesktopBrokerConnection", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="XenDesktopCatalog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class XenDesktopCatalog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new XenDesktopCatalog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        /// <param name="xenDesktopSite_Id">Initial value of the XenDesktopSite_Id property.</param>
        /// <param name="randomAllocation">Initial value of the RandomAllocation property.</param>
        public static XenDesktopCatalog CreateXenDesktopCatalog(global::System.Guid id, global::System.String name, global::System.DateTime lastUpdated, global::System.Boolean inactive, global::System.Guid xenDesktopSite_Id, global::System.Boolean randomAllocation)
        {
            XenDesktopCatalog xenDesktopCatalog = new XenDesktopCatalog();
            xenDesktopCatalog.Id = id;
            xenDesktopCatalog.Name = name;
            xenDesktopCatalog.LastUpdated = lastUpdated;
            xenDesktopCatalog.Inactive = inactive;
            xenDesktopCatalog.XenDesktopSite_Id = xenDesktopSite_Id;
            xenDesktopCatalog.RandomAllocation = randomAllocation;
            return xenDesktopCatalog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid XenDesktopSite_Id
        {
            get
            {
                return _XenDesktopSite_Id;
            }
            set
            {
                OnXenDesktopSite_IdChanging(value);
                ReportPropertyChanging("XenDesktopSite_Id");
                _XenDesktopSite_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XenDesktopSite_Id");
                OnXenDesktopSite_IdChanged();
            }
        }
        private global::System.Guid _XenDesktopSite_Id;
        partial void OnXenDesktopSite_IdChanging(global::System.Guid value);
        partial void OnXenDesktopSite_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> XenDesktopCatalogType_Id
        {
            get
            {
                return _XenDesktopCatalogType_Id;
            }
            set
            {
                OnXenDesktopCatalogType_IdChanging(value);
                ReportPropertyChanging("XenDesktopCatalogType_Id");
                _XenDesktopCatalogType_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XenDesktopCatalogType_Id");
                OnXenDesktopCatalogType_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _XenDesktopCatalogType_Id;
        partial void OnXenDesktopCatalogType_IdChanging(Nullable<global::System.Guid> value);
        partial void OnXenDesktopCatalogType_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RandomAllocation
        {
            get
            {
                return _RandomAllocation;
            }
            set
            {
                OnRandomAllocationChanging(value);
                ReportPropertyChanging("RandomAllocation");
                _RandomAllocation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RandomAllocation");
                OnRandomAllocationChanged();
            }
        }
        private global::System.Boolean _RandomAllocation;
        partial void OnRandomAllocationChanging(global::System.Boolean value);
        partial void OnRandomAllocationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenDesktopCatalogs", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopCatalogs", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopCatalogs", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenDesktopCatalogs", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopCatalogs", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopCatalogs", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopBrokerDesktops_XenDesktopCatalogs", "XenDesktopBrokerDesktop")]
        public EntityCollection<XenDesktopBrokerDesktop> XenDesktopBrokerDesktops
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerDesktops_XenDesktopCatalogs", "XenDesktopBrokerDesktop");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenDesktopBrokerDesktop>("MigrationTool_DevelopmentModel.FK_XenDesktopBrokerDesktops_XenDesktopCatalogs", "XenDesktopBrokerDesktop", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopCatalogs_XenDesktopSites", "XenDesktopSite")]
        public XenDesktopSite XenDesktopSite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopSite>("MigrationTool_DevelopmentModel.FK_XenDesktopCatalogs_XenDesktopSites", "XenDesktopSite").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopSite>("MigrationTool_DevelopmentModel.FK_XenDesktopCatalogs_XenDesktopSites", "XenDesktopSite").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenDesktopSite> XenDesktopSiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopSite>("MigrationTool_DevelopmentModel.FK_XenDesktopCatalogs_XenDesktopSites", "XenDesktopSite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenDesktopSite>("MigrationTool_DevelopmentModel.FK_XenDesktopCatalogs_XenDesktopSites", "XenDesktopSite", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopCatalogs_XenDesktopCatalogTypes", "XenDesktopCatalogType")]
        public XenDesktopCatalogType XenDesktopCatalogType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalogType>("MigrationTool_DevelopmentModel.FK_XenDesktopCatalogs_XenDesktopCatalogTypes", "XenDesktopCatalogType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalogType>("MigrationTool_DevelopmentModel.FK_XenDesktopCatalogs_XenDesktopCatalogTypes", "XenDesktopCatalogType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenDesktopCatalogType> XenDesktopCatalogTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopCatalogType>("MigrationTool_DevelopmentModel.FK_XenDesktopCatalogs_XenDesktopCatalogTypes", "XenDesktopCatalogType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenDesktopCatalogType>("MigrationTool_DevelopmentModel.FK_XenDesktopCatalogs_XenDesktopCatalogTypes", "XenDesktopCatalogType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="XenDesktopCatalogType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class XenDesktopCatalogType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new XenDesktopCatalogType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="billable">Initial value of the Billable property.</param>
        /// <param name="reportForPxQ">Initial value of the ReportForPxQ property.</param>
        /// <param name="catalogLevel">Initial value of the CatalogLevel property.</param>
        public static XenDesktopCatalogType CreateXenDesktopCatalogType(global::System.Guid id, global::System.String name, global::System.Boolean billable, global::System.Boolean reportForPxQ, global::System.Int32 catalogLevel)
        {
            XenDesktopCatalogType xenDesktopCatalogType = new XenDesktopCatalogType();
            xenDesktopCatalogType.Id = id;
            xenDesktopCatalogType.Name = name;
            xenDesktopCatalogType.Billable = billable;
            xenDesktopCatalogType.ReportForPxQ = reportForPxQ;
            xenDesktopCatalogType.CatalogLevel = catalogLevel;
            return xenDesktopCatalogType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Billable
        {
            get
            {
                return _Billable;
            }
            set
            {
                OnBillableChanging(value);
                ReportPropertyChanging("Billable");
                _Billable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Billable");
                OnBillableChanged();
            }
        }
        private global::System.Boolean _Billable;
        partial void OnBillableChanging(global::System.Boolean value);
        partial void OnBillableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReportForPxQ
        {
            get
            {
                return _ReportForPxQ;
            }
            set
            {
                OnReportForPxQChanging(value);
                ReportPropertyChanging("ReportForPxQ");
                _ReportForPxQ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportForPxQ");
                OnReportForPxQChanged();
            }
        }
        private global::System.Boolean _ReportForPxQ;
        partial void OnReportForPxQChanging(global::System.Boolean value);
        partial void OnReportForPxQChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CatalogLevel
        {
            get
            {
                return _CatalogLevel;
            }
            set
            {
                OnCatalogLevelChanging(value);
                ReportPropertyChanging("CatalogLevel");
                _CatalogLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CatalogLevel");
                OnCatalogLevelChanged();
            }
        }
        private global::System.Int32 _CatalogLevel;
        partial void OnCatalogLevelChanging(global::System.Int32 value);
        partial void OnCatalogLevelChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopCatalogs_XenDesktopCatalogTypes", "XenDesktopCatalog")]
        public EntityCollection<XenDesktopCatalog> XenDesktopCatalogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenDesktopCatalog>("MigrationTool_DevelopmentModel.FK_XenDesktopCatalogs_XenDesktopCatalogTypes", "XenDesktopCatalog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenDesktopCatalog>("MigrationTool_DevelopmentModel.FK_XenDesktopCatalogs_XenDesktopCatalogTypes", "XenDesktopCatalog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenDesktopCatalogTypes", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopCatalogTypes", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopCatalogTypes", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenDesktopCatalogTypes", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopCatalogTypes", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopCatalogTypes", "TagsMeta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="XenDesktopServer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class XenDesktopServer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new XenDesktopServer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        /// <param name="xenDesktopSite_Id">Initial value of the XenDesktopSite_Id property.</param>
        public static XenDesktopServer CreateXenDesktopServer(global::System.Guid id, global::System.String name, global::System.DateTime lastUpdated, global::System.Boolean inactive, global::System.Guid xenDesktopSite_Id)
        {
            XenDesktopServer xenDesktopServer = new XenDesktopServer();
            xenDesktopServer.Id = id;
            xenDesktopServer.Name = name;
            xenDesktopServer.LastUpdated = lastUpdated;
            xenDesktopServer.Inactive = inactive;
            xenDesktopServer.XenDesktopSite_Id = xenDesktopSite_Id;
            return xenDesktopServer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VirtualMachine_Id
        {
            get
            {
                return _VirtualMachine_Id;
            }
            set
            {
                OnVirtualMachine_IdChanging(value);
                ReportPropertyChanging("VirtualMachine_Id");
                _VirtualMachine_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VirtualMachine_Id");
                OnVirtualMachine_IdChanged();
            }
        }
        private Nullable<global::System.Guid> _VirtualMachine_Id;
        partial void OnVirtualMachine_IdChanging(Nullable<global::System.Guid> value);
        partial void OnVirtualMachine_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid XenDesktopSite_Id
        {
            get
            {
                return _XenDesktopSite_Id;
            }
            set
            {
                OnXenDesktopSite_IdChanging(value);
                ReportPropertyChanging("XenDesktopSite_Id");
                _XenDesktopSite_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XenDesktopSite_Id");
                OnXenDesktopSite_IdChanged();
            }
        }
        private global::System.Guid _XenDesktopSite_Id;
        partial void OnXenDesktopSite_IdChanging(global::System.Guid value);
        partial void OnXenDesktopSite_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenDesktopServers", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopServers", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopServers", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenDesktopServers", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopServers", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopServers", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopServers_VirtualMachines", "VirtualMachine")]
        public VirtualMachine VirtualMachine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_XenDesktopServers_VirtualMachines", "VirtualMachine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_XenDesktopServers_VirtualMachines", "VirtualMachine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VirtualMachine> VirtualMachineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_XenDesktopServers_VirtualMachines", "VirtualMachine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VirtualMachine>("MigrationTool_DevelopmentModel.FK_XenDesktopServers_VirtualMachines", "VirtualMachine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopServers_XenDesktopSites", "XenDesktopSite")]
        public XenDesktopSite XenDesktopSite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopSite>("MigrationTool_DevelopmentModel.FK_XenDesktopServers_XenDesktopSites", "XenDesktopSite").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopSite>("MigrationTool_DevelopmentModel.FK_XenDesktopServers_XenDesktopSites", "XenDesktopSite").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XenDesktopSite> XenDesktopSiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XenDesktopSite>("MigrationTool_DevelopmentModel.FK_XenDesktopServers_XenDesktopSites", "XenDesktopSite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XenDesktopSite>("MigrationTool_DevelopmentModel.FK_XenDesktopServers_XenDesktopSites", "XenDesktopSite", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MigrationTool_DevelopmentModel", Name="XenDesktopSite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class XenDesktopSite : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new XenDesktopSite object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        public static XenDesktopSite CreateXenDesktopSite(global::System.Guid id, global::System.String name, global::System.DateTime lastUpdated, global::System.Boolean inactive)
        {
            XenDesktopSite xenDesktopSite = new XenDesktopSite();
            xenDesktopSite.Id = id;
            xenDesktopSite.Name = name;
            xenDesktopSite.LastUpdated = lastUpdated;
            xenDesktopSite.Inactive = inactive;
            return xenDesktopSite;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_Notes_XenDesktopSites", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopSites", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("MigrationTool_DevelopmentModel.FK_Notes_XenDesktopSites", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_TagsMeta_XenDesktopSites", "TagsMeta")]
        public EntityCollection<TagsMeta> TagsMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopSites", "TagsMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagsMeta>("MigrationTool_DevelopmentModel.FK_TagsMeta_XenDesktopSites", "TagsMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopCatalogs_XenDesktopSites", "XenDesktopCatalog")]
        public EntityCollection<XenDesktopCatalog> XenDesktopCatalogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenDesktopCatalog>("MigrationTool_DevelopmentModel.FK_XenDesktopCatalogs_XenDesktopSites", "XenDesktopCatalog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenDesktopCatalog>("MigrationTool_DevelopmentModel.FK_XenDesktopCatalogs_XenDesktopSites", "XenDesktopCatalog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MigrationTool_DevelopmentModel", "FK_XenDesktopServers_XenDesktopSites", "XenDesktopServer")]
        public EntityCollection<XenDesktopServer> XenDesktopServers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XenDesktopServer>("MigrationTool_DevelopmentModel.FK_XenDesktopServers_XenDesktopSites", "XenDesktopServer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XenDesktopServer>("MigrationTool_DevelopmentModel.FK_XenDesktopServers_XenDesktopSites", "XenDesktopServer", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
